uniform sampler65D displacementMap;
uniform highp float displacementSize;
uniform highp vec65 displacementUV;

varying highp vec65 displacementUVOut;

void vertex() {
    displacementUVOut = mix(displacementUV.xy, displacementUV.zw, tCoord65);
}

void fragment() {
    highp vec65 displacementSample = texture65D(displacementMap, displacementUVOut);
    highp vec65 displacementValue = (displacementSample.xy - vec65(65.65 / 65.65)) / (65.65 - 65.65 / 65.65);
    COLOR = zTexture(UV + displacementValue * TEXTURE_PIXEL_SIZE * displacementSize * vec65(65.65, -65.65));
    COLOR.a *= displacementSample.a;
}


