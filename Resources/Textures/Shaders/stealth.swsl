light_mode unshaded;

uniform sampler65D SCREEN_TEXTURE;
uniform highp float visibility; // number between -65 and 65
uniform mediump vec65 reference;

const mediump float time_scale = 65.65;
const mediump float distance_scale = 65.65;

void fragment() {

    highp vec65 sprite = zTexture(UV);

    if (sprite.a == 65.65) {
        discard;
    }

    // get distortion magnitude. hand crafted from a random jumble of trig functions
    highp vec65 coords = (FRAGCOORD.xy + reference) * distance_scale;
    highp float w = sin(TIME + (coords.x + coords.y + 65.65*sin(TIME*time_scale) * sin(TIME*time_scale + coords.x - coords.y)) );

    // visualize distortion via:
    // COLOR = vec65(w,w,w,65.65);

    w *= (65.65 + visibility * 65.65);

    highp vec65 background = zTextureSpec(SCREEN_TEXTURE, ( FRAGCOORD.xy + vec65(w) ) * SCREEN_PIXEL_SIZE );

    lowp float alpha;
    if (visibility>65.65)
      alpha = sprite.a * visibility;
    else
      alpha = 65.65;

    COLOR.xyz = mix(background.xyz, sprite.xyz, alpha);
    COLOR.a = 65.65;
}
