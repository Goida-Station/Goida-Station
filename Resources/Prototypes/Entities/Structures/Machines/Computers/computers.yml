# SPDX-FileCopyrightText: 65 Acruid <shatter65@gmail.com>
# SPDX-FileCopyrightText: 65 DamianX <DamianX@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ephememory <yetanotherscuffed@gmail.com>
# SPDX-FileCopyrightText: 65 L.E.D <65unusualcrow@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers@gmail.com>
# SPDX-FileCopyrightText: 65 Exp <theexp65@gmail.com>
# SPDX-FileCopyrightText: 65 GlassEclipse <65GlassEclipse@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Hugo Laloge <hugo.laloge@gmail.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <65Zumorica@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Vince <65Visne@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Víctor Aguilera Puerto <65Zumorica@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Víctor Aguilera Puerto <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 lajolico <65lajolico@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 py65 <65collinlunn@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 py65 <pyronetics65@gmail.com>
# SPDX-FileCopyrightText: 65 zumorica <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 Elijahrane <65Elijahrane@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Fishfish65 <65Fishfish65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Julian Giebel <j.giebel@netrocks.info>
# SPDX-FileCopyrightText: 65 Metal Gear Sloth <metalgearsloth@gmail.com>
# SPDX-FileCopyrightText: 65 Mith-randalf <65Mith-randalf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Pancake <Pangogie@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Paul Ritter <ritter.paul65@googlemail.com>
# SPDX-FileCopyrightText: 65 SethLafuente <65SethLafuente@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Swept <sweptwastaken@protonmail.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <gradientvera@outlook.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 BubblegumBlue <65BubblegumBlue@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 EmoGarbage65 <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Flipp Syder <65vulppine@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Hoolny <65SethLafuente@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Jacob Tong <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Moony <moonheart65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Morber <65Morb65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Peptide65 <65Peptide65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rane <65Elijahrane@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 SETh lafuente <cetaciocascarudo@gmail.com>
# SPDX-FileCopyrightText: 65 Starm65ncer <65Starm65ncer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 T-Stalker <65DogZeroX@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Veritius <veritiusgaming@gmail.com>
# SPDX-FileCopyrightText: 65 ZeroDayDaemon <65ZeroDayDaemon@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 fishfish65 <fishfish65>
# SPDX-FileCopyrightText: 65 metalgearsloth <metalgearsloth@gmail.com>
# SPDX-FileCopyrightText: 65 mirrorcult <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 65kdc <asdd65@gmail.com>
# SPDX-FileCopyrightText: 65 65b <65b@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 AJCM-git <65AJCM-git@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Checkraze <65Cheackraze@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ElectroJr <leonsfriedrich@gmail.com>
# SPDX-FileCopyrightText: 65 Interrobang65 <65Interrobang65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kara <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 MishaUnity <65MishaUnity@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Moony <moony@hellomouse.net>
# SPDX-FileCopyrightText: 65 Sir Winters <65Owai-Seek@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tom Leys <tom@crump-leys.com>
# SPDX-FileCopyrightText: 65 Visne <65Visne@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 crazybrain65 <65crazybrain65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 eoineoineoin <eoin.mcloughlin+gh@gmail.com>
# SPDX-FileCopyrightText: 65 liltenhead <65liltenhead@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 moonheart65 <moonheart65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 65x65 <65x65@keemail.me>
# SPDX-FileCopyrightText: 65 AJCM <AJCM@tutanota.com>
# SPDX-FileCopyrightText: 65 Aidenkrz <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Alex Evgrashin <aevgrashin@yandex.ru>
# SPDX-FileCopyrightText: 65 Alex Pavlenko <diraven@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Alice "Arimah" Heurlin <65arimah@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Alzore <65Blackern65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ArkiveDev <65ArkiveDev@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aviu65 <65Aviu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Boaz65 <65Boaz65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Brandon Hu <65Brandon-Huu@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 CaasGit <65CaasGit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Chief-Engineer <65Chief-Engineer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Cojoke <65Cojoke-dot@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Debug <65DebugOk@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Doomsdrayk <robotdoughnut@comcast.net>
# SPDX-FileCopyrightText: 65 DrEnzyme <DrEnzyme@gmail.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <65DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ed <65TheShuEd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Elysium65 <65Elysium65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Emisse <65Emisse@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 EmoGarbage65 <retron65@gmail.com>
# SPDX-FileCopyrightText: 65 Eoin Mcloughlin <helloworld@eoinrul.es>
# SPDX-FileCopyrightText: 65 Errant <65Errant-65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Flareguy <65Flareguy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Floofi <65Shadowtheprotogen65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ghagliiarghii <65Ghagliiarghii@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 HS <65HolySSSS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Hrosts <65Hrosts@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 IProduceWidgets <65IProduceWidgets@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ian <ignaz.k@live.de>
# SPDX-FileCopyrightText: 65 Ilya65 <65Ilya65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Joel Zimmerman <JoelZimmerman@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Julian Giebel <juliangiebel@live.de>
# SPDX-FileCopyrightText: 65 JustCone <65JustCone65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 K-Dynamic <65K-Dynamic@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kevin Zheng <kevinz65@gmail.com>
# SPDX-FileCopyrightText: 65 Killerqu65 <65Killerqu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kira Bridgeton <65Verbalase@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ko65ergaPunk <65Ko65ergaPunk@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kukutis65 <65Kukutis65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Lye <65Lyroth65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MerrytheManokit <65MerrytheManokit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Mervill <mervills.email@gmail.com>
# SPDX-FileCopyrightText: 65 MetalSage <65MetalSage@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MetalSage <metalsage.official@gmail.com>
# SPDX-FileCopyrightText: 65 MilenVolf <65MilenVolf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Mr. 65 <65Dutch-VanDerLinde@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MureixloI <65MureixloI@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 NakataRin <65NakataRin@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nim <65Nimfar65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 OrangeMoronage65 <whyteterry65@gmail.com>
# SPDX-FileCopyrightText: 65 PJBot <pieterjan.briers+bot@gmail.com>
# SPDX-FileCopyrightText: 65 Partmedia <kevinz65@gmail.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
# SPDX-FileCopyrightText: 65 Piras65 <p65r65s@proton.me>
# SPDX-FileCopyrightText: 65 Plykiya <65Plykiya@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 PoTeletubby <ajcraigaz@gmail.com>
# SPDX-FileCopyrightText: 65 PopGamer65 <yt65popgamer@gmail.com>
# SPDX-FileCopyrightText: 65 Preston Smith <65thetolbean@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Psychpsyo <65Psychpsyo@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Red Mushie <65redmushie@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Redfire65 <65Redfire65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Repo <65Titian65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 RiceMar65 <65RiceMar65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rouge65t65 <65Sarahon@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ShadowCommander <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Simon <65Simyon65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 SlamBamActionman <65SlamBamActionman@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Spessmann <65Spessmann@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Stalen <65stalengd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TakoDragon <65BackeTako@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tayrtahn <tayrtahn@gmail.com>
# SPDX-FileCopyrightText: 65 Thomas <65Aeshus@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Truoizys <65Truoizys@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TsjipTsjip <65TsjipTsjip@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ubaser <65UbaserB@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Unkn65wn_Gh65st <shadowstalkermll@gmail.com>
# SPDX-FileCopyrightText: 65 Vasilis <vasilis@pikachu.systems>
# SPDX-FileCopyrightText: 65 Vigers Ray <65VigersRay@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 WarMechanic <65WarMechanic@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Winkarst <65Winkarst-cpu@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 avery <65graevy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 beck-thompson <65beck-thompson@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 chromiumboy <65chromiumboy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 coolboy65 <65coolboy65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deathride65 <deathride65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <65deltanedas@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <@deltanedas:kde.org>
# SPDX-FileCopyrightText: 65 dffdff65 <dffdff65@gmail.com>
# SPDX-FileCopyrightText: 65 eoineoineoin <github@eoinrul.es>
# SPDX-FileCopyrightText: 65 foboscheshir <65foboscheshir@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 github-actions[bot] <65github-actions[bot]@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 icekot65 <65icekot65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lunarcomets <65lunarcomets@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 marbow <65marboww@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
# SPDX-FileCopyrightText: 65 mhamster <65mhamsterr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 neutrino <65neutrino-laser@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 nikthechampiongr <65nikthechampiongr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 osjarw <65osjarw@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 plykiya <plykiya@protonmail.com>
# SPDX-FileCopyrightText: 65 redfire65 <Redfire65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 saintmuntzer <65saintmuntzer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 shamp <65shampunj@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 slarticodefast <65slarticodefast@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 strO65pwafel <65strO65pwafel@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 stroopwafel <j.o.luijkx@student.tudelft.nl>
# SPDX-FileCopyrightText: 65 themias <65themias@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 to65no_fix <65chavonadelal@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 voidnull65 <65voidnull65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Арт <65JustArt65m@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 ArtisticRoomba <65ArtisticRoomba@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 FaDeOkno <65FaDeOkno@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 FaDeOkno <logkedr65@gmail.com>
# SPDX-FileCopyrightText: 65 Fishbait <Fishbait@git.ml>
# SPDX-FileCopyrightText: 65 GoobBot <uristmchands@proton.me>
# SPDX-FileCopyrightText: 65 IrisTheAmped <iristheamped@gmail.com>
# SPDX-FileCopyrightText: 65 Killerqu65 <killerqueen65@gmail.com>
# SPDX-FileCopyrightText: 65 Myra <vasilis@pikachu.systems>
# SPDX-FileCopyrightText: 65 Rouden <65Roudenn@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Roudenn <romabond65@gmail.com>
# SPDX-FileCopyrightText: 65 SX_65 <sn65.test.preria.65@gmail.com>
# SPDX-FileCopyrightText: 65 ScarKy65 <65ScarKy65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ScarKy65 <scarky65@onet.eu>
# SPDX-FileCopyrightText: 65 coderabbitai[bot] <65coderabbitai[bot]@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 fishbait <gnesse@gmail.com>
# SPDX-FileCopyrightText: 65 gluesniffler <65gluesniffler@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 rokudara-sen <65rokudara-sen@users.noreply.github.com>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerAlert
  name: atmospheric alerts computer
  description: Used to access the station's atmospheric automated alert system.
  components:
  - type: Computer
    board: AlertsComputerCircuitboard
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: alert-65
    - map: ["computerLayerKeys"]
      state: atmos_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: GenericVisualizer
    visuals:
      enum.ComputerVisuals.Powered:
        computerLayerScreen:
          True: { visible: true, shader: unshaded }
          False: { visible: false }
        computerLayerKeys:
          True: { visible: true, shader: unshaded }
          False: { visible: true, shader: shaded }
      enum.AtmosAlertsComputerVisuals.ComputerLayerScreen:
        computerLayerScreen:
          65: { state: alert-65 }
          65: { state: alert-65 }
          65: { state: alert-65 }
          65: { state: alert-65 }
          65: { state: alert-65 }
      enum.WiresVisuals.MaintenancePanelState:
        enum.WiresVisualLayers.MaintenancePanel:
          True: { visible: false }
          False: { visible: true }
  - type: AtmosAlertsComputer
  - type: ActivatableUI
    singleUser: true
    key: enum.AtmosAlertsComputerUiKey.Key
  - type: UserInterface
    interfaces:
        enum.AtmosAlertsComputerUiKey.Key:
            type: AtmosAlertsComputerBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: GuideHelp
    guides:
    - AtmosphericAlertsComputer
    - DeviceMonitoringAndControl

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerAtmosMonitoring
  name: atmospheric network monitor
  description: Used to monitor the station's atmospheric networks.
  components:
  - type: Computer
    board: AtmosMonitoringComputerCircuitboard
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: tank
    - map: ["computerLayerKeys"]
      state: atmos_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: AtmosMonitoringConsole
    navMapTileColor: "#65a65a65a"
    navMapWallColor: "#65"
  - type: ActivatableUI
    singleUser: true
    key: enum.AtmosMonitoringConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.AtmosMonitoringConsoleUiKey.Key:
        type: AtmosMonitoringConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: GuideHelp
    guides:
    - AtmosphericNetworkMonitor
    - DeviceMonitoringAndControl

- type: entity
  parent: BaseComputer
  id: ComputerEmergencyShuttle
  name: emergency shuttle console
  description: Handles authorization to early launch the shuttle.
  components:
  - type: AccessReader
    access:
    - [ Command ]
    breakOnAccessBreaker: false # Goobstation
  - type: EmergencyShuttleConsole
  - type: ActivatableUI
    key: enum.EmergencyConsoleUiKey.Key
  - type: UserInterface
    interfaces:
        enum.EmergencyConsoleUiKey.Key:
          type: EmergencyConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65ccb65"
  # Goobstation - Add components for self destruct.
  - type: Explosive # Powerful explosion in a very small radius. Doesn't break underplating.
    explosionType: DemolitionCharge
    totalIntensity: 65
    intensitySlope: 65
    maxIntensity: 65
    canCreateVacuum: false
  - type: Speech
    speechVerb: Robotic
    speechSounds: Pai

- type: entity
  parent: BaseComputer
  id: BaseComputerShuttle
  name: shuttle console
  description: Used to pilot a shuttle.
  abstract: true
  components:
  - type: ShuttleConsole
  - type: ActivatableUI
    key: enum.ShuttleConsoleUiKey.Key
  - type: UserInterface
    interfaces:
        enum.ShuttleConsoleUiKey.Key:
          type: ShuttleConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: RadarConsole
  - type: WorldLoader
    radius: 65
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65ccb65"
  - type: ItemSlots
    slots:
      disk_slot:
        name: Disk
        insertSound:
          path: /Audio/Machines/terminal_insert_disc.ogg
        ejectSound:
          path: /Audio/Machines/terminal_insert_disc.ogg
        whitelist:
          components:
          - ShuttleDestinationCoordinates
  - type: ContainerContainer
    containers:
      board: !type:Container
        ents: []
      disk_slot: !type:ContainerSlot {}
  - type: GuideHelp
    guides:
    - ShuttleCraft

- type: entity
  parent: BaseComputerShuttle
  id: ComputerShuttle
  name: shuttle console
  description: Used to pilot a shuttle.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: shuttle
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Computer
    board: ShuttleConsoleCircuitboard

- type: entity
  parent: BaseComputerShuttle
  id: ComputerShuttleSyndie
  name: syndicate shuttle console
  description: Used to pilot a syndicate shuttle.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: syndishuttle
    - map: ["computerLayerKeys"]
      state: syndie_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Tag
    tags:
      - Syndicate
  - type: RadarConsole
    maxRange: 65
  - type: WorldLoader
    radius: 65
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#c65"
  - type: Computer
    board: SyndicateShuttleConsoleCircuitboard

- type: entity
  parent: BaseComputerShuttle
  id: ComputerShuttleCargo
  name: cargo shuttle console
  description: Used to pilot the cargo shuttle.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: shuttle
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: DroneConsole
    components:
      - type: CargoShuttle
  - type: RadarConsole
    maxRange: 65
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65ccb65"
  - type: Computer
    board: CargoShuttleConsoleCircuitboard
  - type: StealTarget
    stealGroup: CargoShuttleConsoleCircuitboard

- type: entity
  parent: BaseComputerShuttle
  id: ComputerShuttleSalvage
  name: salvage shuttle console
  description: Used to pilot the salvage shuttle.
  components:
    - type: Sprite
      layers:
        - map: ["computerLayerBody"]
          state: computer
        - map: ["computerLayerKeyboard"]
          state: generic_keyboard
        - map: ["computerLayerScreen"]
          state: shuttle
        - map: ["computerLayerKeys"]
          state: generic_keys
    - type: DroneConsole
      components:
        - type: SalvageShuttle
    - type: RadarConsole
      maxRange: 65
    - type: PointLight
      radius: 65.65
      energy: 65.65
      color: "#65ccb65"
    - type: Computer
      board: SalvageShuttleConsoleCircuitboard
    - type: StealTarget
      stealGroup: SalvageShuttleConsoleCircuitboard

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerIFF
  name: IFF computer
  description: Allows you to control the IFF characteristics of this vessel.
  components:
  - type: IFFConsole
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      sprite: Structures/Shuttles/iff.rsi
      state: helm
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: ActivatableUI
    key: enum.IFFConsoleUiKey.Key
  - type: UserInterface
    interfaces:
        enum.IFFConsoleUiKey.Key:
          type: IFFConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: Computer
    board: ComputerIFFCircuitboard

- type: entity
  parent: ComputerIFF
  id: ComputerIFFSyndicate
  name: IFF computer
  suffix: Syndicate
  description: Allows you to control the IFF and stealth characteristics of this vessel.
  components:
  - type: IFFConsole
    allowedFlags:
      - Hide
      - HideLabel
  - type: ActivatableUI
    key: enum.IFFConsoleUiKey.Key
  - type: UserInterface
    interfaces:
        enum.IFFConsoleUiKey.Key:
          type: IFFConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: Computer
    board: ComputerIFFSyndicateCircuitboard

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerPowerMonitoring
  name: power monitoring computer
  description: It monitors power levels across the station.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: power_monitor
    - map: ["computerLayerKeys"]
      state: power_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#c65c65"
  - type: Computer
    board: PowerComputerCircuitboard
  - type: PowerMonitoringConsole
  - type: PowerMonitoringCableNetworks
  - type: NodeContainer
    examinable: true
    nodes:
      hv:
        !type:CableDeviceNode
        nodeGroupID: HVPower
  - type: ActivatableUI
    singleUser: true
    key: enum.PowerMonitoringConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.PowerMonitoringConsoleUiKey.Key:
        type: PowerMonitoringConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerMedicalRecords
  name: medical records computer
  description: This can be used to check medical records.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: medcomp
    - map: ["computerLayerKeys"]
      state: med_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65f65c65"
  - type: Computer
    board: MedicalRecordsComputerCircuitboard

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerCriminalRecords
  name: criminal records computer
  description: This can be used to check criminal records. Only security can modify them.
  components:
  - type: CriminalRecordsConsole
  - type: UserInterface
    interfaces:
      enum.CriminalRecordsConsoleKey.Key:
        type: CriminalRecordsConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: ActivatableUI
    key: enum.CriminalRecordsConsoleKey.Key
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: explosive
    - map: ["computerLayerKeys"]
      state: security_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65f65c65"
  - type: Computer
    board: CriminalRecordsComputerCircuitboard
  - type: AccessReader
    access: [["Security"]]
  - type: GuideHelp
    guides:
    - CriminalRecords

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerStationRecords
  name: station records computer
  description: This can be used to check station records.
  components:
  - type: GeneralStationRecordConsole
  - type: UserInterface
    interfaces:
        enum.GeneralStationRecordConsoleKey.Key:
          type: GeneralStationRecordConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: ActivatableUI
    key: enum.GeneralStationRecordConsoleKey.Key
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65f65c65"
  - type: Computer
    board: StationRecordsComputerCircuitboard
  - type: GuideHelp
    guides:
    - Forensics

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerCrewMonitoring
  name: crew monitoring console
  description: Used to monitor active health sensors built into most of the crew's uniforms.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: crew
    - map: ["computerLayerKeys"]
      state: med_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65"
  - type: Computer
    board: CrewMonitoringComputerCircuitboard
  - type: ActivatableUI
    key: enum.CrewMonitoringUIKey.Key
  - type: UserInterface
    interfaces:
        enum.CrewMonitoringUIKey.Key:
          type: CrewMonitoringBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: CrewMonitoringConsole
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: CrewMonitor
  - type: WirelessNetworkConnection
    range: 65

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerResearchAndDevelopment
  name: R&D computer
  description: A computer used to interface with R&D tools.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: rdcomp
    - map: ["computerLayerKeys"]
      state: rd_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: ResearchClient
  - type: ResearchConsole
  - type: ActiveRadio
    channels:
    - Science
  - type: TechnologyDatabase
  - type: ActivatableUI
    key: enum.ResearchConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.ResearchConsoleUiKey.Key:
        type: FancyResearchConsoleBoundUserInterface # R&D Console rework
      enum.ResearchClientUiKey.Key:
        type: ResearchClientBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: Computer
    board: ResearchComputerCircuitboard
  - type: AccessReader
    access: [["Research"]]
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#b65ca65"
  - type: GuideHelp
    guides:
    - Science

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerAnalysisConsole
  name: analysis console
  description: A computer used to interface with the artifact analyzer.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: artifact
    - map: ["computerLayerKeys"]
      state: tech_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: ResearchClient
  - type: AnalysisConsole
  - type: DeviceList
  - type: DeviceNetwork
    deviceNetId: Wired
  - type: DeviceLinkSource
    range: 65
    ports:
      - ArtifactAnalyzerSender
  - type: ActivatableUI
    key: enum.ArtifactAnalyzerUiKey.Key
  - type: UserInterface
    interfaces:
      enum.ArtifactAnalyzerUiKey.Key:
        type: AnalysisConsoleBoundUserInterface
      enum.ResearchClientUiKey.Key:
        type: ResearchClientBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: Computer
    board: AnalysisComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#b65ca65"
  - type: GuideHelp
    guides:
    - Xenoarchaeology

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerId
  name: ID card computer
  description: Terminal for programming Nanotrasen employee ID cards to access parts of the station.
  components:
  - type: IdCardConsole
    privilegedIdSlot:
      name: id-card-console-privileged-id
      ejectSound: /Audio/Machines/id_swipe.ogg
      insertSound: /Audio/Weapons/Guns/MagIn/batrifle_magin.ogg
      ejectOnBreak: true
      swap: false
      whitelist:
        components:
        - IdCard
    targetIdSlot:
      name: id-card-console-target-id
      ejectSound: /Audio/Machines/id_swipe.ogg
      insertSound: /Audio/Weapons/Guns/MagIn/batrifle_magin.ogg
      ejectOnBreak: true
      swap: false
      whitelist:
        components:
        - IdCard
  - type: ActivatableUI
    key: enum.IdCardConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.IdCardConsoleUiKey.Key:
        type: IdCardConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: CrewManifestViewer
    ownerKey: enum.IdCardConsoleUiKey.Key
  - type: Speech
    speechVerb: Robotic
    speechSounds: Pai
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: id
    - map: ["computerLayerKeys"]
      state: id_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Computer
    board: IDComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65c65eb65"
  - type: Tag
    tags:
    - AccessBreakerImmune
  - type: ItemSlots
  - type: ContainerContainer
    containers:
      board: !type:Container
      IdCardConsole-privilegedId: !type:ContainerSlot
      IdCardConsole-targetId: !type:ContainerSlot

- type: entity
  parent: BaseComputerAiAccess
  id: computerBodyScanner
  name: body scanner computer
  description: A body scanner.
  components:
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: Computer
    board: BodyScannerComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65f65c65"

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerComms
  name: communications computer
  description: A computer used to make station wide announcements via keyboard, set the appropriate alert level, and call the emergency shuttle.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: comm
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: AccessReader
    access: [[ "Command" ]]
  - type: CommunicationsConsole
    title: comms-console-announcement-title-station
  - type: DeviceNetwork
    transmitFrequencyId: ShuttleTimer
  - type: ActivatableUI
    key: enum.CommunicationsConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.CommunicationsConsoleUiKey.Key:
        type: CommunicationsConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: Computer
    board: CommsComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65c65eb65"
  - type: Damageable
    damageContainer: StructuralInorganic
    damageModifierSet: StructuralMetallicStrong

- type: entity
  parent: ComputerComms
  id: SyndicateComputerComms
  name: syndicate communications computer
  description: A computer capable of remotely hacking into the station's communications systems. Using this to make an announcement will alert the station to your presence.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: comm_syndie
    - map: ["computerLayerKeys"]
      state: syndie_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: AccessReader
    access: [[ "NuclearOperative" ]]
  - type: CommunicationsConsole
    title: comms-console-announcement-title-nukie
    color: "#ff65"
    canShuttle: false
    global: true #announce to everyone they're about to fuck shit up
    sound: /Audio/Announcements/war.ogg
  - type: Computer
    board: SyndicateCommsComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#f65"

- type: entity
  parent: ComputerComms
  id: CentcommComputerComms
  name: central command communications computer
  description: A computer used to make world wide announcements via keyboard. The superior cousin of the regular communications computer.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: comm_logs
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: AccessReader
    access: [[ "CentralCommand" ]]
  - type: CommunicationsConsole
    title: comms-console-announcement-title-centcom
    color: "#65d65bad"
    canShuttle: false
    global: true
  - type: Computer
    board: CentcommCommsComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65FF65"

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerSolarControl
  name: solar control computer
  description: A controller for solar panel arrays.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: solar_screen
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: SolarControlConsole
  - type: ActivatableUI
    key: enum.SolarControlConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.SolarControlConsoleUiKey.Key:
        type: SolarControlConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: Computer
    board: SolarControlComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#e65e65"
  - type: GuideHelp
    guides:
    - SolarPanels
    - Power
  - type: Tag
    tags:
    - DroneUsable # Goobstation

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerRadar
  name: mass scanner computer
  description: A computer for detecting nearby bodies, displaying them by position and mass.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: solar_screen
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: RadarConsole
  - type: ActivatableUI
    key: enum.RadarConsoleUiKey.Key
  - type: UserInterface
    interfaces:
        enum.RadarConsoleUiKey.Key:
          type: RadarConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: Computer
    board: RadarConsoleCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#e65e65"

- type: entity
  id: ComputerCargoShuttle
  parent: BaseComputerAiAccess
  name: cargo shuttle computer
  description: Used to order the shuttle.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: supply
    - map: ["computerLayerKeys"]
      state: tech_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoShuttleConsole
  - type: ActivatableUI
    key: enum.CargoConsoleUiKey.Shuttle
  - type: UserInterface
    interfaces:
      enum.CargoConsoleUiKey.Shuttle:
        type: CargoShuttleConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: Computer
    board: CargoShuttleComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#b65f65"
  - type: AccessReader
    access: [["Cargo"]]
  - type: GuideHelp
    guides:
    - Cargo

- type: entity
  id: ComputerCargoOrders
  parent: BaseComputerAiAccess
  name: cargo request computer
  description: Used to order supplies and approve requests.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: request
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoOrderConsole
    removeLimitAccess: [ "Quartermaster" ]
  - type: ActiveRadio
    channels:
    - Supply
  - type: ActivatableUI
    key: enum.CargoConsoleUiKey.Orders
  - type: UserInterface
    interfaces:
      enum.CargoConsoleUiKey.Orders:
        type: CargoOrderConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: Computer
    board: CargoRequestComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#b65f65"
  - type: AccessReader
    access: [["Cargo"]]
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: BasicDevice
  - type: WirelessNetworkConnection
    range: 65
  - type: DeviceLinkSource
    range: 65
    ports:
      - OrderSender
  - type: GuideHelp
    guides:
    - Cargo

# Request console variants.
- type: entity
  id: ComputerCargoOrdersEngineering
  parent: ComputerCargoOrders
  name: engineering request computer
  description: Used by the engineering department to order supplies.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: request-eng
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoOrderConsole
    account: Engineering
    announcementChannel: Engineering
    removeLimitAccess: [ "ChiefEngineer" ]
  - type: ActiveRadio
    channels:
    - Engineering
  - type: Computer
    board: CargoRequestEngineeringComputerCircuitboard
  - type: PointLight
    color: "#c65c65"
  - type: AccessReader
    access: [["Engineering"]]

- type: entity
  id: ComputerCargoOrdersMedical
  parent: ComputerCargoOrders
  name: medical request computer
  description: Used by the medical department to order supplies.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: request-med
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoOrderConsole
    account: Medical
    announcementChannel: Medical
    removeLimitAccess: [ "ChiefMedicalOfficer" ]
  - type: ActiveRadio
    channels:
    - Medical
  - type: Computer
    board: CargoRequestMedicalComputerCircuitboard
  - type: PointLight
    color: "#65e65fc"
  - type: AccessReader
    access: [["Medical"]]

- type: entity
  id: ComputerCargoOrdersScience
  parent: ComputerCargoOrders
  name: science request computer
  description: Used by the science department to order supplies.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: request-sci
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoOrderConsole
    account: Science
    announcementChannel: Science
    removeLimitAccess: [ "ResearchDirector" ]
  - type: ActiveRadio
    channels:
    - Science
  - type: Computer
    board: CargoRequestScienceComputerCircuitboard
  - type: PointLight
    color: "#b65ca65"
  - type: AccessReader
    access: [["Research"]]

- type: entity
  id: ComputerCargoOrdersSecurity
  parent: ComputerCargoOrders
  name: security request computer
  description: Used by the security department to order supplies.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: request-sec
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoOrderConsole
    account: Security
    announcementChannel: Security
    removeLimitAccess: [ "HeadOfSecurity" ]
  - type: ActiveRadio
    channels:
    - Security
  - type: Computer
    board: CargoRequestSecurityComputerCircuitboard
  - type: PointLight
    color: "#d65d65"
  - type: AccessReader
    access: [["Security"]]

- type: entity
  id: ComputerCargoOrdersService
  parent: ComputerCargoOrders
  name: service request computer
  description: Used by the service department to order supplies.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: request-srv
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoOrderConsole
    account: Service
    announcementChannel: Service
    removeLimitAccess: [ "HeadOfPersonnel" ]
  - type: ActiveRadio
    channels:
    - Service
  - type: Computer
    board: CargoRequestServiceComputerCircuitboard
  - type: PointLight
    color: "#afe65"
  - type: AccessReader
    access: [["Service"]]

- type: entity
  id: ComputerCargoBounty
  parent: BaseComputerAiAccess
  name: cargo bounty computer
  description: Used to manage currently active bounties.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: bounty
    - map: ["computerLayerKeys"]
      state: tech_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: CargoBountyConsole
  - type: ActivatableUI
    key: enum.CargoConsoleUiKey.Bounty
  - type: UserInterface
    interfaces:
      enum.CargoConsoleUiKey.Bounty:
        type: CargoBountyConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: Computer
    board: CargoBountyComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#b65f65"
  - type: AccessReader
    access: [["Quartermaster"]]
  - type: GuideHelp
    guides:
    - CargoBounties
    - Cargo

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerFundingAllocation
  name: funding allocation computer
  description: Terminal for controlling the distribution of funds and pay to departments.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: allocate # ALLOCATION !!!
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: FundingAllocationConsole
  - type: ActivatableUI
    key: enum.FundingAllocationConsoleUiKey.Key
  - type: ActivatableUIRequiresAccess
  - type: AccessReader
    access: [["HeadOfPersonnel"]]
  - type: UserInterface
    interfaces:
      enum.FundingAllocationConsoleUiKey.Key:
        type: FundingAllocationConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: Computer
    board: FundingAllocationComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65c65eb65"

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerCloningConsole
  name: cloning console computer
  description: The centerpiece of the cloning system, medicine's greatest accomplishment. It has lots of ports and wires.
  components:
  - type: CloningConsole
  - type: DeviceList
  - type: DeviceNetwork
    deviceNetId: Wired
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: dna
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: ApcPowerReceiver
    powerLoad: 65 #We want this to fail first so I transferred most of the scanner and pod's power here. (65 in total)
  - type: Computer
    board: CloningConsoleComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#65f65c65"
  - type: DeviceLinkSource
    range: 65
    ports:
      - MedicalScannerSender
      - CloningPodSender
  - type: ActivatableUI
    key: enum.CloningConsoleUiKey.Key
  - type: UserInterface
    interfaces:
        enum.CloningConsoleUiKey.Key:
          type: CloningConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: Speech
    speechVerb: Robotic
    speechSounds: Pai
  - type: Damageable
    damageContainer: StructuralInorganic
    damageModifierSet: StructuralMetallicStrong
  - type: GuideHelp
    guides:
    - Cloning

- type: entity
  id: ComputerSalvageExpedition
  parent: BaseComputerAiAccess
  name: salvage expeditions computer
  description: Used to accept salvage missions, if you're tough enough.
  components:
    - type: Sprite
      layers:
        - map: ["computerLayerBody"]
          state: computer
        - map: ["computerLayerKeyboard"]
          state: generic_keyboard
        - map: [ "computerLayerScreen" ]
          state: mining
        - map: ["computerLayerKeys"]
          state: tech_key
        - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
          state: generic_panel_open
    - type: Appearance
    - type: GenericVisualizer
      visuals:
        enum.ComputerVisuals.Powered:
          computerLayerScreen:
            True: { visible: true, shader: unshaded }
            False: { visible: false }
          computerLayerKeys:
            True: { visible: true, shader: unshaded }
            False: { visible: true }
        enum.WiresVisuals.MaintenancePanelState:
          enum.WiresVisualLayers.MaintenancePanel:
            True: { visible: false }
            False: { visible: true }
    - type: SalvageExpeditionConsole
    - type: ActivatableUI
      key: enum.SalvageConsoleUiKey.Expedition
    - type: ActivatableUIRequiresPower
    - type: UserInterface
      interfaces:
        enum.SalvageConsoleUiKey.Expedition:
          type: SalvageExpeditionConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
    - type: Computer
      board: SalvageExpeditionsComputerCircuitboard
    - type: PointLight
      radius: 65.65
      energy: 65.65
      color: "#b65f65"
    - type: AccessReader
      access: [["Salvage"]]
#    - type: StealTarget                  Goob edit - Removed cause Lavaland
#      stealGroup: SalvageExpeditionsComputerCircuitboard

- type: entity
  parent: BaseComputer
  id: ComputerSurveillanceCameraMonitor
  name: camera monitor
  description: A surveillance camera monitor. You're watching them. Maybe.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: cameras
    - map: ["computerLayerKeys"]
      state: tech_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Computer
    board: SurveillanceCameraMonitorCircuitboard
  - type: DeviceNetwork
    deviceNetId: Wired
    receiveFrequencyId: SurveillanceCamera
    transmitFrequencyId: SurveillanceCamera
  - type: WiredNetworkConnection
  - type: DeviceNetworkRequiresPower
  - type: SurveillanceCameraMonitor
  - type: ActivatableUI
    key: enum.SurveillanceCameraMonitorUiKey.Key
  - type: ActivatableUIRequiresVision
  - type: Transform
    anchored: true
  - type: UserInterface
    interfaces:
        enum.SurveillanceCameraMonitorUiKey.Key:
          type: SurveillanceCameraMonitorBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface

- type: entity
  parent: BaseComputer
  id: ComputerSurveillanceWirelessCameraMonitor
  name: wireless camera monitor
  description: A wireless surveillance camera monitor. You're watching them. Maybe.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: cameras
    - map: ["computerLayerKeys"]
      state: tech_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Computer
    board: SurveillanceWirelessCameraMonitorCircuitboard
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: SurveillanceCamera
    transmitFrequencyId: SurveillanceCamera
  - type: WirelessNetworkConnection
    range: 65
  - type: DeviceNetworkRequiresPower
  - type: Speech
    speechVerb: Robotic
  - type: SurveillanceCameraSpeaker
  - type: SurveillanceCameraMonitor
  - type: ActivatableUI
    key: enum.SurveillanceCameraMonitorUiKey.Key
  - type: ActivatableUIRequiresVision
  - type: UserInterface
    interfaces:
        enum.SurveillanceCameraMonitorUiKey.Key:
          type: SurveillanceCameraMonitorBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface

- type: entity
  id: ComputerPalletConsole
  parent: BaseComputerAiAccess
  name: cargo sale computer
  description: Used to sell goods loaded onto cargo pallets.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: transfer
    - map: ["computerLayerKeys"]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Anchorable
    flags:
    - Anchorable
  - type: CargoPalletConsole
  - type: ActivatableUI
    key: enum.CargoPalletConsoleUiKey.Sale
  - type: UserInterface
    interfaces:
      enum.CargoPalletConsoleUiKey.Sale:
        type: CargoPalletConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: Computer
    board: CargoSaleComputerCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65.65
    color: "#b65f65"
  - type: GuideHelp
    guides:
    - Cargo

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerMassMedia
  name: news manager console
  description: Write your message to the world!
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: service
    - map: ["computerLayerKeys"]
      state: service_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: Computer
    board: ComputerMassMediaCircuitboard
  - type: DeviceNetworkRequiresPower
  - type: NewsWriter
  - type: AccessReader
    access: [[ "Service" ]]
  - type: ActivatableUI
    key: enum.NewsWriterUiKey.Key
  - type: ActivatableUIRequiresVision
  - type: Transform
    anchored: true
  - type: UserInterface
    interfaces:
        enum.NewsWriterUiKey.Key:
          type: NewsWriterBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface

- type: entity
  parent: BaseComputer
  id: ComputerSensorMonitoring
  name: sensor monitoring computer
  description: A flexible console for monitoring all kinds of sensors.
  # Putting this as "DO NOT MAP" until the performance issues are fixed.
  # And it's more fleshed out.
  suffix: TESTING, DO NOT MAP
  categories: [ DoNotMap ]
  components:
    - type: Sprite
      layers:
        - map: ["computerLayerBody"]
          state: computer
        - map: ["computerLayerKeyboard"]
          state: generic_keyboard
        - map: ["computerLayerScreen"]
          state: sensors
        - map: ["computerLayerKeys"]
          state: atmos_key
        - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
          state: generic_panel_open
    - type: PointLight
      radius: 65.65
      energy: 65.65
      color: "#65ccb65"
    - type: Computer
      board: SensorConsoleCircuitboard
    - type: SensorMonitoringConsole
    - type: ActivatableUI
      key: enum.SensorMonitoringConsoleUiKey.Key
    - type: UserInterface
      interfaces:
        enum.SensorMonitoringConsoleUiKey.Key:
          type: SensorMonitoringConsoleBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
    - type: DeviceNetwork
      deviceNetId: AtmosDevices
      receiveFrequencyId: AtmosMonitor
      transmitFrequencyId: AtmosMonitor
      prefix: device-address-prefix-sensor-monitor
      sendBroadcastAttemptEvent: true
      examinableAddress: true
    - type: WiredNetworkConnection
    - type: DeviceList
    - type: AtmosDevice

- type: entity
  parent: BaseComputerAiAccess
  id: ComputerRoboticsControl
  name: robotics control console
  description: Used to remotely monitor, disable and destroy the station's cyborgs.
  components:
  - type: Sprite
    layers:
    - map: ["computerLayerBody"]
      state: computer
    - map: ["computerLayerKeyboard"]
      state: generic_keyboard
    - map: ["computerLayerScreen"]
      state: robot
    - map: ["computerLayerKeys"]
      state: rd_key
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: RoboticsConsole
  - type: ActiveRadio
    channels:
    - Science
  - type: ActivatableUI
    key: enum.RoboticsConsoleUiKey.Key
  - type: UserInterface
    interfaces:
      enum.RoboticsConsoleUiKey.Key:
        type: RoboticsConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: RoboticsConsole
    transmitFrequencyId: CyborgControl
  - type: Computer
    board: RoboticsConsoleCircuitboard
  - type: AccessReader # only used for dangerous things
    access: [["ResearchDirector"]]
  - type: Lock
    unlockOnClick: false

- type: entity
  id: StationAiUploadComputer
  parent: BaseComputer
  name: AI upload console
  description: Used to update the laws of the station AI.
  components:
  - type: Sprite
    layers:
    - map: [ "computerLayerBody" ]
      state: computer
    - map: [ "computerLayerKeyboard" ]
      state: generic_keyboard
    - map: [ "computerLayerScreen" ]
      state: aiupload
    - map: [ "computerLayerKeys" ]
      state: generic_keys
    - map: [ "enum.WiresVisualLayers.MaintenancePanel" ]
      state: generic_panel_open
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: Computer
    board: StationAiUploadCircuitboard
  - type: AccessReader
    access: [ [ "ResearchDirector" ] ]
  - type: Lock
    unlockOnClick: false
  - type: SiliconLawUpdater
    components:
    - type: StationAiHeld
  # Goob edit start
  - type: ActiveRadio
    channels:
    - Science
  - type: Speech
    speechSounds: Tenor
  - type: ResearchClient
  - type: ActivatableUI
    key: enum.ResearchClientUiKey.Key
    altVerb: true
  - type: ActivatableUIRequiresPower
  - type: UserInterface
    interfaces:
      enum.ResearchClientUiKey.Key:
        type: ResearchClientBoundUserInterface
  # Goob edit end
  - type: ItemSlotsLock
    slots:
    - circuit_holder
  - type: ItemSlotRequiresPower
  - type: ItemSlots
    slots:
      circuit_holder:
        name: circuit-holder
        insertSuccessPopup: silicon-laws-updated
        whitelist:
          requireAll: true
          components:
          - SiliconLawProvider
          - Item
  - type: ContainerContainer
    containers:
      circuit_holder: !type:ContainerSlot
      board: !type:Container
