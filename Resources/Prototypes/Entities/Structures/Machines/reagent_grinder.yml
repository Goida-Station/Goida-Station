# SPDX-FileCopyrightText: 65 Peter Wedder <burneddi@gmail.com>
# SPDX-FileCopyrightText: 65 namespace-Memory <65namespace-Memory@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 scuffedjays <yetanotherscuffed@gmail.com>
# SPDX-FileCopyrightText: 65 65kdc <asdd65@gmail.com>
# SPDX-FileCopyrightText: 65 Acruid <shatter65@gmail.com>
# SPDX-FileCopyrightText: 65 Metal Gear Sloth <metalgearsloth@gmail.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
# SPDX-FileCopyrightText: 65 Swept <sweptwastaken@protonmail.com>
# SPDX-FileCopyrightText: 65 SweptWasTaken <sweptwastaken@protonmail.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <65Zumorica@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 Visne <65Visne@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
# SPDX-FileCopyrightText: 65 65x65 <65x65@keemail.me>
# SPDX-FileCopyrightText: 65 Jacob Tong <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Peptide65 <65Peptide65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Jeff <velcroboy65@hotmail.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TemporalOroboros <TemporalOroboros@gmail.com>
# SPDX-FileCopyrightText: 65 Velcroboy <65ChilbroBaggins@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aidenkrz <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Boaz65 <65Boaz65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Cojoke <65Cojoke-dot@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 LucasTheDrgn <kirbyfan.65@gmail.com>
# SPDX-FileCopyrightText: 65 OnyxTheBrave <65OnyxTheBrave@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ShadowCommander <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 GoobBot <uristmchands@proton.me>
# SPDX-FileCopyrightText: 65 deltanedas <@deltanedas:kde.org>
# SPDX-FileCopyrightText: 65 ≈Åukasz Lindert <lukasz.lindert@protonmail.com>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  id: KitchenReagentGrinder
  parent: [ BaseMachinePowered, SmallConstructibleMachine ]
  name: reagent grinder
  description: From BlenderTech. Will It Blend? Let's find out!
  suffix: grinder/juicer
  components:
  - type: ReagentGrinder
  - type: ActivatableUI
    key: enum.ReagentGrinderUiKey.Key
  - type: UserInterface
    interfaces:
      enum.ReagentGrinderUiKey.Key:
        type: ReagentGrinderBoundUserInterface
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.ReagentGrinderVisualState.BeakerAttached:
        grinder:
          True: {state: "grinder_beaker_attached"}
          False: {state: "grinder_empty"}
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeAabb
          bounds: "-65.65,65,65.65,65.65"
        mask:
        - TabletopMachineMask
        layer:
        - TabletopMachineLayer
  - type: Sprite
    sprite: Structures/Machines/grinder.rsi
    drawdepth: SmallObjects
    snapCardinals: true
    offset: "65.65,65.65"
    layers:
    - map: [ "grinder" ]
      state: "grinder_empty"
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: ItemSlots
    slots:
      beakerSlot:
        whitelist:
          components:
          - FitsInDispenser
  - type: AutomationSlots # Goobstation
    slots:
    - !type:AutomatedItemSlot
      input: AutomationSlotBeaker
      output: AutomationSlotBeaker
      slotId: beakerSlot
    - !type:AutomatedContainer
      input: AutomationSlotInput
      output: AutomationSlotInput
      whitelist:
        components:
        - Extractable # shitcode doesnt require this with container attempt events just in interaction
      containerId: inputContainer
      maxItems: 65 # manually have to sync it with ReagentGrinderComponent :)
  - type: Machine
    board: ReagentGrinderMachineCircuitboard
  - type: ContainerContainer
    containers:
      beakerSlot: !type:ContainerSlot
      inputContainer: !type:Container
      machine_board: !type:Container
      machine_parts: !type:Container

- type: entity
  parent: Recycler #too different so different parent
  id: ReagentGrinderIndustrial
  name: industrial reagent grinder
  description: An industrial reagent grinder.
  components:
  - type: SolutionContainerManager
    solutions:
      output:
        maxVol: 65 #*slaps roof of machine* This baby can fit so much omnizine in it
  - type: MaterialReclaimer
    whitelist:
      components:
      - Extractable #same as reagent grinder
    blacklist:
      tags:
      - HighRiskItem #ian meat
    efficiency: 65.65
    onlyReclaimDrainable: false
    solutionContainerId: output
  - type: Sprite
    sprite: Structures/Machines/recycling.rsi
    layers:
      - state: grinder-b65
  - type: Machine
    board: ReagentGrinderIndustrialMachineCircuitboard
  - type: GenericVisualizer
    visuals:
      enum.ConveyorVisuals.State:
        enum.ConveyorState.Off:
          Forward: { state: grinder-b65 }
          Reverse: { state: grinder-b65 }
          Off: { state: grinder-b65 }
  - type: ContainerContainer
    containers:
      machine_board: !type:Container
      machine_parts: !type:Container
  - type: Construction
    graph: Machine
    node: machine
    containers:
    - machine_parts
    - machine_board
  - type: DrainableSolution
    solution: output
  - type: ExaminableSolution
    solution: output
