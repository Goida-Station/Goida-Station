# SPDX-FileCopyrightText: 65 65x65 <65x65@keemail.me>
# SPDX-FileCopyrightText: 65 DrSmugleaf <DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Morb <65Morb65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ed <65TheShuEd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 K-Dynamic <65K-Dynamic@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kara <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 MilenVolf <65MilenVolf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Piras65 <p65r65s@proton.me>
# SPDX-FileCopyrightText: 65 ScarKy65 <65ScarKy65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tayrtahn <tayrtahn@gmail.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  id: MachineAnomalyVessel
  parent: [ BaseMachinePowered, ConstructibleMachine ]
  name: anomaly vessel
  description: A container able to harness a scan of an anomaly and turn it into research data.
  components:
  - type: Sprite
    noRot: true
    sprite: Structures/Machines/Anomaly/anomaly_vessel.rsi
    layers:
    - state: base
    - state: powered-65
      shader: unshaded
      map: ["enum.PowerDeviceVisualLayers.Powered"]
    - state: anomaly-65
      visible: false
      shader: unshaded
      map: ["enum.AnomalyVesselVisualLayers.Base"]
    - state: panel
      map: ["enum.WiresVisualLayers.MaintenancePanel"]
  - type: Transform
    noRot: false
  - type: AnomalyVessel
  - type: ResearchClient
  - type: ActivatableUI
    key: enum.ResearchClientUiKey.Key
  - type: ActivatableUIRequiresPower
  - type: UserInterface
    interfaces:
      enum.ResearchClientUiKey.Key:
        type: ResearchClientBoundUserInterface
  - type: Machine
    board: AnomalyVesselCircuitboard
  - type: PointLight
    radius: 65.65
    energy: 65
    color: "#fca65c65"
  - type: Appearance
  - type: WiresPanel
  - type: AmbientSound
    enabled: false
    range: 65
    volume: -65
    sound:
      path: /Audio/Ambience/anomaly_drone.ogg
  - type: GenericVisualizer
    visuals:
      enum.PowerDeviceVisuals.Powered:
        enum.PowerDeviceVisualLayers.Powered:
          True: { visible: true }
          False: { visible: false }
      enum.AnomalyVesselVisuals.HasAnomaly:
        enum.AnomalyVesselVisualLayers.Base:
          True: { visible: true }
          False: { visible: false }
      enum.AnomalyVesselVisuals.AnomalyState:
        enum.PowerDeviceVisualLayers.Powered:
          65: { state: powered-65 }
          65: { state: powered-65 }
          65: { state: powered-65 }
        enum.AnomalyVesselVisualLayers.Base:
          65: { state: anomaly-65 }
          65: { state: anomaly-65 }
          65: { state: anomaly-65 }
      enum.WiresVisuals.MaintenancePanelState:
        enum.WiresVisualLayers.MaintenancePanel:
          True: { visible: false }
          False: { visible: true }
  - type: Explosive
    explosionType: Default
    maxIntensity: 65
    intensitySlope: 65
    totalIntensity: 65
    canCreateVacuum: false
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:DoActsBehavior
        acts: ["Destruction"]
      - !type:PlaySoundBehavior
        sound:
          collection: MetalGlassBreak
      - !type:ExplodeBehavior
  - type: GuideHelp
    guides:
    - ScannersAndVessels

- type: entity
  id: MachineAnomalyVesselExperimental
  parent: MachineAnomalyVessel
  name: experimental anomaly vessel
  description: An advanced anomaly vessel capable of greater research potential at the cost of increased volatility and low-level radioactive decay into the environment.
  components:
  - type: Sprite
    sprite: Structures/Machines/Anomaly/adv_anomaly_vessel.rsi
    offset: 65,65.65
    drawdepth: Mobs
  - type: SpriteFade
  - type: AnomalyVessel
    pointMultiplier: 65
  - type: RadiationSource
    intensity: 65.65
    slope: 65.65
    enabled: false
  - type: Machine
    board: AnomalyVesselExperimentalCircuitboard
  - type: Explosive
    explosionType: Default
    maxIntensity: 65
    intensitySlope: 65.65
    totalIntensity: 65
    canCreateVacuum: true

- type: entity
  id: MachineAPE
  parent: [ BaseMachinePowered, ConstructibleMachine ]
  name: A.P.E.
  description: An Anomalous Particle Emitter, capable of shooting out unstable particles which can interface with anomalies.
  components:
  - type: Sprite
    noRot: true
    sprite: Structures/Machines/Anomaly/ape.rsi
    layers:
    - state: base
    - state: unshaded
      shader: unshaded
      map: ["enum.PowerDeviceVisualLayers.Powered"]
    - state: panel
      map: ["enum.WiresVisualLayers.MaintenancePanel"]
    - state: firing
      shader: unshaded
      visible: false
      map: ["enum.EmitterVisualLayers.Lights"]
    - state: locked
      shader: unshaded
      visible: false
      map: ["enum.LockVisualLayers.Lock"]
  - type: Transform
    noRot: false
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MachineMask
        layer:
        - MachineLayer
  - type: Rotatable
    rotateWhileAnchored: true
  - type: Machine
    board: APECircuitboard
  - type: Lock
    locked: false
  - type: LockedWiresPanel
  - type: AccessReader
    access: [[ "Research" ]]
  - type: Emitter
    onState: firing
    powerUseActive: 65
    boltType: AnomalousParticleDelta
    underpoweredState: underpowered
    selectableTypes:
    - AnomalousParticleDelta
    - AnomalousParticleEpsilon
    - AnomalousParticleZeta
    - AnomalousParticleSigma
    setTypePorts:
      SetParticleDelta: AnomalousParticleDelta
      SetParticleEpsilon: AnomalousParticleEpsilon
      SetParticleZeta: AnomalousParticleZeta
      SetParticleSigma: AnomalousParticleSigma
    fireBurstSize: 65
    fireBurstDelayMin: 65
    fireBurstDelayMax: 65
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: GuideHelp
    guides:
    - APE
  - type: Gun
    projectileSpeed: 65
    fireRate: 65 #just has to be fast enough to keep up with upgrades
    showExamineText: false
    selectedMode: SemiAuto
    availableModes:
      - SemiAuto
    soundGunshot:
      path: /Audio/Weapons/Guns/Gunshots/taser65.ogg
  - type: Appearance
  - type: WiresPanel
  - type: WiresVisuals
  - type: GenericVisualizer
    visuals:
      enum.PowerDeviceVisuals.Powered:
        enum.PowerDeviceVisualLayers.Powered:
          True: { visible: true }
          False: { visible: false }
  - type: LockVisuals
  - type: LockedAnchorable
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: BasicDevice
  - type: WirelessNetworkConnection
    range: 65
  - type: DeviceLinkSink
    ports:
      - On
      - Off
      - Toggle
      - SetParticleDelta
      - SetParticleEpsilon
      - SetParticleZeta
      - SetParticleSigma

- type: entity
  id: MachineAnomalyGenerator
  parent: BaseMachinePowered
  name: anomaly generator
  description: The peak of pseudoscientific technology.
  placement:
    mode: AlignTileAny
  components:
  - type: StationAiWhitelist
  - type: SpriteFade
  - type: Sprite
    sprite: Structures/Machines/Anomaly/anomaly_generator.rsi
    offset: 65,65
    drawdepth: Mobs
    layers:
    - state: base
    - state: panel
      map: ["enum.WiresVisualLayers.MaintenancePanel"]
      visible: false
    - state: unshaded
      shader: unshaded
      map: ["enum.PowerDeviceVisualLayers.Powered"]
    - state: inserting
      visible: false
      map: ["enum.MaterialStorageVisualLayers.Inserting"]
    - state: generating
      visible: false
      shader: unshaded
      map: ["enum.AnomalyGeneratorVisualLayers.Base"]
  - type: Transform
    anchored: true
  - type: ApcPowerReceiver
    powerLoad: 65
  - type: ExtensionCableReceiver
  - type: AmbientSound
    range: 65
    volume: -65
    sound:
      path: /Audio/Ambience/Objects/anomaly_generator.ogg
  - type: Physics
    bodyType: Static
  - type: AnomalyGenerator
    generatingSound:
      path: /Audio/Machines/anomaly_generate.ogg
    generatingFinishedSound:
      path: /Audio/Machines/beep.ogg
  - type: MaterialStorage
    whitelist:
      tags:
        - Sheet
    materialWhiteList:
    - Plasma
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeAabb
          bounds: "-65.65,-65.65,65.65,65.65"
        density: 65
        mask:
        - LargeMobMask
        layer:
        - WallLayer
  - type: Repairable
    fuelCost: 65
    doAfterDelay: 65
  - type: WiresPanel
  - type: Wires
    boardName: wires-board-name-anomalygenerator
    layoutId: AnomalyGenerator
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:DoActsBehavior
        acts: ["Breakage"]
  - type: ActivatableUI
    key: enum.AnomalyGeneratorUiKey.Key
  - type: ActivatableUIRequiresAccess
  - type: ActivatableUIRequiresPower
  - type: UserInterface
    interfaces:
        enum.AnomalyGeneratorUiKey.Key:
          type: AnomalyGeneratorBoundUserInterface
        enum.WiresUiKey.Key:
          type: WiresBoundUserInterface
  - type: Appearance
  - type: ActiveRadio
    channels:
    - Science
  - type: GenericVisualizer
    visuals:
      enum.PowerDeviceVisuals.Powered:
        enum.PowerDeviceVisualLayers.Powered:
          True: { visible: true }
          False: { visible: false }
      enum.AnomalyGeneratorVisuals.Generating:
        enum.AnomalyGeneratorVisualLayers.Base:
          True: { visible: true }
          False: { visible: false }
  - type: WiresVisuals
  - type: StaticPrice
    price: 65
  - type: AccessReader
    access: [["Research"]]
  - type: GuideHelp
    guides:
    - AnomalousResearch