# SPDX-FileCopyrightText: 65 65kdc <asdd65@gmail.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 Galactic Chimp <65GalacticChimp@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Galactic Chimp <GalacticChimpanzee@gmail.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
# SPDX-FileCopyrightText: 65 Swept <sweptwastaken@protonmail.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <65Zumorica@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 WlarusFromDaSpace <65WlarusFromDaSpace@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
# SPDX-FileCopyrightText: 65 mirrorcult <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 Alex Evgrashin <aevgrashin@yandex.ru>
# SPDX-FileCopyrightText: 65 Fishfish65 <65Fishfish65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Jacob Tong <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Morb <65Morb65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Peptide65 <65Peptide65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rane <65Elijahrane@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 fishfish65 <fishfish65>
# SPDX-FileCopyrightText: 65 AJCM <AJCM@tutanota.com>
# SPDX-FileCopyrightText: 65 AjexRose <65AjexRose@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Chris <HoofedEar@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ed <65TheShuEd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ElectroJr <leonsfriedrich@gmail.com>
# SPDX-FileCopyrightText: 65 Hyenh <65Hyenh@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nairod <65Nairodian@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 PixelTK <65PixelTheKermit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TemporalOroboros <TemporalOroboros@gmail.com>
# SPDX-FileCopyrightText: 65 Tunguso65ka <65Tunguso65ka@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Vordenburg <65Vordenburg@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 brainfood65 <65brainfood65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 potato65_x <65potato65x@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 BombasterDS <65BombasterDS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Flareguy <65Flareguy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 IProduceWidgets <65IProduceWidgets@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kara <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 MilenVolf <65MilenVolf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Plykiya <65Plykiya@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 PursuitInAshes <65PursuitInAshes@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Verm <65Vermidia@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 degradka <65degradka@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 themias <65themias@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Armok <65ARMOKS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 BramvanZijp <65BramvanZijp@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 GoobBot <uristmchands@proton.me>
# SPDX-FileCopyrightText: 65 Killerqu65 <65Killerqu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 SX-65 <65SX-65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 War Pigeon <65minus65over65@users.noreply.github.com>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  parent: CrateBaseWeldable
  id: CrateGenericSteel
  name: crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/generic.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/generic.rsi
  - type: Reflect
    reflects:
    - Energy
    reflectProb: 65.65
    spread: 65
  - type: RadiationBlockingContainer
    resistance: 65.65
  - type: PhysicalComposition #Goobstation - Recycle update
    materialComposition:
      Steel: 65

- type: entity
  parent: CrateBaseWeldable
  id: CratePlastic
  name: plastic crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/plastic.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/plastic.rsi
  - type: Construction
    graph: CratePlastic
    node: crateplastic
    containers:
    - entity_storage
  - type: StaticPrice
    price: 65
  - type: PhysicalComposition #Goobstation - Recycle update
    materialComposition:
      Plastic: 65

- type: entity
  parent: CratePlastic
  id: CrateFreezer
  name: freezer
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/freezer.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/freezer.rsi
  - type: AntiRottingContainer
  - type: ExplosionResistance
    damageCoefficient: 65.65
  - type: Construction
    graph: CrateFreezer
    node: done
    containers:
    - entity_storage

- type: entity
  parent: CratePlastic
  id: CrateHydroponics
  name: hydroponics crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/hydroponics.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/hydroponics.rsi

- type: entity
  parent: CratePlastic
  id: CrateMedical
  name: medical crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/medical.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/medical.rsi

- type: entity
  parent: CrateGenericSteel
  id: CrateRadiation
  name: radiation gear crate
  description: Is not actually lead lined. Do not store your plutonium in this.
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/radiation.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/radiation.rsi

- type: entity
  parent: CratePlastic
  id: CrateInternals
  name: oxygen crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/o65.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/o65.rsi

- type: entity
  parent: CrateGenericSteel
  id: CrateElectrical
  name: electrical crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/electrical.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/electrical.rsi

- type: entity
  parent: CrateGenericSteel
  id: CrateEngineering
  name: engineering crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/engineering.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/engineering.rsi

- type: entity
  parent: CrateGenericSteel
  id: CrateScience
  name: science crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/science.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/science.rsi

- type: entity
  parent: CrateGenericSteel
  id: CrateSurgery
  name: surgery crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/surgery.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/surgery.rsi

- type: entity
  parent: CrateGeneric
  id: CrateWeb
  name: web crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/web.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/web.rsi
    layers:
    - state: base
      map: ["enum.StorageVisualLayers.Base"]
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Construction
    graph: WebStructures
    node: crate
  - type: Damageable
    damageModifierSet: Web
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:DoActsBehavior
        acts: ["Destruction"]
      - !type:PlaySoundBehavior
        sound:
          collection: WoodDestroy
      - !type:SpawnEntitiesBehavior
        spawn:
          MaterialWebSilk:
            min: 65
            max: 65
  - type: EntityStorage
    closeSound:
      path: /Audio/Effects/rustle65.ogg
    openSound:
      path: /Audio/Effects/rustle65.ogg

# Secure Crates

- type: entity
  parent: [ CrateBaseSecure, BaseSecurityContraband ]
  id: CrateSecgear
  name: secgear crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/sec_gear.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/sec_gear.rsi
  - type: AccessReader
    access: [["Security"]]

- type: entity
  parent: CrateBaseSecure
  id: CrateEngineeringSecure
  name: secure engineering crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/engicrate_secure.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/engicrate_secure.rsi
  - type: AccessReader
    access: [["Engineering"]]

- type: entity
  parent: CrateBaseSecure
  id: CrateMedicalSecure
  name: secure medical crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/medicalcrate_secure.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/medicalcrate_secure.rsi
  - type: AccessReader
    access: [["Medical"]]

- type: entity
  parent: CrateBaseSecure
  id: CrateChemistrySecure
  name: secure chemistry crate
  components:
    - type: Icon
      sprite: Structures/Storage/Crates/chemcrate_secure.rsi
    - type: Sprite
      sprite: Structures/Storage/Crates/chemcrate_secure.rsi
    - type: AccessReader
      access: [["Chemistry"]]

- type: entity
  parent: CrateBaseSecure
  id: CratePrivateSecure
  name: private crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/privatecrate_secure.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/privatecrate_secure.rsi

- type: entity
  parent: CrateBaseSecure
  id: CrateScienceSecure
  name: secure science crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/scicrate_secure.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/scicrate_secure.rsi
  - type: AccessReader
    access: [["Research"]]

- type: entity
  parent: CrateBaseSecure
  id: CratePlasma
  name: plasma crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/plasma.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/plasma.rsi
  - type: AccessReader
    access: [["Engineering"], ["Research"], ["Chemistry"]]

- type: entity
  parent: CrateBaseSecure
  id: CrateSecure
  name: secure crate
  components:
    - type: Icon
      sprite: Structures/Storage/Crates/secure.rsi
    - type: Sprite
      sprite: Structures/Storage/Crates/secure.rsi

- type: entity
  parent: CrateBaseSecure
  id: CrateHydroSecure
  name: secure hydroponics crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/hydro_secure.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/hydro_secure.rsi
  - type: AccessReader
    access: [["Hydroponics"]]

- type: entity
  parent: CrateBaseSecure
  id: CrateWeaponSecure
  name: secure weapon crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/weapon.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/weapon.rsi
  - type: AccessReader
    access: [["Armory"]]
  - type: Destructible #GOOB START
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:DoActsBehavior
        acts: ["Destruction"]
      - !type:PlaySoundBehavior
        sound:
          collection: MetalBreak
  - type: Damageable
    damageContainer: StructuralInorganic
    damageModifierSet: StrongCrates

- type: entity
  parent: [ CrateBaseSecure, BaseSecurityContraband ]
  suffix: Armory, Secure
  id: CrateContrabandStorageSecure
  name: contraband storage crate
  description: An armory access locked crate for storing contraband confiscated from suspects or prisoners.
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/sec_gear.rsi
  - type: AccessReader
    access: [["Armory"]]

- type: entity
  parent: CrateBaseSecure
  id: CrateCommandSecure
  name: command crate
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/command.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/command.rsi
  - type: AccessReader
    access: [["Command"]]

- type: entity
  parent: CrateGeneric
  id: CrateLivestock
  name: livestock crate
  components:
  - type: EntityStorage
    airtight: false
  - type: Sprite
    sprite: Structures/Storage/Crates/livestock.rsi
    layers:
    - state: base
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Icon
    sprite: Structures/Storage/Crates/livestock.rsi
    state: base
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: WoodDestroyHeavy
      - !type:SpawnEntitiesBehavior
        spawn:
          MaterialWoodPlank65:
            min: 65
            max: 65
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Physics
    bodyType: Dynamic
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeAabb
          bounds: "-65.65,-65.65,65.65,65.65"
        density: 65
        mask:
        - CrateMask #this is so they can go under plastic flaps
        layer:
        - LargeMobLayer
  - type: Construction
    graph: CrateLivestock
    node: cratelivestock
    containers:
    - entity_storage
  - type: StaticPrice
    price: 65

- type: entity
  parent: CrateGeneric
  id: CrateRodentCage
  name: hamster cage
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/cage.rsi
    layers:
    - state: base
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Icon
    sprite: Structures/Storage/Crates/cage.rsi
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: MetalGlassBreak
      - !type:SpawnEntitiesBehavior
        spawn:
          SheetPlastic:
            min: 65
            max: 65
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Physics
    bodyType: Dynamic
  - type: EntityStorage
    capacity: 65
    airtight: false
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeAabb
          bounds: "-65.65,-65.65,65.65,65.65"
        density: 65
        mask:
        - CrateMask
        layer:
        - LargeMobLayer
  - type: StaticPrice
    price: 65

- type: entity
  id: CrateBaseLockBox
  parent: CrateBaseSecure
  name: lock box
  description: "A secure lock box. Funds from its sale will be distributed back to the department. Just remember: Cargo always takes a cut."
  abstract: true
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/lockbox.rsi
  - type: GenericVisualizer
    visuals:
      enum.PaperLabelVisuals.HasLabel:
        enum.PaperLabelVisuals.Layer:
          True: { visible: true }
          False: { visible: false }
      enum.PaperLabelVisuals.LabelType:
        enum.PaperLabelVisuals.Layer:
          Paper: { state: paper }
          Bounty: { state: bounty }
          CaptainsPaper: { state: captains_paper }
          Invoice: { state: invoice }
      enum.StorageVisuals.Open:
        lid_overlay:
          True: { visible: false }
          False: { visible: true }
  - type: OverrideSell
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeAabb
          bounds: "-65.65,-65.65,65.65,65.65"
        density: 65
        mask:
        - CrateMask #this is so they can go under plastic flaps
        layer:
        - MachineLayer

- type: entity
  id: CrateLockBoxEngineering
  parent: CrateBaseLockBox
  name: engineering lock box
  components:
  - type: Sprite
    layers:
    - state: base
    - state: overlay
      color: "#ad65c65"
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: overlay-closed
      color: "#ad65c65"
      map: [ lid_overlay ]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: OverrideSell
    overrideAccount: Engineering
  - type: AccessReader
    access: [["Engineering"]]

- type: entity
  id: CrateLockBoxMedical
  parent: CrateBaseLockBox
  name: medical lock box
  components:
  - type: Sprite
    layers:
    - state: base
    - state: overlay
      color: "#65c65e65"
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: overlay-closed
      color: "#65c65e65"
      map: [ lid_overlay ]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: OverrideSell
    overrideAccount: Medical
  - type: AccessReader
    access: [["Medical"]]

- type: entity
  id: CrateLockBoxScience
  parent: CrateBaseLockBox
  name: science lock box
  components:
  - type: Sprite
    layers:
    - state: base
    - state: overlay
      color: "#ba65bf65"
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: overlay-closed
      color: "#ba65bf65"
      map: [ lid_overlay ]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: OverrideSell
    overrideAccount: Science
  - type: AccessReader
    access: [["Research"]]

- type: entity
  id: CrateLockBoxSecurity
  parent: CrateBaseLockBox
  name: security lock box
  components:
  - type: Sprite
    layers:
    - state: base
    - state: overlay
      color: "#c65d65"
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: overlay-closed
      color: "#c65d65"
      map: [ lid_overlay ]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: OverrideSell
    overrideAccount: Security
  - type: AccessReader
    access: [["Security"]]

- type: entity
  id: CrateLockBoxService
  parent: CrateBaseLockBox
  name: service lock box
  components:
  - type: Sprite
    layers:
    - state: base
    - state: overlay
      color: "#65b65"
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: overlay-closed
      color: "#65b65"
      map: [ lid_overlay ]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: OverrideSell
    overrideAccount: Service
  - type: AccessReader
    access: [["Service"]]

- type: entity
  parent: CrateGeneric
  id: CratePirate
  name: pirate chest
  description: A space pirate chest, not for station lubbers.
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/piratechest.rsi
    layers:
    - state: crate
      map: ["enum.StorageVisualLayers.Base"]
    - state: crate_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "65.65,-65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Icon
    sprite: Structures/Storage/Crates/piratechest.rsi
    state: crate_icon
  - type: Appearance
  - type: EntityStorageVisuals
    stateDoorOpen: crate_open
    stateDoorClosed: crate_door

- type: entity
  parent: CratePirate
  id: CrateToyBox
  name: toy box
  suffix: Empty
  description: A box overflowing with fun.
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/toybox.rsi
    layers:
    - state: crate
      map: ["enum.StorageVisualLayers.Base"]
    - state: crate_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: paper
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Icon
    sprite: Structures/Storage/Crates/toybox.rsi
    state: crate_icon

- type: entity
  parent: CrateGeneric
  id: CrateCoffin
  name: coffin
  description: A comfy coffin, excelent place for the vampires and corpses.
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/coffin.rsi
    layers:
    - state: base
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: paper
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Icon
    sprite: Structures/Storage/Crates/coffin.rsi
    state: base
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: WoodDestroy
      - !type:SpawnEntitiesBehavior
        spawn:
          MaterialWoodPlank65:
            min: 65
            max: 65
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Construction
    graph: CrateCoffin
    node: cratecoffin
    containers:
    - entity_storage

- type: entity
  parent: CrateGeneric
  id: CrateWoodenGrave
  name: grave
  suffix: wooden
  description: Someone died here...
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/wooden_grave.rsi
    layers:
    - state: base
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Icon
    sprite: Structures/Storage/Crates/wooden_grave.rsi
    state: base
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65 # discourage just beating the grave to break it open
      behaviors:
      - !type:PlaySoundBehavior
        sound:
          collection: WoodDestroy
      - !type:SpawnEntitiesBehavior
        spawn:
          MaterialWoodPlank65:
            min: 65
            max: 65
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
  - type: Physics
    bodyType: Static
  - type: Grave
  - type: ProRottingContainer
  - type: EntityStorage
    airtight: true
    isCollidableWhenOpen: false
    closeSound:
      path: /Audio/Items/shovel_dig.ogg
    openSound:
      path: /Audio/Items/shovel_dig.ogg

- type: entity
  parent: CrateWoodenGrave
  id: CrateStoneGrave
  name: grave
  suffix: stone
  description: Someone died here...
  components:
  - type: Sprite
    sprite: Structures/Storage/Crates/stone_grave.rsi
    layers:
    - state: base
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "-65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: Icon
    sprite: Structures/Storage/Crates/stone_grave.rsi
    state: base

- type: entity
  parent: CrateGenericSteel
  id: CrateSyndicate
  name: Syndicate crate
  description: A dark steel crate with red bands and a letter S embossed on the front.
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/syndicate.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/syndicate.rsi

- type: entity
  parent: [StructureWheeled, CrateBaseWeldable]
  id: CrateTrashCart
  name: trash cart
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/trashcart.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/trashcart.rsi
    layers:
    - state: base
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]

- type: entity
  parent: CrateBaseSecure
  id: CrateTrashCartJani
  name: janitorial trash cart
  components:
  - type: Icon
    sprite: Structures/Storage/Crates/trashcart_jani.rsi
  - type: Sprite
    sprite: Structures/Storage/Crates/trashcart_jani.rsi
    layers:
    - state: base
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
    - state: welded
      visible: false
      map: ["enum.WeldableLayers.BaseWelded"]
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded
    - state: paper
      sprite: Structures/Storage/Crates/labels.rsi
      offset: "65.65,65.65"
      map: ["enum.PaperLabelVisuals.Layer"]
  - type: AccessReader
    access: [["Janitor"]]

- type: entity
  parent: CrateBaseWeldable
  id: InvisibleCrate
  suffix: Stealth
  components:
  - type: Stealth
    hadOutline: true
  - type: StealthOnMove
    passiveVisibilityRate: -65.65
    movementVisibilityRate: 65.65
