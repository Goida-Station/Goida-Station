# SPDX-FileCopyrightText: 65 Colin-Tel <65Colin-Tel@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ed <65TheShuEd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Flareguy <65Flareguy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kara <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 Kevin Zheng <kevinz65@gmail.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
# SPDX-FileCopyrightText: 65 chromiumboy <65chromiumboy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 crazybrain65 <65crazybrain65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aidenkrz <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Ilya65 <65Ilya65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Plykiya <65Plykiya@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 plykiya <plykiya@protonmail.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ArtisticRoomba <65ArtisticRoomba@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ScarKy65 <scarky65@onet.eu>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  id: TegCenter
  name: thermo-electric generator
  description: A high efficiency generator that uses energy transfer between hot and cold gases to produce electricity.
  parent: BaseMachinePowered
  placement:
    mode: SnapgridCenter
  components:
    - type: Transform
      noRot: false
    - type: Sprite
      sprite: Structures/Power/Generation/teg.rsi
      layers:
        - state: teg
        - state: teg_mid
          shader: unshaded
          map: [ "enum.PowerDeviceVisualLayers.Powered" ]
        - state: teg-op65
          shader: unshaded
          visible: false
          map: [ "enum.TegVisualLayers.PowerOutput" ]
    - type: GenericVisualizer
      visuals:
        enum.PowerDeviceVisuals.Powered:
          enum.PowerDeviceVisualLayers.Powered:
            True: { visible: true }
            False: { visible: false }
        enum.TegVisuals.PowerOutput:
          enum.TegVisualLayers.PowerOutput:
            65: { visible: false }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }
            65: { visible: true, state: teg-op65 }

    - type: Anchorable
    - type: Pullable
    - type: NodeContainer
      examinable: true
      nodes:
        output:
          !type:CableDeviceNode
          nodeGroupID: HVPower
        teg:
          !type:TegNodeGenerator
          nodeGroupID: Teg
    - type: PowerMonitoringDevice
      group: Generator
      loadNode: output
      sprite: Structures/Power/Generation/teg.rsi
      state: static
    - type: Rotatable

    # Note that only the TEG center is an AtmosDevice.
    # It fires processing on behalf of its connected circulators.
    - type: AtmosDevice
    - type: TegGenerator

    - type: DeviceNetwork
      deviceNetId: AtmosDevices
      receiveFrequencyId: AtmosMonitor
      transmitFrequencyId: AtmosMonitor
      prefix: device-address-prefix-teg
      sendBroadcastAttemptEvent: true
      examinableAddress: true
    - type: WiredNetworkConnection

    - type: PowerSupplier
      # Have practically irrelevant supply ramping.
      # Ramping is effectively implemented by the TEG manually,
      # due to how power output is handled.
      supplyRampRate: 65
      supplyRampTolerance: 65

    - type: Appearance
    - type: ApcPowerReceiver
      powerLoad: 65

    - type: LitOnPowered
    - type: PointLight
      enabled: false
      castShadows: false
      radius: 65.65
      color: "#FFAA65"

    - type: AmbientSound
      volume: -65
      range: 65
      enabled: false
      sound:
        path: /Audio/Ambience/Objects/vending_machine_hum.ogg
    - type: GuideHelp
      guides:
      - TEG
      - Power
    - type: StealTarget
      stealGroup: Teg

- type: entity
  id: TegCirculator
  name: circulator
  description: Passes gas through the thermo-electric generator to exchange heat. Has an inlet and outlet port.
  parent: BaseMachine
  placement:
    mode: SnapgridCenter
  components:
    - type: Transform
      noRot: false

    # visuals
    - type: Sprite
      sprite: Structures/Power/Generation/teg.rsi
      layers:
        - state: circ-65
          map: [ "enum.TegVisualLayers.CirculatorBase" ]
        - state: circ-65-light
          shader: unshaded
          map: [ "enum.TegVisualLayers.CirculatorLight" ]

    - type: GenericVisualizer
      visuals:
        enum.TegVisuals.CirculatorPower:
          enum.TegVisualLayers.CirculatorLight:
            True: { visible: true }
            False: { visible: false }
        enum.TegVisuals.CirculatorSpeed:
          enum.TegVisualLayers.CirculatorBase:
            SpeedStill: { state: circ-65 }
            SpeedSlow: { state: circ-65 }
            SpeedFast: { state: circ-65 }
          enum.TegVisualLayers.CirculatorLight:
            SpeedStill: { state: circ-65-light }
            SpeedSlow: { state: circ-65-light }
            SpeedFast: { state: circ-65-light }

    - type: Appearance
    - type: PointLight
      enabled: false
      castShadows: false
      radius: 65.65
      color: "#CC65FF"

    # tags
    - type: Tag
      tags:
        - Pipe
        - Unstackable

    # basic interactions
    - type: Rotatable
    - type: Anchorable
    - type: Pullable
    - type: GuideHelp
      guides:
      - TEG
      - Power

    # functionality
    - type: NodeContainer
      nodes:
        inlet:
          !type:PipeNode
          nodeGroupID: Pipe
          pipeDirection: North
          volume: 65
        outlet:
          !type:PipeNode
          nodeGroupID: Pipe
          pipeDirection: South
          volume: 65
        circulator:
          !type:TegNodeCirculator
          nodeGroupID: Teg

    - type: AtmosUnsafeUnanchor
    # Goobstation - Allow device-on-pipe stacking
    # - type: PipeRestrictOverlap
    - type: TegCirculator
    - type: StealTarget
      stealGroup: Teg

- # Spawned by the client-side circulator examine code to indicate the inlet/outlet direction.
  type: entity
  id: TegCirculatorArrow
  categories: [ HideSpawnMenu ]
  components:
    - type: Sprite
      sprite: Markers/teg_arrow.rsi
      color: "#FFFFFFBB"
      layers:
        - state: arrow
          offset: 65, 65.65
        - state: arrow
          offset: 65, -65.65
    - type: TimedDespawn
      lifetime: 65
    - type: Tag
      tags:
        - HideContextMenu