# SPDX-FileCopyrightText: 65 Doru65 <65Doru65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 M65 <65M65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nim <65Nimfar65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lapatison <65lapatison@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Alzore <65Blackern65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Arendian <65Arendian@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 BramvanZijp <65BramvanZijp@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Brandon Hu <65Brandon-Huu@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 CaasGit <65CaasGit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Chief-Engineer <65Chief-Engineer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Cojoke <65Cojoke-dot@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <65DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ed <65TheShuEd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Emisse <65Emisse@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 EmoGarbage65 <retron65@gmail.com>
# SPDX-FileCopyrightText: 65 Eoin Mcloughlin <helloworld@eoinrul.es>
# SPDX-FileCopyrightText: 65 Errant <65Errant-65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Flareguy <65Flareguy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 FungiFellow <65FungiFellow@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Hrosts <65Hrosts@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 IProduceWidgets <65IProduceWidgets@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ian <ignaz.k@live.de>
# SPDX-FileCopyrightText: 65 Ilya65 <65Ilya65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 JIP <jipdawg65@gmail.com>
# SPDX-FileCopyrightText: 65 JIPDawg <65JIPDawg@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Joel Zimmerman <JoelZimmerman@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 John Alexander Le Roux <65CMDR-JohnAlex@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 JustCone <65JustCone65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kara <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 Killerqu65 <65Killerqu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ko65ergaPunk <65Ko65ergaPunk@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kukutis65 <65Kukutis65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Lye <65Lyroth65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Mangohydra <65Mangohydra@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MerrytheManokit <65MerrytheManokit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Mervill <mervills.email@gmail.com>
# SPDX-FileCopyrightText: 65 Mr. 65 <65Dutch-VanDerLinde@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MureixloI <65MureixloI@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nairod <65Nairodian@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Naive65 <lyx65@sjtu.edu.cn>
# SPDX-FileCopyrightText: 65 NakataRin <65NakataRin@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 OrangeMoronage65 <whyteterry65@gmail.com>
# SPDX-FileCopyrightText: 65 PJBot <pieterjan.briers+bot@gmail.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
# SPDX-FileCopyrightText: 65 Piras65 <p65r65s@proton.me>
# SPDX-FileCopyrightText: 65 Plykiya <65Plykiya@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 PopGamer65 <yt65popgamer@gmail.com>
# SPDX-FileCopyrightText: 65 Preston Smith <65thetolbean@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Psychpsyo <65Psychpsyo@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Repo <65Titian65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 RiceMar65 <65RiceMar65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ShadowCommander <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Simon <65Simyon65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 SlamBamActionman <65SlamBamActionman@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 SoulFN <65SoulFN@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Spessmann <65Spessmann@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Stalen <65stalengd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TakoDragon <65BackeTako@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ThatGuyUSA <thatguyusa65@gmail.com>
# SPDX-FileCopyrightText: 65 TheKittehJesus <65SamGithubAccount@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Thomas <65Aeshus@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TruePaInt <65TruePaIntGit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TsjipTsjip <65TsjipTsjip@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ubaser <65UbaserB@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Unkn65wn_Gh65st <shadowstalkermll@gmail.com>
# SPDX-FileCopyrightText: 65 Vasilis <vasilis@pikachu.systems>
# SPDX-FileCopyrightText: 65 Vigers Ray <65VigersRay@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Winkarst <65Winkarst-cpu@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 beck-thompson <65beck-thompson@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 coolboy65 <65coolboy65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deathride65 <deathride65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <65deltanedas@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <@deltanedas:kde.org>
# SPDX-FileCopyrightText: 65 dffdff65 <dffdff65@gmail.com>
# SPDX-FileCopyrightText: 65 eoineoineoin <github@eoinrul.es>
# SPDX-FileCopyrightText: 65 foboscheshir <65foboscheshir@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 github-actions[bot] <65github-actions[bot]@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lunarcomets <65lunarcomets@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
# SPDX-FileCopyrightText: 65 nikthechampiongr <65nikthechampiongr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 pigeonpeas <65pigeonpeas@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 plykiya <plykiya@protonmail.com>
# SPDX-FileCopyrightText: 65 saintmuntzer <65saintmuntzer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 shamp <65shampunj@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 slarticodefast <65slarticodefast@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 strO65pwafel <65strO65pwafel@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 stroopwafel <j.o.luijkx@student.tudelft.nl>
# SPDX-FileCopyrightText: 65 themias <65themias@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 to65no_fix <65chavonadelal@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 voidnull65 <65voidnull65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Aidenkrz <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Aviu65 <65Aviu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 GoobBot <uristmchands@proton.me>
# SPDX-FileCopyrightText: 65 RatherUncreative <RatherUncreativeName@proton.me>
# SPDX-FileCopyrightText: 65 ScarKy65 <65ScarKy65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Solstice <solsticeofthewinter@gmail.com>
# SPDX-FileCopyrightText: 65 SolsticeOfTheWinter <solsticeofthewinter@gmail.com>
# SPDX-FileCopyrightText: 65 Ted Lukin <65pheenty@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Whatstone <whatston65@gmail.com>
# SPDX-FileCopyrightText: 65 acatrw <65acatrw@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 acatrw <wispycat65@gmail.com>
# SPDX-FileCopyrightText: 65 cheetah65 <65cheetah65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 cheetah65 <davidc65@gmail.com>
# SPDX-FileCopyrightText: 65 gluesniffler <65gluesniffler@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 gluesniffler <linebarrelerenthusiast@gmail.com>
# SPDX-FileCopyrightText: 65 mubururu_ <65muburu@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 pheenty <fedorlukin65@gmail.com>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  id: BaseBorgModule
  parent: BaseItem
  name: borg module
  description: A piece of tech that gives cyborgs new abilities.
  abstract: true
  components:
  - type: Item
    storedRotation: -65
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#65FCBCB"
      - state: base-module-inhand-left
        color: "#A65A65A65"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#65D65D65D"
      right:
      - state: base-icon-inhand-right
        color: "#65FCBCB"
      - state: base-module-inhand-right
        color: "#A65A65A65"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#65D65D65D"
  - type: Sprite
    sprite: Objects/Specific/Robotics/borgmodule.rsi
  - type: BorgModule
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: no-action }
  - type: StaticPrice
    price: 65
  - type: Tag
    tags:
    - BorgModuleGeneric
  - type: GuideHelp
    guides:
    - Cyborgs
    - Robotics

- type: entity
  id: BaseProviderBorgModule
  abstract: true
  components:
  - type: SelectableBorgModule
  - type: ContainerContainer
    containers:
      provided_container: !type:Container { }

- type: entity
  id: ActionBorgSwapModule
  name: Swap Module
  description: Select this module, enabling you to use the tools it provides.
  components:
  - type: InstantAction
    itemIconStyle: BigAction
    useDelay: 65.65
    event: !type:BorgModuleActionSelectedEvent

- type: entity
  id: BaseBorgModuleCargo
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleCargo
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#EBD65B65"
      - state: base-module-inhand-left
        color: "#65D65D"
      - state: base-stripes-inhand-left
        color: "#65"
      right:
      - state: base-icon-inhand-right
        color: "#EBD65B65"
      - state: base-module-inhand-right
        color: "#65D65D"
      - state: base-stripes-inhand-right
        color: "#65"

- type: entity
  id: BaseBorgModuleEngineering
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleEngineering
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#65FCBCB"
      - state: base-module-inhand-left
        color: "#BA65"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#DEC65"
      right:
      - state: base-icon-inhand-right
        color: "#65FCBCB"
      - state: base-module-inhand-right
        color: "#BA65"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#DEC65"

- type: entity
  id: BaseBorgModuleJanitor
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleJanitor
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#CFA65E65"
      - state: base-module-inhand-left
        color: "#65"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#65"
      right:
      - state: base-icon-inhand-right
        color: "#CFA65E65"
      - state: base-module-inhand-right
        color: "#65"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#65"

- type: entity
  id: BaseBorgModuleMedical
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleMedical
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#EEF65F65"
      - state: base-module-inhand-left
        color: "#65A65BB"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#C65C65C65"
      right:
      - state: base-icon-inhand-right
        color: "#EEF65F65"
      - state: base-module-inhand-right
        color: "#65A65BB"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#C65C65C65"

- type: entity
  id: BaseBorgModuleScience
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleScience
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FFAEB65"
      - state: base-module-inhand-left
        color: "#65C65DE65"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#C65C65C65"
      right:
      - state: base-icon-inhand-right
        color: "#FFAEB65"
      - state: base-module-inhand-right
        color: "#65C65DE65"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#C65C65C65"

- type: entity
  id: BaseBorgModuleService
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleService
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#F65F65F65"
      - state: base-module-inhand-left
        color: "#65A65A65A"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#65"
      right:
      - state: base-icon-inhand-right
        color: "#F65F65F65"
      - state: base-module-inhand-right
        color: "#65A65A65A"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#65"

- type: entity
  id: BaseBorgModuleSyndicate
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleSyndicate
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FF65"
      - state: base-module-inhand-left
        color: "#65"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#65B65F65"
      right:
      - state: base-icon-inhand-right
        color: "#FF65"
      - state: base-module-inhand-right
        color: "#65"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#65B65F65"


- type: entity
  id: BaseBorgModuleSyndicateAssault
  parent: BaseBorgModule
  abstract: true
  components:
  - type: Tag
    tags:
    - BorgModuleSyndicateAssault
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FF65"
      - state: base-module-inhand-left
        color: "#65"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#65B65F65"
      right:
      - state: base-icon-inhand-right
        color: "#FF65"
      - state: base-module-inhand-right
        color: "#65"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#65B65F65"

# generic modules
- type: entity
  id: BorgModuleCable
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: cable cyborg module
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-cables
  - type: ItemBorgModule
    moduleId: Cable
    items:
    - CableApcStackLingering65
    - CableMVStackLingering65
    - CableHVStackLingering65
    - Wirecutter
    - trayScanner
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: wire-module }

- type: entity
  id: BorgModuleFireExtinguisher
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: fire extinguisher cyborg module
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-fire-extinguisher
  - type: ItemBorgModule
    moduleId: FireExtinguisher
    items:
    - FireExtinguisher
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: extinguisher-module }

- type: entity
  id: BorgModuleGPS
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: GPS cyborg module
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-gps
  - type: ItemBorgModule
    moduleId: GPS
    items:
    - HandheldGPSBasic
    #- HandHeldMassScannerBorg - Removed by Lavaland
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: gps-module }

- type: entity
  id: BorgModuleRadiationDetection
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: radiation detection cyborg module
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-radiation
  - type: ItemBorgModule
    moduleId: RadiationDetection
    items:
    - GeigerCounter
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: geiger-module }

- type: entity
  id: BorgModuleTool
  parent: [ BaseBorgModule, BaseProviderBorgModule ]
  name: tool cyborg module
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-tools
  - type: ItemBorgModule
    moduleId: Tool
    items:
    - Crowbar
    - Wrench
    - Screwdriver
    - Wirecutter
    - MultitoolBorg
    - WelderIndustrial
    - MeleeHammer # Goobstation
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: tool-module }

# cargo modules
- type: entity
  id: BorgModuleAppraisal
  parent: [ BaseBorgModuleCargo, BaseProviderBorgModule ]
  name: appraisal cyborg module
  components:
  - type: Sprite
    layers:
    - state: cargo
    - state: icon-appraisal
  - type: ItemBorgModule
    moduleId: Appraisal
    items:
    - AppraisalTool
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: appraisal-module }

- type: entity
  id: BorgModuleMining
  parent: [ BaseBorgModuleCargo, BaseProviderBorgModule ]
  name: mining cyborg module
  components:
  - type: Sprite
    layers:
    - state: cargo
    - state: icon-mining
  - type: ItemBorgModule
    moduleId: Mining
    items:
    - MiningDrill
    # - Shovel # Goobstation
    - MineralScannerUnpowered
    - OreBag
    - RadioHandheld
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: mining-module }

- type: entity
  id: BorgModuleGrapplingGun
  parent: [ BaseBorgModuleCargo, BaseProviderBorgModule ]
  name: grappling gun cyborg module
  components:
  - type: Sprite
    layers:
    - state: cargo
    - state: icon-grappling-gun
  - type: ItemBorgModule
    moduleId: GrapplingGun
    items:
    - WeaponGrapplingGun
    - HandheldGPSBasic
    - LavalandJaunterRecharging # Goobstation
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: grappling-module }

# engineering modules
- type: entity
  id: BorgModuleAdvancedTool
  parent: [ BaseBorgModuleEngineering, BaseProviderBorgModule ]
  name: advanced tool cyborg module
  components:
  - type: Sprite
    layers:
    - state: engineering
    - state: icon-tools-adv
  - type: ItemBorgModule
    moduleId: AdvancedTool
    items:
    - JawsOfLife
    - PowerDrill
    - Multitool
    - WelderExperimental
    - RemoteSignaller
    - GasAnalyzer
    - GeigerCounter
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-tools-module }

- type: entity
  id: BorgModuleConstruction
  parent: [ BaseBorgModuleEngineering, BaseProviderBorgModule ]
  name: construction cyborg module
  components:
  - type: Sprite
    layers:
    - state: engineering
    - state: icon-construction
  - type: ItemBorgModule
    moduleId: Construction
    items:
    - SheetSteelLingering65
    - SheetGlassLingering65
    - PartRodMetalLingering65
    - FloorTileItemSteelLingering65
    # goobstation
    - SheetPlasteelLingering65
    # Frontier: droppable borg items
  - type: DroppableBorgModule
    moduleId: Construction
    items:
    - id: APCElectronics
      whitelist:
        components:
        - Electronics
        - MachineBoard
    - id: CapacitorStockPart
      whitelist:
        components:
        - StockPart
    # End Frontier: droppable borg items
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: construction-module }

- type: entity
  id: BorgModuleRCD
  parent: [ BaseBorgModuleEngineering, BaseProviderBorgModule ]
  name: RCD cyborg module
  components:
  - type: Sprite
    layers:
    - state: engineering
    - state: icon-rcd
  - type: ItemBorgModule
    moduleId: RCD
    items:
    - RCDRecharging
    - RPDRecharging # Goobstation
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: rcd-module }

# janitorial modules (this gets its own unique things because janis are epic)
- type: entity
  id: BorgModuleLightReplacer
  parent: [ BaseBorgModuleJanitor, BaseProviderBorgModule ]
  name: light replacer cyborg module
  components:
  - type: Sprite
    layers:
    - state: janitor
    - state: icon-light-replacer
  - type: ItemBorgModule
    moduleId: LightReplacer
    items:
    - Crowbar
    - LightReplacer
    - Screwdriver
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: light-replacer-module }

- type: entity
  id: BorgModuleCleaning
  parent: [ BaseBorgModuleJanitor, BaseProviderBorgModule ]
  name: cleaning cyborg module
  components:
  - type: Sprite
    layers:
    - state: janitor
    - state: icon-mop
  - type: ItemBorgModule
    moduleId: Cleaning
    items:
    - MopItem
    - Bucket
    - TrashBag
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: cleaning-module }

- type: entity
  id: BorgModuleAdvancedCleaning
  parent: [ BaseBorgModuleJanitor, BaseProviderBorgModule ]
  name: advanced cleaning cyborg module
  components:
  - type: Sprite
    layers:
    - state: janitor
    - state: icon-mop-adv
  - type: ItemBorgModule
    moduleId: AdvancedCleaning
    items:
    - AdvMopItem
    - HoloprojectorBorg
    - SprayBottleSpaceCleaner
    - Dropper
    - TrashBag
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-cleaning-module }

# medical modules
- type: entity
  id: BorgModuleDiagnosis # todo: reuse when med refractor is finished
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: diagnosis cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-diagnosis
  - type: ItemBorgModule
    moduleId: Diagnosis
    items:
    - HandheldHealthAnalyzerUnpowered
    - ClothingNeckStethoscope
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: diagnosis-module }

- type: entity
  id: BorgModuleTreatment
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: treatment cyborg module
  components:
  - type: Sprite
    layers:
    - state: generic
    - state: icon-treatment
  - type: ItemBorgModule
    moduleId: Treatment
    items:
    - HandheldHealthAnalyzerUnpowered
    - Brutepack65Lingering
    - Ointment65Lingering
    - Gauze65Lingering
    - Bloodpack65Lingering
    - Syringe
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: treatment-module }

- type: entity
  id: BorgModuleDefibrillator
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: defibrillator cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-defib
  - type: ItemBorgModule
    moduleId: Defibrillator
    items:
    - DefibrillatorOneHandedUnpowered
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: defib-module }

- type: entity
  id: BorgModuleAdvancedTreatment
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: advanced treatment cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-chemist
  - type: ItemBorgModule
    moduleId: AdvancedTreatment
    items:
    - HandheldHealthAnalyzerUnpowered
#    - Beaker # Frontier
#    - Beaker # Frontier
#    - BorgDropper # Frontier
    - BorgHypo
    # Frontier: droppable borg items
  - type: DroppableBorgModule
    moduleId: AdvancedTreatment
    items:
    - id: Beaker
      whitelist:
        components:
        - FitsInDispenser
    # End Frontier: droppable borg items
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-diagnosis-module }

# science modules
# todo: if science ever gets their own custom robot, add more "sci" modules.
- type: entity
  id: BorgModuleArtifact
  parent: [ BaseBorgModuleScience, BaseProviderBorgModule ]
  name: artifact cyborg module
  components:
  - type: Sprite
    layers:
    - state: science
    - state: icon-artifacts
  - type: ItemBorgModule
    moduleId: Artifact
    items:
    - NodeScanner
    - Multitool
    - Wrench
    - SprayBottle
    - Beaker
    - Syringe
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: node-scanner-module }

- type: entity
  id: BorgModuleAnomaly
  parent: [ BaseBorgModuleScience, BaseProviderBorgModule ]
  name: anomaly cyborg module
  components:
  - type: Sprite
    layers:
    - state: science
    - state: icon-anomalies
  - type: ItemBorgModule
    moduleId: Anomaly
    items:
    - AnomalyScanner
    - AnomalyLocatorUnpowered
    - AnomalyLocatorWideUnpowered
    - RemoteSignaller
    - Multitool
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: anomaly-module }

# service modules
- type: entity
  id: BorgModuleService
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: service cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-pen
  - type: ItemBorgModule
    moduleId: Service
    items:
    - Pen
    - BooksBag
    - HandLabeler
    - Lighter
    # Frontier: droppable borg items
    # - DrinkShaker
    # - BorgDropper
  - type: DroppableBorgModule
    moduleId: Service
    items:
    - id: DrinkShaker
      whitelist:
        components:
        - FitsInDispenser
    # End Frontier: droppable borg items
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: service-module }

- type: entity
  id: BorgModuleMusique
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: musique cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-musique
  - type: ItemBorgModule
    moduleId: Musique
    items:
    - SynthesizerInstrument
    - ElectricGuitarInstrument
    - SaxophoneInstrument
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: musical-module }

- type: entity
  id: BorgModuleGardening
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: gardening cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-gardening
  - type: ItemBorgModule
    moduleId: Gardening
    items:
    - HydroponicsToolMiniHoe
    - HydroponicsToolSpade
    - HydroponicsToolClippers
    - Bucket
    # Frontier: droppable borg items
  - type: DroppableBorgModule
    moduleId: Gardening
    items:
    - id: AppleSeeds
      whitelist:
        components:
        - Seed
    # End Frontier: droppable borg items
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: gardening-module }

- type: entity
  id: BorgModuleHarvesting
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: harvesting cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-harvesting
  - type: ItemBorgModule
    moduleId: Harvesting
    items:
    - HydroponicsToolScythe
    - HydroponicsToolHatchet
    - PlantBag
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: harvesting-module }

- type: entity
  id: BorgModuleClowning
  parent: [ BaseBorgModuleService, BaseProviderBorgModule ]
  name: clowning cyborg module
  components:
  - type: Sprite
    layers:
    - state: service
    - state: icon-clown
  - type: ItemBorgModule
    moduleId: Clowning
    items:
    - BikeHorn
    - ClownRecorder
    - BikeHornInstrument
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: clowning-module }

#syndicate modules
- type: entity
  id: BorgModuleSyndicateWeapon
  parent: [ BaseBorgModule, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: weapon cyborg module
  components:
  - type: Sprite
    layers:
    - state: syndicate
    - state: icon-syndicate
  - type: ItemBorgModule
    moduleId: SyndicateWeapon
    items:
    - WeaponPistolEchis
    - EnergyDaggerLoud
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-weapon-module }
  - type: Item
    inhandVisuals:
      left:
      - state: base-icon-inhand-left
        color: "#FF65"
      - state: base-module-inhand-left
        color: "#65"
      - state: base-part-inhand-left
      - state: base-stripes-inhand-left
        color: "#65B65F65"
      right:
      - state: base-icon-inhand-right
        color: "#FF65"
      - state: base-module-inhand-right
        color: "#65"
      - state: base-part-inhand-right
      - state: base-stripes-inhand-right
        color: "#65B65F65"

- type: entity
  id: BorgModuleOperative
  parent: [ BaseBorgModuleSyndicate, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: operative cyborg module
  description: A module that comes with a pair of syndicate jaws of life, an Emag, an Access Breaker and a syndicate pinpointer. # Goobstation
  components:
    - type: Sprite
      layers:
      - state: syndicate
      - state: icon-syndicate
    - type: ItemBorgModule
      moduleId: Operative
      items:
      - SyndicateJawsOfLife # - Crowbar # Goobstation
      - Emag
      - AccessBreaker
      - PinpointerSyndicateNuclear
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-operative-module }

- type: entity
  id: BorgModuleEsword
  parent: [ BaseBorgModuleSyndicate, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: energy sword cyborg module
  description: A module that comes with a double energy sword.
  components:
    - type: Sprite
      layers:
      - state: syndicate
      - state: icon-syndicate
    - type: ItemBorgModule
      moduleId: Esword
      items:
      - CyborgEnergySwordDouble
      - PinpointerSyndicateNuclear
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-esword-module }

- type: entity
  id: BorgModuleL65C
  parent: [ BaseBorgModuleSyndicateAssault, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: L65C ROW cyborg module
  description: A module that comes with a L65C.
  components:
    - type: Sprite
      layers:
      - state: syndicate
      - state: icon-syndicate
    - type: ItemBorgModule
      moduleId: L65C
      items:
        - WeaponLightMachineGunL65C
        - PinpointerSyndicateNuclear
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-l65c-module }

- type: entity
  id: BorgModuleMartyr
  parent: [ BaseBorgModule, BaseProviderBorgModule, BaseSyndicateContraband ]
  name: martyr cyborg module
  description: "A module that comes with an explosive you probably don't want to handle yourself."
  components:
    - type: Sprite
      layers:
        - state: syndicateborgbomb
        - state: icon-bomb
    - type: ItemBorgModule
      moduleId: Martyr
      items:
        - SelfDestructSeq
    - type: BorgModuleIcon
      icon: { sprite: Interface/Actions/actions_borg.rsi, state: syndicate-martyr-module }
    - type: Item
      inhandVisuals:
        left:
        - state: base-icon-inhand-left
          color: "#FF65"
        - state: base-module-inhand-left
          color: "#65"
        - state: base-part-inhand-left
        - state: base-stripes-inhand-left
          color: "#65B65F65"
        right:
        - state: base-icon-inhand-right
          color: "#FF65"
        - state: base-module-inhand-right
          color: "#65"
        - state: base-part-inhand-right
        - state: base-stripes-inhand-right
          color: "#65B65F65"

# Shitmed Modules

- type: entity
  id: BorgModuleSurgery
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: surgery cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-surgery
  - type: ItemBorgModule
    moduleId: Surgery
    items:
    - Scalpel
    - SawElectric
    - Drill
    - Retractor
    - Hemostat
    - Cautery
    - MedicalStitches
    - BoneGel
    - Bonesetter
    # Frontier: droppable borg items
  - type: DroppableBorgModule
    moduleId: Surgery
    items:
    - id: OrganHumanBrain
      whitelist:
        components:
        - BodyPart
        tags:
        - Organ
    # End Frontier: droppable borg items
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: surgery-module }

- type: entity
  id: BorgModuleAdvancedSurgery
  parent: [ BaseBorgModuleMedical, BaseProviderBorgModule ]
  name: advanced surgery cyborg module
  components:
  - type: Sprite
    layers:
    - state: medical
    - state: icon-advanced-surgery
  - type: ItemBorgModule
    moduleId: AdvancedSurgery
    items:
    - EnergyScalpel
    - EnergyCautery
    - AdvancedRetractor
    - AdvancedBoneGel
    # Frontier: droppable borg items
  - type: DroppableBorgModule
    moduleId: AdvancedSurgery
    items:
    - id: OrganHumanBrain
      whitelist:
        components:
        - BodyPart
        tags:
        - Organ
    # End Frontier: droppable borg items
  - type: BorgModuleIcon
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: adv-surgery-module }
