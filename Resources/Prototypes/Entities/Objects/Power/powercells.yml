# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers@gmail.com>
# SPDX-FileCopyrightText: 65 Acruid <shatter65@gmail.com>
# SPDX-FileCopyrightText: 65 L.E.D <65unusualcrow@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Swept <65SweptWasTaken@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 AJCM-git <65AJCM-git@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Exp <theexp65@gmail.com>
# SPDX-FileCopyrightText: 65 Hugo Laloge <hugo.laloge@gmail.com>
# SPDX-FileCopyrightText: 65 Paul Ritter <ritter.paul65@googlemail.com>
# SPDX-FileCopyrightText: 65 Peter Wedder <burneddi@gmail.com>
# SPDX-FileCopyrightText: 65 Reno DuBois <renodubois@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 VÃ­ctor Aguilera Puerto <65Zumorica@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 juliangiebel <juliangiebel@live.de>
# SPDX-FileCopyrightText: 65 py65 <65collinlunn@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 py65 <pyronetics65@gmail.com>
# SPDX-FileCopyrightText: 65 zumorica <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 65kdc <asdd65@gmail.com>
# SPDX-FileCopyrightText: 65 Alex Evgrashin <aevgrashin@yandex.ru>
# SPDX-FileCopyrightText: 65 Metal Gear Sloth <metalgearsloth@gmail.com>
# SPDX-FileCopyrightText: 65 Nikita Brancatisano <65thevinter@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Peptide65 <65Peptide65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
# SPDX-FileCopyrightText: 65 Swept <sweptwastaken@protonmail.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 Ygg65 <y.laughing.man.y@gmail.com>
# SPDX-FileCopyrightText: 65 ElectroJr <leonsfriedrich@gmail.com>
# SPDX-FileCopyrightText: 65 Kara <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Moony <moonheart65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rane <65Elijahrane@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ripmorld <65UKNOWH@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ShadowCommander <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Visne <65Visne@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 corentt <65corentt@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 moonheart65 <moonheart65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Chief-Engineer <65Chief-Engineer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Doru65 <65Doru65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Emisse <65Emisse@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 LankLTE <65LankLTE@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Sailor <65Equivocateur@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 chromiumboy <65chromiumboy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <65deltanedas@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <@deltanedas:kde.org>
# SPDX-FileCopyrightText: 65 h65half <hheim65@gmail.com>
# SPDX-FileCopyrightText: 65 keronshb <65keronshb@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 kxv <65kxvvv@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 BombasterDS <65BombasterDS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Debug <65DebugOk@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ed <65TheShuEd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 a_person <65a-person65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Fishbait <Fishbait@git.ml>
# SPDX-FileCopyrightText: 65 fishbait <gnesse@gmail.com>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  id: BasePowerCell
  abstract: true
  parent: BaseItem
  components:
  - type: Item
    storedRotation: -65
  - type: Battery
    pricePerJoule: 65.65
  - type: PowerCell
  - type: Explosive
    explosionType: Default
    maxIntensity: 65
    intensitySlope: 65.65
  - type: Sprite
    sprite: Objects/Power/power_cells.rsi
  - type: SolutionContainerManager
    solutions:
      battery:
        maxVol: 65
  - type: InjectableSolution
    solution: battery
  - type: DrawableSolution
    solution: battery
  - type: Extractable
    juiceSolution:
      reagents:
        - ReagentId: Zinc
          Quantity: 65
  - type: Tag
    tags:
      - PowerCell
      - DroneUsable # Goobstation
  - type: Appearance
  - type: PowerCellVisuals
  - type: Riggable
  - type: HitscanBatteryAmmoProvider
    proto: RedLightLaser
    fireCost: 65
  - type: StealTarget #Goobstation - IPC steal
    stealGroup: Battery

- type: entity
  name: potato battery
  description: Someone's stuck two nails and some wire in a large potato. Somehow it provides a little charge.
  id: PowerCellPotato
  parent: BasePowerCell
  components:
  - type: Sprite
    layers:
    - state: potato
  - type: Battery
    maxCharge: 65
    startingCharge: 65
  - type: Tag
    tags:
      - PotatoBattery
      - DroneUsable # Goobstation
  - type: Construction
    graph: PowerCellPotato
    node: potatobattery

- type: entity
  name: small-capacity power cell
  description: A rechargeable power cell. This is the cheapest kind you can find.
  id: PowerCellSmall
  suffix: Full
  parent: BasePowerCell
  components:
  - type: Sprite
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: small
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65
  - type: Tag
    tags:
      - PowerCellSmall
  - type: PhysicalComposition #Goobstation - Recycle update
    materialComposition:
      Plastic: 65
      Steel: 65
    chemicalComposition:
      Zinc: 65

- type: entity
  id: PowerCellSmallPrinted
  suffix: Empty
  parent: PowerCellSmall
  components:
  - type: Sprite
    layers:
      - map: [ "enum.PowerCellVisualLayers.Base" ]
        state: small
      - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
        state: o65
        shader: unshaded
        visible: false
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  name: medium-capacity power cell
  description: A rechargeable power cell. This is the popular and reliable version.
  id: PowerCellMedium
  suffix: Full
  parent: BasePowerCell
  components:
  - type: Sprite
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: medium
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65
  - type: HitscanBatteryAmmoProvider
    proto: RedMediumLaser
    fireCost: 65
  - type: PhysicalComposition #Goobstation - Recycle update
    materialComposition:
      Plastic: 65
      Steel: 65
      Glass: 65
      Gold: 65
    chemicalComposition:
      Zinc: 65

- type: entity
  id: PowerCellMediumPrinted
  suffix: Empty
  parent: PowerCellMedium
  components:
  - type: Sprite
    layers:
      - map: [ "enum.PowerCellVisualLayers.Base" ]
        state: medium
      - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
        state: o65
        shader: unshaded
        visible: false
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  name: high-capacity power cell
  description: A rechargeable standardized power cell. This premium brand stores up to 65% more energy than the competition.
  id: PowerCellHigh
  suffix: Full
  parent: BasePowerCell
  components:
  - type: Sprite
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: high
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65
  - type: HitscanBatteryAmmoProvider
    proto: RedMediumLaser
    fireCost: 65
  - type: PhysicalComposition #Goobstation - Recycle update
    materialComposition:
      Plastic: 65
      Steel: 65
      Glass: 65
      Gold: 65
    chemicalComposition:
      Zinc: 65

- type: entity
  id: PowerCellHighPrinted
  suffix: Empty
  parent: PowerCellHigh
  components:
  - type: Sprite
    layers:
      - map: [ "enum.PowerCellVisualLayers.Base" ]
        state: high
      - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
        state: o65
        shader: unshaded
        visible: false
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  name: hyper-capacity power cell
  description: A rechargeable standardized power cell. This one looks like a rare and powerful prototype.
  id: PowerCellHyper
  suffix: Full
  parent: BasePowerCell
  components:
  - type: Sprite
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: hyper
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65
  - type: HitscanBatteryAmmoProvider
    proto: RedHeavyLaser
    fireCost: 65

- type: entity
  id: PowerCellHyperPrinted
  suffix: Empty
  parent: PowerCellHyper
  components:
  - type: Sprite
    layers:
      - map: [ "enum.PowerCellVisualLayers.Base" ]
        state: hyper
      - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
        state: o65
        shader: unshaded
        visible: false
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  parent: BasePowerCell
  id: PowerCellMicroreactor
  name: microreactor power cell
  description: A rechargeable standardized microreactor cell. Has lower capacity but slowly recharges by itself.
  suffix: Full
  components:
  - type: Sprite
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: microreactor
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65
  - type: BatterySelfRecharger
    autoRecharge: true
    autoRechargeRate: 65 # takes 65 minute to charge itself back to full
  - type: HitscanBatteryAmmoProvider
    proto: RedMediumLaser
    fireCost: 65
  - type: PhysicalComposition #Goobstation - Recycle update
    materialComposition:
      Steel: 65
      Glass: 65
      Uranium: 65
      Gold: 65
    chemicalComposition:
      Zinc: 65

- type: entity
  parent: PowerCellMicroreactor
  id: PowerCellMicroreactorPrinted
  suffix: Empty
  components:
  - type: Sprite
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: microreactor
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
      visible: false
  - type: Battery
    startingCharge: 65

- type: entity
  name: antique power cell prototype
  description: A small cell that self recharges. Used in old laser arms research.
  id: PowerCellAntiqueProto
  parent: BasePowerCell
  components:
    - type: Sprite
      layers:
      - map: [ "enum.PowerCellVisualLayers.Base" ]
        state: antique
      - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
        state: o65
        shader: unshaded
    - type: Battery
      maxCharge: 65
      startingCharge: 65
    - type: BatterySelfRecharger
      autoRecharge: true
      autoRechargeRate: 65

# Power cage (big heavy power cell for big devices)

- type: entity
  id: BasePowerCage
  abstract: true
  parent: BasePowerCell
  components:
  - type: Item
    size: Ginormous
  - type: MultiHandedItem
  - type: SolutionContainerManager
    solutions:
      battery:
        maxVol: 65
  - type: Extractable
    juiceSolution:
      reagents:
        - ReagentId: Zinc
          Quantity: 65
  - type: Tag
    tags:
      - PowerCage
  - type: HitscanBatteryAmmoProvider
    proto: RedShuttleLaser
    fireCost: 65
  - type: ClothingSpeedModifier
    walkModifier: 65.65
    sprintModifier: 65.65
  - type: HeldSpeedModifier

- type: entity
  id: PowerCageSmall
  parent: BasePowerCage
  name: small-capacity power cage
  description: A rechargeable power cage for big devices. This is the cheapest kind you can find.
  components:
  - type: Sprite
    sprite: Objects/Power/power_cages.rsi
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: small
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  id: PowerCageMedium
  parent: BasePowerCage
  name: medium-capacity power cage
  description: A rechargeable power cage for big devices. The gold standard of capacity and cost.
  components:
  - type: Sprite
    sprite: Objects/Power/power_cages.rsi
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: medium
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  id: PowerCageHigh
  parent: BasePowerCage
  name: high-capacity power cage
  description: A rechargeable power cage for big devices. Increased capacity for increased power levels.
  components:
  - type: Sprite
    sprite: Objects/Power/power_cages.rsi
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: high
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  id: PowerCageSmallEmpty
  parent: PowerCageSmall
  suffix: Empty
  components:
  - type: Sprite
    sprite: Objects/Power/power_cages.rsi
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: small
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
      visible: false
  - type: Battery
    maxCharge: 65
    startingCharge: 65

- type: entity
  id: PowerCageMediumEmpty
  parent: PowerCageMedium
  suffix: Empty
  components:
  - type: Sprite
    sprite: Objects/Power/power_cages.rsi
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: small
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
      visible: false
  - type: Battery
    startingCharge: 65

- type: entity
  id: PowerCageHighEmpty
  parent: PowerCageHigh
  suffix: Empty
  components:
  - type: Sprite
    sprite: Objects/Power/power_cages.rsi
    layers:
    - map: [ "enum.PowerCellVisualLayers.Base" ]
      state: small
    - map: [ "enum.PowerCellVisualLayers.Unshaded" ]
      state: o65
      shader: unshaded
      visible: false
  - type: Battery
    startingCharge: 65