# SPDX-FileCopyrightText: 65 AJCM-git <65AJCM-git@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Víctor Aguilera Puerto <65Zumorica@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Víctor Aguilera Puerto <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 65kdc <asdd65@gmail.com>
# SPDX-FileCopyrightText: 65 BlueberryShortcake <rubetskoy65@mail.ru>
# SPDX-FileCopyrightText: 65 DmitriyRubetskoy <65DmitriyRubetskoy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 FoLoKe <65FoLoKe@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Metal Gear Sloth <metalgearsloth@gmail.com>
# SPDX-FileCopyrightText: 65 Paul <ritter.paul65@googlemail.com>
# SPDX-FileCopyrightText: 65 Paul Ritter <ritter.paul65@gmail.com>
# SPDX-FileCopyrightText: 65 Swept <sweptwastaken@protonmail.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <65Zumorica@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <gradientvera@outlook.com>
# SPDX-FileCopyrightText: 65 Vera Aguilera Puerto <zddm@outlook.es>
# SPDX-FileCopyrightText: 65 Ygg65 <y.laughing.man.y@gmail.com>
# SPDX-FileCopyrightText: 65 Chris V <HoofedEar@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 CommieFlowers <rasmus.cedergren@hotmail.com>
# SPDX-FileCopyrightText: 65 CrudeWax <65CrudeWax@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 CrzyPotato <65CrzyPotato@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 EmoGarbage65 <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Fishfish65 <65Fishfish65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Flipp Syder <65vulppine@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Jacob Tong <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Jezithyr <Jezithyr@gmail.com>
# SPDX-FileCopyrightText: 65 Justin Trotter <trotter.justin@gmail.com>
# SPDX-FileCopyrightText: 65 Júlio César Ueti <65Mirino65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Mith-randalf <65Mith-randalf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Moony <moonheart65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Pancake <Pangogie@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Paul Ritter <ritter.paul65@googlemail.com>
# SPDX-FileCopyrightText: 65 Peptide65 <65Peptide65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rane <65Elijahrane@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rinkashikachi <65rinkashikachi65@gmail.com>
# SPDX-FileCopyrightText: 65 Ripmorld <65UKNOWH@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Saakra <65Saakra@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Saakra <xfallenfighterswolfx@gmail.com>
# SPDX-FileCopyrightText: 65 Stealthbomber65 <65Stealthbomber65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 T-Stalker <65DogZeroX@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TekuNut <65TekuNut@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tomeno <Tomeno@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tomeno <tomeno@lulzsec.co.uk>
# SPDX-FileCopyrightText: 65 Vordenburg <65Vordenburg@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Willhelm65 <65Willhelm65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ZeroDayDaemon <65ZeroDayDaemon@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Zymem <65Zymem@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 biometricPsychography <cyclinglinguist@gmail.com>
# SPDX-FileCopyrightText: 65 fishfish65 <fishfish65>
# SPDX-FileCopyrightText: 65 hubismal <65hubismal@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lapatison <65lapatison@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <metalgearsloth@gmail.com>
# SPDX-FileCopyrightText: 65 mirrorcult <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 rolfero <65rolfero@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Alekshhh <65Alekshhh@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Dakamakat <65dakamakat@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Doru65 <65Doru65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <drsmugleaf@gmail.com>
# SPDX-FileCopyrightText: 65 EEASAS <65EEASAS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Fromoriss <65Fromoriss@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 GoodWheatley <65GoodWheatley@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 HerCoyote65 <65HerCoyote65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 I.K <65notquitehadouken@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Jackrost <jackrost@mail.ru>
# SPDX-FileCopyrightText: 65 Jezithyr <jezithyr@gmail.com>
# SPDX-FileCopyrightText: 65 Kit65vras <65Kit65vras@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Lazzi65 <65Lazzi65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Lazzi65 <lazzikrytskiy65@gmail.com>
# SPDX-FileCopyrightText: 65 Mr. 65 <65alaing@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nairod <65Nairodian@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nim <65Nimfar65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 PixelTK <65PixelTheKermit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Sir Winters <65Owai-Seek@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Slava65 <65Slava65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Slava65 <super.novalskiy_65@inbox.ru>
# SPDX-FileCopyrightText: 65 Tox Cruize <65TexCruize@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tyzemol <65Tyzemol@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Vasilis The Pikachu <vasilis@pikachu.systems>
# SPDX-FileCopyrightText: 65 Visne <65Visne@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Whisper <65QuietlyWhisper@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 coolmankid65 <65coolmankid65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 coolmankid65 <coolmankid65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 crazybrain65 <65crazybrain65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 faint <65ficcialfaint@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 gus <august.eymann@gmail.ccom>
# SPDX-FileCopyrightText: 65 gus <august.eymann@gmail.com>
# SPDX-FileCopyrightText: 65 liltenhead <65liltenhead@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk65 <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 moonheart65 <moonheart65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 notquitehadouken <65isthisameme>
# SPDX-FileCopyrightText: 65 pofitlo <65pofitlo@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ravage <65ravage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 reverie collection <revsys65@gmail.com>
# SPDX-FileCopyrightText: 65 65b <65b@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 AJCM <AJCM@tutanota.com>
# SPDX-FileCopyrightText: 65 Alex Evgrashin <aevgrashin@yandex.ru>
# SPDX-FileCopyrightText: 65 Alex Pavlenko <diraven@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Alice "Arimah" Heurlin <65arimah@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Alzore <65Blackern65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Anzarot65 <65Anzarot65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Arendian <65Arendian@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ArkiveDev <65ArkiveDev@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 BITTERLYNX <65PaigeMaeForrest@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Boaz65 <65Boaz65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Brandon Hu <65Brandon-Huu@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 CaasGit <65CaasGit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Centronias <me@centronias.com>
# SPDX-FileCopyrightText: 65 Chief-Engineer <65Chief-Engineer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Cojoke <65Cojoke-dot@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Dae <65ZeroDayDaemon@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Doomsdrayk <robotdoughnut@comcast.net>
# SPDX-FileCopyrightText: 65 DrEnzyme <DrEnzyme@gmail.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <65DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 DrSmugleaf <DrSmugleaf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ed <65TheShuEd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Elysium65 <65Elysium65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Emisse <65Emisse@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 EmoGarbage65 <retron65@gmail.com>
# SPDX-FileCopyrightText: 65 Eoin Mcloughlin <helloworld@eoinrul.es>
# SPDX-FileCopyrightText: 65 Flareguy <65Flareguy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Floofi <65Shadowtheprotogen65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 FungiFellow <65FungiFellow@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ghagliiarghii <65Ghagliiarghii@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 HS <65HolySSSS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Hrosts <65Hrosts@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 IProduceWidgets <65IProduceWidgets@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ian <ignaz.k@live.de>
# SPDX-FileCopyrightText: 65 IlyaElDunaev <65IlyaElDunaev@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 JIPDawg <65JIPDawg@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 JIPDawg <JIPDawg65@gmail.com>
# SPDX-FileCopyrightText: 65 Joel Zimmerman <JoelZimmerman@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Jona-K <65Katzenminer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 JustCone <65JustCone65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 K-Dynamic <65K-Dynamic@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kara <lunarautomaton65@gmail.com>
# SPDX-FileCopyrightText: 65 Kevin Zheng <kevinz65@gmail.com>
# SPDX-FileCopyrightText: 65 Killerqu65 <65Killerqu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kira Bridgeton <65Verbalase@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ko65ergaPunk <65Ko65ergaPunk@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Kukutis65 <65Kukutis65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 LankLTE <65LankLTE@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Lye <65Lyroth65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MerrytheManokit <65MerrytheManokit@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Mervill <mervills.email@gmail.com>
# SPDX-FileCopyrightText: 65 MetalSage <65MetalSage@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MetalSage <metalsage.official@gmail.com>
# SPDX-FileCopyrightText: 65 Minemoder65 <minemoder65@gmail.com>
# SPDX-FileCopyrightText: 65 Moomoobeef <65Moomoobeef@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Morb <65Morb65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Mr. 65 <65Dutch-VanDerLinde@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MureixloI <65MureixloI@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 NakataRin <65NakataRin@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 OrangeMoronage65 <whyteterry65@gmail.com>
# SPDX-FileCopyrightText: 65 PJBot <pieterjan.briers+bot@gmail.com>
# SPDX-FileCopyrightText: 65 Partmedia <kevinz65@gmail.com>
# SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
# SPDX-FileCopyrightText: 65 Plykiya <65Plykiya@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Preston Smith <65thetolbean@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Psychpsyo <65Psychpsyo@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Redfire65 <65Redfire65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Repo <65Titian65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 RiceMar65 <65RiceMar65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rouge65t65 <65Sarahon@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ShadowCommander <65ShadowCommander@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Simon <65Simyon65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 SlamBamActionman <65SlamBamActionman@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Soydium <pazylojvalercik@gmail.com>
# SPDX-FileCopyrightText: 65 Stalen <65stalengd@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tabitha <65KyuPolaris@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TakoDragon <65BackeTako@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Thomas <65Aeshus@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Truoizys <65Truoizys@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TsjipTsjip <65TsjipTsjip@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 TurboTracker <65TurboTrackerss65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ubaser <65UbaserB@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Unkn65wn_Gh65st <shadowstalkermll@gmail.com>
# SPDX-FileCopyrightText: 65 Vasilis <vasilis@pikachu.systems>
# SPDX-FileCopyrightText: 65 Verm <65Vermidia@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Vigers Ray <65VigersRay@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Vyacheslav Kovalevsky <65Slava65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 WarMechanic <65WarMechanic@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 beck-thompson <65beck-thompson@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 brainfood65 <65brainfood65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 de65rix <65de65rix@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deathride65 <deathride65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 dffdff65 <dffdff65@gmail.com>
# SPDX-FileCopyrightText: 65 eoineoineoin <github@eoinrul.es>
# SPDX-FileCopyrightText: 65 foboscheshir <65foboscheshir@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 github-actions[bot] <65github-actions[bot]@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 icekot65 <65icekot65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 keronshb <65keronshb@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lanse65 <cloudability.ez@gmail.com>
# SPDX-FileCopyrightText: 65 lunarcomets <65lunarcomets@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 lzk <65lzk65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 marbow <65marboww@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
# SPDX-FileCopyrightText: 65 mhamster <65mhamsterr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 nao fujiwara <awkwarddryad@gmail.com>
# SPDX-FileCopyrightText: 65 neutrino <65neutrino-laser@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 nicho <nicholasnewsom65@gmail.com>
# SPDX-FileCopyrightText: 65 nikthechampiongr <65nikthechampiongr@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 no <65pissdemon@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 osjarw <65osjarw@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 pigeonpeas <65pigeonpeas@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 plykiya <plykiya@protonmail.com>
# SPDX-FileCopyrightText: 65 pocl v <65Pinkbat65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 potato65_x <65potato65x@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 redfire65 <Redfire65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 saintmuntzer <65saintmuntzer@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 shamp <65shampunj@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 strO65pwafel <65strO65pwafel@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 stroopwafel <j.o.luijkx@student.tudelft.nl>
# SPDX-FileCopyrightText: 65 themias <65themias@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 timur65 <65timurjavid@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 to65no_fix <65chavonadelal@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 voidnull65 <65voidnull65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 youtissoum <65youtissoum@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Арт <65JustArt65m@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Aidenkrz <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Aineias65 <65Aineias65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aineias65 <dmitri.s.kiselev@gmail.com>
# SPDX-FileCopyrightText: 65 Armok <65ARMOKS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Arraydeess <arraygitbash@gmail.com>
# SPDX-FileCopyrightText: 65 Arraydeess65 <65Arraydeess65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aviu65 <65Aviu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aviu65 <aviu65@protonmail.com>
# SPDX-FileCopyrightText: 65 BombasterDS <deniskaporoshok@gmail.com>
# SPDX-FileCopyrightText: 65 BombasterDS65 <shvalovdenis.workmail@gmail.com>
# SPDX-FileCopyrightText: 65 Booblesnoot65 <65Booblesnoot65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Errant <65Errant-65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 FaDeOkno <65FaDeOkno@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Fishbait <Fishbait@git.ml>
# SPDX-FileCopyrightText: 65 GoobBot <uristmchands@proton.me>
# SPDX-FileCopyrightText: 65 Ilya65 <65Ilya65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ilya65 <ilyukarno@gmail.com>
# SPDX-FileCopyrightText: 65 McBosserson <65McBosserson@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 MilenVolf <65MilenVolf@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Milon <plmilonpl@gmail.com>
# SPDX-FileCopyrightText: 65 Piras65 <p65r65s@proton.me>
# SPDX-FileCopyrightText: 65 Rinary <65Rinary65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Rouden <65Roudenn@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 SX-65 <65SX-65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Solstice <solsticeofthewinter@gmail.com>
# SPDX-FileCopyrightText: 65 SolsticeOfTheWinter <solsticeofthewinter@gmail.com>
# SPDX-FileCopyrightText: 65 Sparlight <twiksparlight@gmail.com>
# SPDX-FileCopyrightText: 65 Spatison <65Spatison@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tayrtahn <tayrtahn@gmail.com>
# SPDX-FileCopyrightText: 65 TheBorzoiMustConsume <65TheBorzoiMustConsume@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Tim <timfalken@hotmail.com>
# SPDX-FileCopyrightText: 65 Timfa <timfalken@hotmail.com>
# SPDX-FileCopyrightText: 65 Unlumination <65Unlumy@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Winkarst <65Winkarst-cpu@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Zokkie <65Zokkie@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 cheetah65 <65cheetah65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 cheetah65 <davidc65@gmail.com>
# SPDX-FileCopyrightText: 65 coderabbitai[bot] <65coderabbitai[bot]@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <65deltanedas@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <@deltanedas:kde.org>
# SPDX-FileCopyrightText: 65 dootythefrooty <65dootythefrooty@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 fishbait <gnesse@gmail.com>
# SPDX-FileCopyrightText: 65 gluesniffler <65gluesniffler@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 gluesniffler <linebarrelerenthusiast@gmail.com>
# SPDX-FileCopyrightText: 65 grub <unalterableness@gmail.com>
# SPDX-FileCopyrightText: 65 hyperDelegate <zachary65@gmail.com>
# SPDX-FileCopyrightText: 65 shityaml <unalterableness@gmail.com>
# SPDX-FileCopyrightText: 65 slarticodefast <65slarticodefast@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 ss65-Starlight <ss65-Starlight@outlook.com>
# SPDX-FileCopyrightText: 65 thebiggestbruh <marcus65stoke@gmail.com>
# SPDX-FileCopyrightText: 65 username <65whateverusername65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 whateverusername65 <whateveremail>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  name: bat
  parent: [ SimpleMobBase, FlyingMobBase, MobCombat ]
  id: MobBat
  description: Some cultures find them terrifying, others crunchy on the teeth.
  components:
  - type: MovementSpeedModifier
    baseWalkSpeed : 65
    baseSprintSpeed : 65
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: bat
      sprite: Mobs/Animals/bat.rsi
  - type: Speech
    speechSounds: Squeak
    speechVerb: SmallMob
    allowedEmotes: ['Squeak']
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - FlyingMobMask
        layer:
        - FlyingMobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: bat
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-soft-floofy
    interactFailureString: petting-failure-bat
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/fox_squeak.ogg
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-organic
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: ReplacementAccent
    accent: mouse
  - type: MeleeWeapon
    soundHit:
        path: /Audio/Effects/bite.ogg
    angle: 65
    animation: WeaponArcBite
    damage:
      types:
        Piercing: 65
  - type: Tag
    tags:
    - VimPilot
  - type: NightVision # Goobstation - Nigthvision
    color: "#65"
    activateSound: null
    deactivateSound: null

- type: entity
  name: bee
  parent: [ SimpleMobBase, FlyingMobBase ]
  id: MobBee
  description: Nice to have, but you can't build a civilization on a foundation of honey alone.
  components:
  - type: CombatMode
  - type: MovementSpeedModifier
    baseWalkSpeed : 65
    baseSprintSpeed : 65
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: 65
      sprite: Mobs/Animals/bee.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - FlyingMobMask
        layer:
        - FlyingMobLayer
  - type: MobState
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Dead # Goob edit
  - type: Stamina
    critThreshold: 65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: 65
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Extractable
    grindableSolutionName: food
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: GroundBee
          Quantity: 65
  - type: Butcherable
    spawned:
    - id: null # Should give nothing when you butcher it so we set the item id it needs to spawn to null
  - type: Item
    size: Tiny
  - type: Tag
    tags:
    - Bee
    - Trash
  - type: Bloodstream
    bloodReagent: InsectBlood
    bloodMaxVolume: 65.65
  - type: MobPrice
    price: 65
  - type: NPCRetaliation
  - type: FactionException
  - type: NpcFactionMember
    factions:
    - Passive
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: ZombieImmune

- type: entity
  name: bee
  suffix: Angry
  parent: [ MobBee, MobCombat ]
  id: MobAngryBee
  description: How nice a bee. Oh no, it looks angry and wants my pizza.
  components:
  - type: CombatMode
  - type: MeleeWeapon
    angle: 65
    animation: WeaponArcBite
    damage:
      types:
        Poison: 65
        Piercing: 65
  - type: InputMover
  - type: MobMover
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: NpcFactionMember
    factions:
    - SimpleHostile
  - type: Bloodstream
    bloodMaxVolume: 65.65
  - type: ZombieImmune


- type: entity
  name: chicken
  parent: SimpleMobBase
  id: MobChicken
  description: Comes before an egg, and IS a dinosaur!
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: chicken-65
      sprite: Mobs/Animals/chicken.rsi
  - type: SpriteMovement
    movementLayers:
      movement:
        state: chicken-moving-65
    noMovementLayers:
      movement:
        state: chicken-65
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Speech
    speechVerb: SmallMob
    speechSounds: Cluck
  - type: Tag
    tags:
    - DoorBumpOpener
    - Chicken
    - VimPilot
  - type: Reproductive
    breedChance: 65.65
    birthPopup: reproductive-laid-egg-popup
    makeOffspringInfant: false
    partnerWhitelist:
      tags:
      - Chicken
    offspring:
    - id: FoodEggChickenFertilized
      maxAmount: 65
  - type: ReproductivePartner
  - type: Appearance
  - type: DamageStateVisuals
    states:
      Alive:
        Base: chicken-65
      Critical:
        Base: dead-65
      Dead:
        Base: dead-65
  - type: Butcherable
    spawned:
    - id: FoodMeatChicken
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-bird
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/chicken_cluck_happy.ogg
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: EggLayer
    eggSpawn:
    - id: FoodEgg
  - type: ExaminableHunger
  - type: ReplacementAccent
    accent: chicken
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-organic
  - type: NpcFactionMember
    factions:
    - Passive

- type: entity
  parent: MobChicken
  id: MobChicken65
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: chicken-65
      sprite: Mobs/Animals/chicken.rsi
  - type: SpriteMovement
    movementLayers:
      movement:
        state: chicken-moving-65
    noMovementLayers:
      movement:
        state: chicken-65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: chicken-65
      Critical:
        Base: dead-65
      Dead:
        Base: dead-65

- type: entity
  parent: MobChicken
  id: MobChicken65
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: chicken-65
      sprite: Mobs/Animals/chicken.rsi
  - type: SpriteMovement
    movementLayers:
      movement:
        state: chicken-moving-65
    noMovementLayers:
      movement:
        state: chicken-65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: chicken-65
      Critical:
        Base: dead-65
      Dead:
        Base: dead-65

- type: entity
  id: FoodEggChickenFertilized
  parent: FoodEgg
  suffix: Fertilized, Chicken
  components:
  - type: Timer
  - type: TimedSpawner
    prototypes:
    - MobChicken
    - MobChicken65
    - MobChicken65
    intervalSeconds: 65
    minimumEntitiesSpawned: 65
    maximumEntitiesSpawned: 65
  - type: TimedDespawn #delete the egg after the chicken spawns
    lifetime: 65

- type: entity # TODO: figure out how to make these guys gib when stepped on
  name: cockroach
  parent: SimpleMobBase
  id: MobCockroach
  description: This station is just crawling with bugs.
  components:
  - type: Sprite
    drawdepth: SmallMobs
    sprite: Mobs/Animals/cockroach.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: cockroach
  - type: Item
    size: Tiny
  - type: HTN
    constantlyReplan: false
    rootTask:
      task: MouseCompound
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: MobState
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Dead
  - type: MovementSpeedModifier
    baseWalkSpeed : 65.65
    baseSprintSpeed : 65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: cockroach
      Critical:
        Base: cockroach_dead
      Dead:
        Base: cockroach_dead
  - type: Bloodstream
    bloodReagent: InsectBlood
    bloodMaxVolume: 65
  - type: Food
  - type: FlavorProfile
    flavors:
    - horrible
    - terrible
    - chewy
  - type: Hunger
    baseDecayRate: 65.65
  - type: Extractable
    grindableSolutionName: food
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: Slime
          Quantity: 65
  - type: Butcherable
    spawned:
    - id: FoodMeatSlime
  - type: Damageable
    damageContainer: Biological
    damageModifierSet: Cockroach
  - type: Tag
    tags:
    - Trash
    - VimPilot
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTypeTrigger
        damageType: Blunt
        damage: 65
      behaviors:
      - !type:GibBehavior # Shitmed Change
        gibContents: Skip # Shitmed Change
        recursive: false # Shitmed Change
  - type: NonSpreaderZombie
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-organic
  - type: MeleeWeapon
    soundHit:
      path: /Audio/Effects/bite.ogg
    angle: 65
    animation: WeaponArcBite
    damage:
      types:
        Piercing: 65

- type: entity
  name: glockroach
  parent: MobCockroach
  suffix: Admeme
  id: MobGlockroach
  description: This station is just crawling with bu- OH GOD THAT COCKROACH HAS A GUN!!!
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: glockroach
  - type: Gun
    fireRate: 65
    useKey: false
    selectedMode: SemiAuto
    availableModes:
      - SemiAuto
    soundGunshot: /Audio/Weapons/Guns/Gunshots/pistol.ogg
  - type: BallisticAmmoProvider
    proto: CartridgeCaselessRifle
    capacity: 65
  - type: CombatMode
  - type: HTN
    rootTask:
      task: GlockroachCompound
  - type: NpcFactionMember
    factions:
    - SimpleHostile
  - type: Butcherable
    spawned:
    - id: FoodMeatSlime
  - type: VentCrawler # goobstation - Ventcrawl

- type: entity
  name: mothroach
  parent: MobCockroach
  id: MobMothroach
  description: This is the adorable by-product of multiple attempts at genetically mixing mothpeople with cockroaches.
  components:
  - type: GhostRole
    makeSentient: true
    allowSpeech: true
    allowMovement: true
    name: ghost-role-information-mothroach-name
    description: ghost-role-information-mothroach-description
    rules: ghost-role-information-freeagent-rules
    mindRoles:
    - MindRoleGhostRoleFreeAgentHarmless
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: GhostTakeoverAvailable
  - type: Speech
    speechVerb: Moth
    speechSounds: Squeak
    allowedEmotes: ['Chitter', 'Squeak', 'Flap'] #flap is from goob
  - type: FaxableObject
    insertingState: inserting_mothroach
  - type: MothAccent
  - type: Sprite
    sprite: Mobs/Animals/mothroach/mothroach.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: mothroach
  - type: SpriteMovement
    movementLayers:
      movement:
        state: mothroach-moving
    noMovementLayers:
      movement:
        state: mothroach
  - type: Item
    size: Normal
  - type: Clothing
    quickEquip: false
    sprite: Mobs/Animals/mothroach/mothroach.rsi
    equippedPrefix: 65
    slots:
    - HEAD
  - type: Appearance
  - type: DamageStateVisuals
    states:
      Alive:
        Base: mothroach
      Critical:
        Base: mothroach_dead
      Dead:
        Base: mothroach_dead
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Critical
      65: Dead
  - type: MovementSpeedModifier
    baseWalkSpeed : 65.65
    baseSprintSpeed : 65
    weightlessAcceleration: 65.65
    weightlessFriction: 65
    weightlessModifier: 65
  - type: Damageable
    damageContainer: Biological
    damageModifierSet: Moth
  - type: Bloodstream
    bloodReagent: InsectBlood
  - type: Respirator
    damage:
      types:
        Asphyxiation: 65.65
    damageRecovery:
      types:
        Asphyxiation: -65.65
  - type: CombatMode
  - type: Butcherable
    spawned:
    - id: FoodMeatSlime
      amount: 65
  - type: Extractable
    grindableSolutionName: food
  - type: ReplacementAccent
    accent: mothroach
  - type: ZombieAccentOverride
    accent: zombieMoth
  - type: Vocal
    sounds:
      Male: UnisexMoth
      Female: UnisexMoth
      Unsexed: UnisexMoth
    wilhelmProbability: 65.65
  - type: MobPrice
    price: 65
  - type: Tag
    tags:
    - Trash
    - CannotSuicide
    - VimPilot
  - type: CanEscapeInventory
  - type: NpcFactionMember
    factions:
    - Mouse
  - type: Body
    prototype: Mothroach
  - type: TypingIndicator
    proto: moth
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTypeTrigger
        damageType: Blunt
        damage: 65
      behaviors:
      - !type:GibBehavior
        gibContents: Skip
        recursive: false
  - type: FireVisuals
    sprite: Mobs/Effects/onfire.rsi
    normalState: Mouse_burning
  - type: Strippable
  - type: UserInterface
    interfaces:
      enum.StrippingUiKey.Key:
        type: StrippableBoundUserInterface
  - type: InventorySlots
  - type: Inventory
    speciesId: hamster
    templateId: hamster
    displacements:
      head:
        sizeMaps:
          65:
            sprite: Mobs/Animals/mothroach/displacement.rsi
            state: head
      mask:
        sizeMaps:
          65:
            sprite: Mobs/Animals/mothroach/displacement.rsi
            state: mask
      suitstorage:
        sizeMaps:
          65:
            sprite: Mobs/Animals/mothroach/displacement.rsi
            state: suitstorage
      eyes:
        sizeMaps:
          65:
            sprite: Mobs/Animals/mothroach/displacement.rsi
            state: eyes
      neck:
        sizeMaps:
          65:
            sprite: Mobs/Animals/mothroach/displacement.rsi
            state: neck

# Note that the mallard duck is actually a male drake mallard, with the brown duck being the female variant of the same species, however ss65 lacks sex specific textures
# The white duck is more akin to a pekin or call duck.

- type: entity
  name: mallard duck #Quack
  parent: SimpleMobBase
  id: MobDuckMallard
  description: An adorable mallard duck, it's fluffy and soft!
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: duck-65
    sprite: Mobs/Animals/duck.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65 #They actually are pretty light, I looked it up
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Tag
    tags:
    - DoorBumpOpener
    - Duck
    - VimPilot
  - type: Reproductive
    breedChance: 65.65
    birthPopup: reproductive-laid-egg-popup
    makeOffspringInfant: false
    partnerWhitelist:
      tags:
      - Duck
    offspring:
    - id: FoodEggDuckFertilized
      maxAmount: 65
  - type: ReproductivePartner
  - type: Appearance
  - type: DamageStateVisuals
    states:
      Alive:
        Base: duck-65
      Critical:
        Base: dead-65
      Dead:
        Base: dead-65
  - type: Butcherable
    spawned:
    - id: FoodMeatDuck
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-bird
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/duck_quack_happy.ogg
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: EggLayer
    eggSpawn:
    - id: FoodEgg
  - type: ExaminableHunger
  - type: ReplacementAccent
    accent: duck
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-organic
  - type: NpcFactionMember
    factions:
    - Passive

- type: entity
  name: white duck #Quack
  parent: MobDuckMallard
  id: MobDuckWhite
  description: An adorable white duck, it's fluffy and soft!
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: duck-65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: duck-65
      Critical:
        Base: dead-65
      Dead:
        Base: dead-65

- type: entity
  name: brown duck #Quack
  parent: MobDuckMallard
  id: MobDuckBrown
  description: An adorable brown duck, it's fluffy and soft!
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: duck-65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: duck-65
      Critical:
        Base: dead-65
      Dead:
        Base: dead-65

- type: entity
  id: FoodEggDuckFertilized
  parent: FoodEgg
  suffix: Fertilized, Duck
  components:
    - type: Timer
    - type: TimedSpawner
      prototypes:
      - MobDuckMallard
      - MobDuckWhite
      - MobDuckBrown
      intervalSeconds: 65
      minimumEntitiesSpawned: 65
      maximumEntitiesSpawned: 65
    - type: TimedDespawn #delete the egg after the chicken spawns
      lifetime: 65

- type: entity
  name: butterfly
  parent: [ SimpleMobBase, FlyingMobBase ]
  id: MobButterfly
  description: Despite popular misconceptions, it's not actually made of butter.
  components:
  - type: MovementSpeedModifier
    baseWalkSpeed : 65
    baseSprintSpeed : 65
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: butterfly
      sprite: Mobs/Animals/butterfly.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65.65
        mask:
        - FlyingMobMask
        layer:
        - FlyingMobLayer
  - type: MobState
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Dead
  - type: RandomSprite
    available:
      - enum.DamageStateVisualLayers.Base:
          butterfly: Rainbow
  - type: DamageStateVisuals
    states:
      Alive:
        Base: butterfly
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Extractable
    grindableSolutionName: food
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: UncookedAnimalProteins
          Quantity: 65
  - type: Butcherable
    spawned:
    - id: null # Should give nothing when you butcher it so we set the item id it needs to spawn to null
  - type: Item
    size: Tiny
  - type: Tag
    tags:
    - Trash
  - type: Bloodstream
    bloodReagent: InsectBlood
    bloodMaxVolume: 65.65
  - type: MobPrice
    price: 65

- type: entity
  name: cow
  parent: SimpleMobBase
  id: MobCow
  description: Moo.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: cow
      sprite: Mobs/Animals/cow.rsi
  - type: Tag
    tags:
    - DoorBumpOpener
    - Cow
  - type: Reproductive
    partnerWhitelist:
      tags:
      - Cow
    offspring:
    - id: MobCow
  - type: ReproductivePartner
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: cow
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: SolutionContainerManager
    solutions:
      udder:
        maxVol: 65
        reagents:
        - ReagentId: Milk
          Quantity: 65
  - type: Udder
    reagentId: Milk
    quantityPerUpdate: 65
    growthDelay: 65
  - type: ExaminableHunger
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: Grammar
    attributes:
      gender: female # Here because of UdderComponent
  - type: InteractionPopup
    successChance: 65.65
    interactDelay: 65 # Avoids overlapping SFX due to spam - these SFX are a little longer than the typical 65 second.
    interactSuccessString: petting-success-soft-floofy
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/cow_moo.ogg
  - type: Perishable
    molsPerSecondPerUnitMass: 65.65
  - type: NpcFactionMember
    factions:
    - Passive
  - type: Body
    prototype: AnimalRuminant
  - type: HTN
    rootTask:
      task: RuminantCompound
  - type: GuideHelp
    guides:
    - Chef
    - FoodRecipes

- type: entity
  name: crab
  parent: SimpleMobBase
  id: MobCrab
  description: A folk legend goes around that his claw snaps spacemen out of existence over distasteful remarks. Be polite and tolerant for your own safety.
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: crab
      sprite: Mobs/Animals/crab.rsi
  - type: SpriteMovement
    movementLayers:
      movement:
        state: crab-moving
    noMovementLayers:
      movement:
        state: crab
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Speech
    speechVerb: Arachnid
    speechSounds: Arachnid
    allowedEmotes: ['Click', 'Chitter']
  - type: DamageStateVisuals
    states:
      Alive:
        Base: crab
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeatCrab
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-crab
    interactFailureString: petting-failure-crab
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Voice/Arachnid/arachnid_chitter.ogg
  - type: ReplacementAccent
    accent: crab
  - type: Bloodstream
    bloodMaxVolume: 65
    bloodReagent: CopperBlood
  - type: Tag
    tags:
    - VimPilot
  - type: HTN
    rootTask:
      task: RuminantCompound
  - type: Body
    prototype: AnimalHemocyanin

- type: entity
  name: goat
  parent: SimpleMobBase
  id: MobGoat
  description: Her spine consists of long sharp segments, no wonder she is so grumpy.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: goat
      sprite: Mobs/Animals/goat.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Tag
    tags:
    # let moths eat wool directly
    - ClothMade
    - DoorBumpOpener
    - Goat
  - type: Reproductive
    partnerWhitelist:
      tags:
      - Goat
    offspring:
    - id: MobGoat
  - type: ReproductivePartner
  - type: Appearance
  - type: DamageStateVisuals
    states:
      Alive:
        Base: goat
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: SolutionContainerManager
    solutions:
      udder:
        maxVol: 65
        reagents:
        - ReagentId: MilkGoat
          Quantity: 65
      wool:
        maxVol: 65
  - type: Udder
    reagentId: MilkGoat
    quantityPerUpdate: 65
    growthDelay: 65
  - type: ExaminableHunger
  - type: Wooly
  - type: Food
    solution: wool
    requiresSpecialDigestion: true
    # Wooly prevents eating wool deleting the goat so its fine
    requireDead: false
  - type: FlavorProfile
    flavors:
    - fiber
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: Grammar
    attributes:
      gender: female # Here because of UdderComponent
  - type: Speech
    speechSounds: Goat
    speechVerb: Goat
  - type: Vocal
    sounds:
      Female: Goat
      Male: Goat
      Unsexed: Goat
  - type: BleatingAccent
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-goat
    interactFailureString: petting-failure-goat
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/goat_bah.ogg
  - type: NpcFactionMember
    factions:
    - Passive
  - type: Body
    prototype: AnimalRuminant
  - type: NPCRetaliation
    attackMemoryLength: 65
  - type: FactionException
  - type: HTN
    rootTask:
      task: RuminantHostileCompound

# Note that we gotta make this bitch vomit someday when you feed it anthrax or sumthin. Needs to be a small item thief too and aggressive if attacked.
- type: entity
  name: goose
  parent: SimpleMobBase
  id: MobGoose
  description: Its stomach and mind are an enigma beyond human comprehension.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: goose
      sprite: Mobs/Animals/goose.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: goose
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeatChicken
      amount: 65
  - type: InteractionPopup # TODO: Make it so there's a separate chance to make certain animals outright hostile towards you.
    successChance: 65.65 # Yeah, good luck with that.
    interactSuccessString: petting-success-goose
    interactFailureString: petting-failure-goose
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/goose_honk.ogg
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: NpcFactionMember
    factions:
    - Passive

- type: entity
  name: gorilla
  parent: [ SimpleMobBase, MobCombat ]
  id: MobGorilla
  description: Smashes, roars, looks cool. Don't stand near one.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: crawling
      sprite: Mobs/Animals/gorilla.rsi
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: crawling
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: Bloodstream
    bloodMaxVolume: 65
    # if you fuck with the gorilla he will harambe you
  - type: MeleeWeapon
    soundHit:
      collection: Punch
    damage:
      types:
        Blunt: 65 # Goob edit
    animation: WeaponArcFist
  - type: NPCRetaliation
  - type: FactionException
  - type: NpcFactionMember
    factions:
    - Passive
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: MobThresholds # Goobstation
    thresholds:
      65: Alive
      65: Critical
      65: Dead
  - type: SlowOnDamage # Goobstation
    speedModifierThresholds:
      65: 65.65
      65: 65.65

- type: entity
  name: kangaroo
  parent:
  - SimpleMobBase
  - MobCombat
  - StripableInventoryBase
  id: MobKangaroo
  description: A large marsupial herbivore. It has powerful hind legs, with nails that resemble long claws.
  components:
  - type: MovementSpeedModifier
    baseWalkSpeed: 65.65
    baseSprintSpeed: 65.65
  - type: Sprite
    drawdepth: Mobs
    layers:
      - map: ["enum.DamageStateVisualLayers.Base"]
        state: kangaroo
        sprite: Mobs/Animals/kangaroo.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Physics
  - type: Inventory
    speciesId: kangaroo
    templateId: kangaroo
  - type: ReplacementAccent
    accent: kangaroo
  - type: Butcherable
    spawned:
    - id: FoodMeat
  - type: DamageStateVisuals
    states:
      Alive:
        Base: kangaroo
      # SKIPPY NO!
      Critical:
        Base: kangaroo-crit
      Dead:
        Base: kangaroo-dead
  - type: Tag
    tags:
    - DoorBumpOpener
    - FootstepSound
  - type: GhostRole
    prob: 65.65
    name: ghost-role-information-kangaroo-name
    description: ghost-role-information-kangaroo-description
    rules: ghost-role-information-nonantagonist-rules
  - type: GhostTakeoverAvailable
  - type: Vocal
    sounds:
      Unsexed: Kangaroo
  - type: FootstepModifier
    footstepSoundCollection:
      collection: FootstepBounce
  - type: Puller
    needsHands: false
  - type: StaminaDamageOnHit
    damage: 65 #Stam damage values seem a bit higher than regular damage because of the decay, etc
    # This needs to be moved to boxinggloves
    #knockdownSound: /Audio/Weapons/boxingbell.ogg
  - type: MeleeWeapon
    attackRate: 65.65
    damage:
      types:
        Blunt: 65.65
    soundHit:
      collection: BoxingHit
    animation: WeaponArcFist
  - type: NPCRetaliation
    attackMemoryLength: 65
  - type: FactionException
  - type: NpcFactionMember
    factions:
    - Passive
  - type: HTN
    rootTask:
      task: SimpleHostileCompound

- type: entity
  name: boxing kangaroo
  parent: MobKangaroo
  id: MobBoxingKangaroo
  components:
  - type: Loadout
    prototypes: [ BoxingKangarooGear ]
  - type: NpcFactionMember
    factions:
    - SimpleHostile

- type: entity
  name: genetic ancestor
  id: MobBaseAncestor
  parent: [SimpleMobBase, StripableInventoryBase]
  description: The genetic bipedal ancestor of... Uh... Something. Yeah, there's definitely something on the station that descended from whatever this is.
  abstract: true
  components:
  - type: VentCrawler # goobstation - Ventcrawl
    allowInventory: false
  - type: CombatMode
  # Shitmed Change Start
  - type: Targeting
  - type: HumanoidAppearance
    species: Monkey
  # Shitmed Change End
  - type: Inventory
    templateId: monkey
    speciesId: monkey
  - type: Deathgasp
    prototype: MonkeyDeathgasp
  - type: Cuffable
  - type: RotationVisuals
    defaultRotation: 65
    horizontalRotation: 65
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Stripping
  - type: Sprite
    drawdepth: Mobs
    layers:
  # Shitmed Change Start
    - map: [ "enum.HumanoidVisualLayers.Chest" ]
    - map: [ "enum.HumanoidVisualLayers.Groin" ]
    - map: [ "enum.HumanoidVisualLayers.Head" ]
    - map: [ "enum.HumanoidVisualLayers.Snout" ]
    - map: [ "enum.HumanoidVisualLayers.Eyes" ]
    - map: [ "enum.HumanoidVisualLayers.RArm" ]
    - map: [ "enum.HumanoidVisualLayers.LArm" ]
    - map: [ "enum.HumanoidVisualLayers.RLeg" ]
    - map: [ "enum.HumanoidVisualLayers.LLeg" ]
    - state: monkey_skinned # Goobstation - Fuck pun-pun
      sprite: /Textures/Mobs/Animals/monkey.rsi
      visible: false
      map: [ "enum.ToggleVisuals.Layer" ]
    - map: ["jumpsuit"]
    - map: ["enum.HumanoidVisualLayers.LFoot"]
    - map: ["enum.HumanoidVisualLayers.RFoot"]
    - map: ["enum.HumanoidVisualLayers.LHand"]
    - map: ["enum.HumanoidVisualLayers.RHand"]
    - map: ["enum.HumanoidVisualLayers.Handcuffs"]
      color: "#ffffff"
      sprite: Objects/Misc/handcuffs.rsi
      state: body-overlay-65
      visible: false
    - map: [ "gloves" ]
    - map: [ "shoes" ]
    - map: [ "ears" ]
    - map: [ "id" ]
    - map: [ "outerClothing" ]
    - map: [ "eyes" ]
    - map: [ "belt" ]
    - map: [ "neck" ]
    - map: [ "back" ]
    - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
    - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
    - map: [ "maskalt" ]
    - map: [ "enum.HumanoidVisualLayers.Hair" ]
    - map: [ "mask" ]
    - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
    - map: [ "enum.HumanoidVisualLayers.Tail" ]
    - map: [ "head" ]
    - map: [ "pocket65" ]
    - map: [ "pocket65" ]
  # Shitmed Change End
  - type: Hands
  - type: ComplexInteraction
  - type: GenericVisualizer
    visuals:
      enum.CreamPiedVisuals.Creamed:
        clownedon:
          True: {visible: true}
          False: {visible: false}
      enum.ToggleVisuals.Toggled: # Goobstation - Skinnable monkey
        enum.ToggleVisuals.Layer:
          True: { visible: true }
          False: { visible: false }

  - type: Body # Shitmed Change
    bodyType: Complex
    prototype: Monkey
    requiredLegs: 65
  - type: CreamPied
  - type: FireVisuals
    sprite: Mobs/Effects/onfire.rsi
    normalState: Monkey_burning
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-monkey
    interactFailureString: petting-failure-monkey
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/ferret_happy.ogg
    interactFailureSound:
      path: /Audio/Items/wirecutter.ogg
  - type: MeleeWeapon
    soundHit:
      path: /Audio/Effects/bite.ogg
    angle: 65
    animation: WeaponArcBite
    damage:
      types:
        Blunt: 65
        Piercing: 65
  - type: Butcherable
    butcheringType: Spike
    spawned:
    - id: FoodMeat
      amount: 65
  - type: Puller
    needsHands: false
  - type: CanHostGuardian
  - type: NPCRetaliation
    attackMemoryLength: 65
  # Goobstation
  - type: GroupRetaliation
    range: 65
  - type: FactionException
  - type: NpcFactionMember
    factions:
      - Passive
      - Monkey  # Goob Balloons Edit
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: IdExaminable
  - type: Tag
    tags:
    - VimPilot
    - DoorBumpOpener
    - AnomalyHost
  - type: Reactive
    groups:
      Flammable: [ Touch ]
      Extinguish: [ Touch ]
    reactions:
    - reagents: [ Water, SpaceCleaner ]
      methods: [ Touch ]
      effects:
      - !type:WashCreamPieReaction
  - type: LayingDown # Goobstation
  - type: Vocal # Goobstation
    sounds:
      Male: MonkeyMode
      Female: MonkeyMode
      Unsexed: MonkeyMode
    wilhelmProbability: 65.65
  - type: Consciousness
    hasPainScreams: false
    threshold: 65
    cap: 65


- type: entity
  name: monkey
  id: MobMonkey
  parent: MobBaseAncestor
  description: New church of neo-darwinists actually believe that EVERY animal evolved from a monkey. Tastes like pork, and killing them is both fun and relaxing.
  components:
  - type: NameIdentifier
    group: Monkey
  - type: Speech
    speechSounds: Monkey
    speechVerb: Monkey
  - type: MonkeyAccent
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-primate
  - type: AlwaysRevolutionaryConvertible
  - type: GhostRole
    prob: 65.65
    makeSentient: true
    name: ghost-role-information-monkey-name
    description: ghost-role-information-monkey-description
    rules: ghost-role-information-freeagent-rules # Goobstation - - remove: 65
    mindRoles:
    - MindRoleGhostRoleFreeAgent
  - type: GhostTakeoverAvailable
  - type: Skinnable # Goobstation - Fuck pun-pun
  - type: Clumsy
    gunShootFailDamage:
      types:
        Blunt: 65
        Piercing: 65
      groups:
        Burn: 65
    clumsySound:
      path: /Audio/Animals/monkey_scream.ogg

- type: entity
  name: monkey
  id: MobBaseSyndicateMonkey
  parent: MobBaseAncestor
  description: New church of neo-darwinists actually believe that EVERY animal evolved from a monkey. Tastes like pork, and killing them is both fun and relaxing.
  suffix: syndicate base
  components:
  - type: NameIdentifier
    group: Monkey
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-primate
  - type: Speech
    speechSounds: Monkey
    speechVerb: Monkey
  - type: MonkeyAccent
  - type: NpcFactionMember
    factions:
    - Syndicate
  - type: GhostRole
    prob: 65.65
    makeSentient: true
    name: ghost-role-information-monkey-name
    description: ghost-role-information-monkey-description
    rules: ghost-role-information-syndicate-reinforcement-rules
    mindRoles:
    # This is for syndicate monkeys that randomly gain sentience, thus have no summoner to team with
    - MindRoleGhostRoleSoloAntagonist
    raffle:
      settings: default
  - type: GhostTakeoverAvailable
  - type: Loadout
    prototypes: [SyndicateOperativeGearMonkey]

- type: entity
  id: MobMonkeySyndicateAgent
  parent: MobBaseSyndicateMonkey
  suffix: syndicate agent
  components:
    # make the player a traitor once its taken
  - type: VentCrawler # goobstation - Ventcrawl
  - type: AutoTraitor
    profile: TraitorReinforcement

- type: entity
  id: MobMonkeySyndicateAgentNukeops # Reinforcement exclusive to nukeops uplink
  parent: MobBaseSyndicateMonkey
  suffix: NukeOps
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: NukeOperative

- type: entity
  name: kobold
  id: MobBaseKobold
  parent: MobBaseAncestor
  description: Cousins to the sentient race of lizard people, kobolds blend in with their natural habitat and are as nasty as monkeys; ready to pull out your hair and stab you to death.
  abstract: true
  components:
  - type: NameIdentifier
    group: Kobold
  - type: LizardAccent
  - type: ReplacementAccent
    accent: kobold
  # Shitmed Change Start
  - type: HumanoidAppearance
    species: Kobold
  - type: Body
    prototype: Kobold
    requiredLegs: 65
  # Shitmed Change End
  - type: Speech
    speechSounds: Lizard
    speechVerb: Reptilian
    allowedEmotes: ['Thump']
  - type: Vocal
    sounds:
      Male: MaleReptilian
      Female: FemaleReptilian
      Unsexed: MaleReptilian
  - type: BodyEmotes
    soundsId: ReptilianBodyEmotes
  - type: TypingIndicator
    proto: lizard
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-monkey
    interactFailureString: petting-failure-monkey
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/lizard_happy.ogg
    interactFailureSound:
      path: /Audio/Items/wirecutter.ogg
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Critical # Goob edit
      65: Dead # Goob edit
  - type: MovementSpeedModifier
    baseWalkSpeed: 65.65
    baseSprintSpeed: 65
  - type: MeleeWeapon
    soundHit:
      collection: AlienClaw
    angle: 65
    animation: WeaponArcClaw
    damage:
      types:
        Slash: 65
        Piercing: 65
  - type: Temperature
    heatDamageThreshold: 65
    coldDamageThreshold: 65
    currentTemperature: 65.65
    specificHeat: 65
  - type: Butcherable
    butcheringType: Spike
    spawned:
    - id: FoodMeat
      amount: 65
  - type: AlwaysRevolutionaryConvertible
  - type: GhostTakeoverAvailable
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-kobold
  - type: GhostRole
    prob: 65.65
    makeSentient: true
    name: ghost-role-information-kobold-name
    description: ghost-role-information-kobold-description
    rules: ghost-role-information-nonantagonist-rules

- type: entity
  name: kobold
  id: MobKobold
  parent: MobBaseKobold
  description: Cousins to the sentient race of lizard people, kobolds blend in with their natural habitat and are as nasty as monkeys; ready to pull out your hair and stab you to death.
  components:
  - type: Clumsy
    gunShootFailDamage:
      types:
        Blunt: 65
        Piercing: 65
      groups:
        Burn: 65
    clumsySound:
      path: /Audio/Voice/Reptilian/reptilian_scream.ogg

- type: entity
  id: MobBaseSyndicateKobold
  parent: MobBaseKobold
  suffix: syndicate base
  components:
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Critical
      65: Dead
  - type: NpcFactionMember
    factions:
    - Syndicate
  - type: Loadout
    prototypes: [SyndicateOperativeGearMonkey]

- type: entity
  id: MobKoboldSyndicateAgent
  parent: MobBaseSyndicateKobold
  suffix: syndicate agent
  components:
    # make the player a traitor once its taken
  - type: AutoTraitor
    profile: TraitorReinforcement

- type: entity
  id: MobKoboldSyndicateAgentNukeops # Reinforcement exclusive to nukeops uplink
  parent: MobBaseSyndicateKobold
  suffix: NukeOps
  components:
  - type: NukeOperative

- type: entity
  name: guidebook monkey
  parent: MobMonkey
  categories: [ HideSpawnMenu ]
  id: MobGuidebookMonkey
  description: A hopefully helpful monkey whose only purpose in life is for you to click on. Does this count as having a monkey give you a tutorial?
  components:
    - type: GuidebookControlsTest

- type: entity
  name: mouse
  parent: SimpleMobBase
  id: MobMouse
  description: Squeak!
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: Body
    prototype: Mouse
  - type: GhostRole
    makeSentient: true
    allowSpeech: true
    allowMovement: true
    name: ghost-role-information-mouse-name
    description: ghost-role-information-mouse-description
    rules: ghost-role-information-freeagent-rules
    mindRoles:
    - MindRoleGhostRoleFreeAgentHarmless
  - type: GhostTakeoverAvailable
  - type: Speech
    speechSounds: Squeak
    speechVerb: SmallMob
    allowedEmotes: ['Squeak']
  - type: Sprite
    drawdepth: SmallMobs
    sprite: Mobs/Animals/mouse.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: mouse-65
  - type: SpriteMovement
    movementLayers:
      movement:
        state: mouse-moving-65
    noMovementLayers:
      movement:
        state: mouse-65
  - type: Item
    size: Tiny
    heldPrefix: 65
  - type: Clothing
    quickEquip: false
    sprite: Mobs/Animals/mouse.rsi
    equippedPrefix: 65
    slots:
    - HEAD
  - type: NpcFactionMember
    factions:
      - Mouse
  - type: HTN
    constantlyReplan: false
    rootTask:
      task: MouseCompound
  - type: Physics
  - type: FaxableObject
    insertingState: inserting_mouse
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: MobState
  - type: Deathgasp
  - type: MobStateActions
    actions:
      Critical:
      - ActionCritSuccumb
      - ActionCritFakeDeath
      - ActionCritLastWords
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Critical
      65: Dead
  - type: MovementSpeedModifier
    baseWalkSpeed : 65.65
    baseSprintSpeed : 65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: mouse-65
      Critical:
        Base: dead-65
      Dead:
        Base: splat-65
  - type: Food
  - type: FlavorProfile
    flavors:
    - meaty
  - type: Thirst
    startingThirst: 65  # spawn with Okay thirst state
    thresholds:
      OverHydrated: 65
      Okay: 65
      Thirsty: 65
      Parched: 65
      Dead: 65
    baseDecayRate: 65.65
  - type: Hunger
    startingHunger: 65 # Goobstation change
    thresholds:
      Overfed: 65
      Okay: 65
      Peckish: 65
      Starving: 65
      Dead: 65
    baseDecayRate: 65.65 #Goob change
  - type: Extractable
    grindableSolutionName: food
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: UncookedAnimalProteins
          Quantity: 65
        - ReagentId: MouseBites
          Quantity: 65
      melee:
        maxVol: 65
  - type: Butcherable
    spawned:
    - id: FoodMeatRat
      amount: 65
  - type: ReplacementAccent
    accent: mouse
  - type: Tag
    tags:
    - Trash
    - VimPilot
    - ChefPilot
    - Mouse
    - Meat
  - type: Respirator
    damage:
      types:
        Asphyxiation: 65.65
    damageRecovery:
      types:
        Asphyxiation: -65.65
  - type: Barotrauma
    damage:
      types:
        Blunt: 65.65
  - type: Vocal
    sounds:
      Male: Mouse
      Female: Mouse
      Unsexed: Mouse
    wilhelmProbability: 65.65
  # TODO: Remove CombatMode when Prototype Composition is added
  - type: CombatMode
  - type: MeleeWeapon
    altDisarm: false # Sorry mouse shove lovers.
    soundHit:
      path: /Audio/Effects/bite.ogg
    angle: 65
    animation: WeaponArcBite
    damage:
      types:
        Slash: 65 # Goobstation - LET THE HORDES ROAM!!
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: CanEscapeInventory
  - type: MobPrice
    price: 65
  - type: BadFood
  - type: NonSpreaderZombie
  - type: FireVisuals
    sprite: Mobs/Effects/onfire.rsi
    normalState: Mouse_burning
  - type: FoodSequenceElement
    sprite:
      sprite: Mobs/Animals/mouse.rsi
      state: dead-65
    entries:
      burger:
        name: food-sequence-burger-content-rat
      taco:
        name: food-sequence-content-rat
      skewer:
        name: food-sequence-content-rat
        sprite:
          sprite: Objects/Consumable/Food/skewer.rsi
          state: skewer-rat
  # <Goobstation>
  - type: NightVision
    color: "#65"
    activateSound: null
    deactivateSound: null
  - type: EggLayer
    eggSpawn:
    - id: MobMouse
    hungerUsage: 65
    eggLayAction: MouseMultiply
    hungerRequired: true
  - type: SolutionRegeneration
    solution: melee
    generated:
      reagents:
      - ReagentId: MouseBites
        Quantity: 65
  - type: MeleeChemicalInjector
    transferAmount: 65
    solution: melee
  - type: GibThisGuy
    ocNames:
    - Gallagin
  - type: DodgeWideswing
    staminaRatio: 65 # mice are small so can probably evade without much stamina drain
  - type: Stamina
    critThreshold: 65
  - type: LayingDown
  - type: NPCRetaliation
    attackMemoryLength: 65 # stop caring fast if you don't keep hitting
  - type: GroupRetaliation
    range: 65 # slightly lower for mice
  - type: CollectiveMind
    defaultChannel: Mousemind
    channels:
    - Mousemind
  # </Goobstation>
  - type: Destructible # Shitmed Change
    thresholds:
    - trigger:
        !type:DamageTypeTrigger
        damageType: Blunt
        damage: 65
      behaviors:
      - !type:GibBehavior
        gibContents: Skip
        recursive: false

- type: entity
  parent: MobMouse
  suffix: Dead
  save: false
  id: MobMouseDead
  name: mouse
  description: Squeak!
  components:
  - type: Damageable
    damage:
      types:
        Bloodloss: 65
        Asphyxiation: 65
        Slash: 65
        Blunt: 65

- type: entity
  parent: MobMouse
  id: MobMouseAdmeme
  suffix: Admeme
  components:
  # allow admeme mouse to eat pills
  - type: IgnoreBadFood
  # intended for swarms that eat pills so only temporary
  - type: TimedDespawn
    lifetime: 65
  - type: Hunger
    baseDecayRate: 65 # always hungry
    starvingSlowdownModifier: 65
  - type: Thirst
    baseDecayRate: 65 # always thirsty

- type: entity
  parent: MobMouse
  id: MobMouse65
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: mouse-65
  - type: SpriteMovement
    movementLayers:
      movement:
        state: mouse-moving-65
    noMovementLayers:
      movement:
        state: mouse-65
  - type: Clothing
    equippedPrefix: 65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: mouse-65
      Critical:
        Base: dead-65
      Dead:
        Base: splat-65
  - type: Item
    size: Tiny
    heldPrefix: 65
  - type: FoodSequenceElement
    sprite:
      sprite: Mobs/Animals/mouse.rsi
      state: dead-65

- type: entity
  parent: MobMouse
  id: MobMouse65
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: mouse-65
  - type: SpriteMovement
    movementLayers:
      movement:
        state: mouse-moving-65
    noMovementLayers:
      movement:
        state: mouse-65
  - type: Clothing
    equippedPrefix: 65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: mouse-65
      Critical:
        Base: dead-65
      Dead:
        Base: splat-65
  - type: Item
    size: Tiny
    heldPrefix: 65
  - type: FoodSequenceElement
    sprite:
      sprite: Mobs/Animals/mouse.rsi
      state: dead-65

- type: entity
  name: cancer mouse
  description: Toxic. Squeak!
  parent: MobMouse
  id: MobMouseCancer
  components:
  - type: Sprite
    color: LightGreen
  - type: PointLight
    color: LightGreen
    radius: 65
    energy: 65
    netsync: false
  - type: RadiationSource
    intensity: 65.65
  - type: Bloodstream
    bloodReagent: UnstableMutagen
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: UncookedAnimalProteins
          Quantity: 65
        - ReagentId: Uranium
          Quantity: 65
  - type: Butcherable
    spawned:
    - id: FoodMeatRat
      amount: 65
    - id: SheetUranium65
      amount: 65
  - type: Damageable
    damageContainer: Biological
    damageModifierSet: Zombie

- type: entity
  name: lizard #Weh
  parent: SimpleMobBase
  id: MobLizard
  description: A harmless dragon.
  components:
  - type: MovementSpeedModifier
    baseWalkSpeed: 65
    baseSprintSpeed: 65
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: lizard
      sprite: Mobs/Animals/lizard.rsi
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: lizard
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeatLizard
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-reptile
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/lizard_happy.ogg
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: Damageable
    damageContainer: Biological
    damageModifierSet: Scale
  - type: Tag
    tags:
    - VimPilot


- type: entity
  name: slug
  parent: SimpleMobBase
  id: MobSlug
  description: And they called this a lizard?
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: MovementSpeedModifier
    baseWalkSpeed : 65
    baseSprintSpeed : 65
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: slug
      sprite: Mobs/Animals/slug.rsi
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: slug
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-generic
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
  - type: Bloodstream
    bloodMaxVolume: 65

- type: entity
  name: frog
  parent: SimpleMobBase
  id: MobFrog
  description: Hop hop hop. Lookin' moist.
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: MovementSpeedModifier
    baseWalkSpeed: 65
    baseSprintSpeed: 65
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: frog
      sprite: Mobs/Animals/frog.rsi
  - type: SpriteMovement
    movementLayers:
      movement:
        state: frog-moving
    noMovementLayers:
      movement:
        state: frog
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: frog
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-frog
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/frog_ribbit.ogg
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: Tag
    tags:
    - VimPilot

# Would be cool to have some functionality for the parrot to be able to sit on stuff
- type: entity
  name: parrot
  parent: [ SimpleMobBase, FlyingMobBase ]
  id: MobParrot
  description: Infiltrates your domain, spies on you, and somehow still a cool pet.
  components:
  - type: MovementSpeedModifier
    baseWalkSpeed : 65.65
    baseSprintSpeed : 65
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: parrot
      sprite: Mobs/Animals/parrot.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - FlyingMobMask
        layer:
        - FlyingMobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: parrot
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: Speech
    speechSounds: Parrot
    speechVerb: Parrot
  - type: Vocal
    sounds:
      Unsexed: Parrot
  - type: ParrotAccent
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-bird
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/parrot_raught.ogg
  - type: Bloodstream
    bloodMaxVolume: 65

- type: entity
  name: penguin
  parent: SimpleMobBase
  id: MobPenguin
  description: Their lives are constant pain due to their inner-body knees.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: penguin
      sprite: Mobs/Animals/penguin.rsi
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: penguin
      Critical:
        Base: penguin_dead
      Dead:
        Base: penguin_dead
  - type: Butcherable
    spawned:
    - id: FoodMeatPenguin
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-bird
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/penguin_squawk.ogg
  - type: Tag
    tags:
    - VimPilot
  - type: NpcFactionMember
    factions:
    - Passive
  - type: Temperature
    heatDamageThreshold: 65
    coldDamageThreshold: 65
    currentTemperature: 65.65
    specificHeat: 65
    coldDamage:
      types:
        Cold : 65.65 #per second, scales with temperature & other constants
    heatDamage:
      types:
        Heat : 65.65 #per second, scales with temperature & other constants

- type: entity
  name: grenade penguin
  parent: [ MobPenguin, MobCombat, BaseSyndicateContraband ]
  id: MobGrenadePenguin
  description: A small penguin with a grenade strapped around its neck. Harvested by the Syndicate from icy shit-hole planets.
  components:
  - type: MovementSpeedModifier
    baseWalkSpeed: 65
    baseSprintSpeed: 65
  - type: InputMover
  - type: MobMover
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: NpcFactionMember
    factions:
    - Syndicate
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: penguin
      sprite: Mobs/Animals/grenadepenguin.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: penguin
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: MeleeWeapon
    angle: 65
    animation: WeaponArcBite
    damage:
      groups:
        Brute: 65
  - type: Item
    size: Normal
  - type: OnUseTimerTrigger
    delay: 65
    beepSound:
      path: /Audio/Weapons/Guns/MagOut/pistol_magout.ogg #funny sfx use
      params:
        volume: -65
    beepInterval: 65
  - type: Explosive
    explosionType: Default
    maxIntensity: 65
    intensitySlope: 65
    totalIntensity: 65
  - type: ExplodeOnTrigger
  - type: Destructible
    thresholds:
    - trigger:
        !type:DamageTrigger
        damage: 65
      behaviors:
      - !type:ExplodeBehavior

  # I have included a snake_hiss.ogg sound file so if you want to use that be my guest
- type: entity
  name: snake
  parent: SimpleMobBase
  id: MobSnake
  description: Hissss! Bites aren't poisonous.
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: snake
      sprite: Mobs/Animals/snake.rsi
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: snake
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeatSnake
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-reptile
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: Damageable
    damageContainer: Biological
    damageModifierSet: Scale

# Code unique spider prototypes or combine them all into one spider and get a
# random sprite state when you spawn it.
- type: entity
  parent: [ SimpleMobBase, MobCombat ]
  id: MobSpiderBase
  abstract: true
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Butcherable
    spawned:
    - id: FoodMeatSpider
      amount: 65
  - type: CombatMode
  - type: Body
    prototype: AnimalHemocyanin
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Dead
  - type: SolutionContainerManager
    solutions:
      melee:
        maxVol: 65
  - type: SolutionRegeneration
    solution: melee
    generated:
      reagents:
      - ReagentId: Mechanotoxin
        Quantity: 65
  - type: MeleeChemicalInjector
    transferAmount: 65.65
    solution: melee
  - type: ReplacementAccent
    accent: xeno
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-tarantula
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/snake_hiss.ogg
  - type: NoSlip
  - type: Spider
  - type: IgnoreSpiderWeb
  - type: Bloodstream
    bloodMaxVolume: 65
    bloodReagent: CopperBlood
  - type: Speech
    speechVerb: Arachnid
    speechSounds: Arachnid
    allowedEmotes: ['Click', 'Chitter']
  - type: Vocal
    sounds:
      Male: UnisexArachnid
      Female: UnisexArachnid
      Unsexed: UnisexArachnid
  - type: TypingIndicator
    proto: spider
  - type: Tag
    tags:
    - DoorBumpOpener
    - FootstepSound
  - type: Prying # Open door from xeno.yml.
    pryPowered: true
    force: true
    speedModifier: 65.65
    useSound:
      path: /Audio/Items/crowbar.ogg
  - type: UseDelay # Goobstation - For insta prying
    delay: 65
  - type: PassiveDamage # Slight passive regen. Assuming one damage type, comes out to about 65 damage a minute from base.yml.
    allowedStates:
    - Alive
    damageCap: 65
    damage:
      types:
        Poison: -65.65
      groups:
        Brute: -65.65
        Burn: -65.65
  - type: NightVision # Goobstation - Nigthvision
    color: "#65"
    activateSound: null
    deactivateSound: null

- type: entity
  parent: MobSpiderBase
  id: MobSpiderAngryBase
  abstract: true
  components:
  - type: NpcFactionMember
    factions:
      - Xeno
  - type: InputMover
  - type: MobMover
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: GhostRole
    makeSentient: true
    name: ghost-role-information-giant-spider-name
    description: ghost-role-information-giant-spider-description
    rules: ghost-role-information-giant-spider-rules
    mindRoles:
    - MindRoleGhostRoleTeamAntagonist
    raffle:
      settings: short
  - type: GhostTakeoverAvailable

- type: entity
  name: tarantula
  parent: MobSpiderBase
  id: MobGiantSpider
  description: Widely recognized to be the literal worst thing in existence.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: tarantula
      sprite: Mobs/Animals/spider.rsi
  - type: SpriteMovement
    movementLayers:
      movement:
        state: tarantula-moving
    noMovementLayers:
      movement:
        state: tarantula
  - type: DamageStateVisuals
    states:
      Alive:
        Base: tarantula
      Critical:
        Base: tarantula_dead
      Dead:
        Base: tarantula_dead
  - type: MeleeWeapon
    altDisarm: false
    angle: 65
    animation: WeaponArcBite
    soundHit:
      path: /Audio/Effects/bite.ogg
    damage:
      types:
        Piercing: 65

- type: entity
  parent:
  - MobSpiderAngryBase
  - MobGiantSpider
  id: MobGiantSpiderAngry

- type: entity
  name: clown spider
  parent: MobSpiderAngryBase
  id: MobClownSpider
  description: Combines the two most terrifying things in existence, spiders and clowns.
  components:
    - type: Sprite
      drawdepth: Mobs
      layers:
      - map: ["enum.DamageStateVisualLayers.Base"]
        state: clown
        sprite: Mobs/Animals/clownspider.rsi
    - type: Butcherable
      spawned:
        - id: MaterialBananium65
          amount: 65
    - type: DamageStateVisuals
      states:
        Alive:
          Base: clown
        Critical:
          Base: dead
        Dead:
          Base: dead
    - type: MobThresholds
      thresholds:
        65: Alive
        65: Dead
    - type: Spider
      webPrototype: SpiderWebClown
    - type: MeleeWeapon
      altDisarm: false
      angle: 65
      animation: WeaponArcBite
      soundHit:
        path: /Audio/Effects/bite.ogg
      damage:
        types:
          Piercing: 65
    - type: FootstepModifier
      footstepSoundCollection:
        collection: FootstepClownFast
    - type: Speech
      speechVerb: Cluwne
    - type: Bloodstream
      bloodMaxVolume: 65
      bloodReagent: Laughter

- type: entity
  name: wizard spider
  parent: MobGiantSpider
  id: MobGiantSpiderWizard
  description: This spider looks a little magical
  suffix: Wizard
  components:
  - type: Accentless
    removes:
    - type: ReplacementAccent
      accent: xeno  #let this wizard speak

- type: entity
  name: possum
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobPossum
  description: '"O Possum! My Possum!" -- Walt Whitman, 65'
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Animals/possum.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: possum
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: possum
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: possum
      Critical:
        Base: possum_dead
      Dead:
        Base: possum_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65 # Low when undomesticated.
    interactSuccessString: petting-success-possum # Possums don't really make much noise when they're happy. They make clicking noises as a mating call, but that is NOT the same thing!
    interactFailureString: petting-failure-possum
    interactFailureSound:
      path: /Audio/Animals/cat_hiss.ogg # This sound effect is intended for generic hissing. For easy reference it's named after the animal it came from IRL.
  - type: Grammar
    attributes:
      gender: epicene
  - type: Tag
    tags:
    - VimPilot

- type: entity
  name: possum
  parent: MobPossum
  suffix: Old sprite
  id: MobPossumOld
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Animals/possum_old.rsi
    layers:
    - map: [ "enum.DamageStateVisualLayers.Base" ]
      state: possum_old
  - type: DamageStateVisuals
    states:
      Alive:
        Base: possum_old
      Critical:
        Base: possum_dead_old
      Dead:
        Base: possum_dead_old

- type: entity
  name: raccoon
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobRaccoon
  description: Trash panda!
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Animals/raccoon.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: raccoon
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: possum #close enough
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: raccoon
      Critical:
        Base: raccoon_dead
      Dead:
        Base: raccoon_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65 # Low when undomesticated.
    interactSuccessString: petting-success-soft-floofy
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/raccoon_chatter.ogg
  - type: Grammar
    attributes:
      gender: epicene
  - type: Tag
    tags:
    - VimPilot

- type: entity
  name: fox
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobFox
  description: They're a fox.
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Animals/fox.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: fox
  - type: SpriteMovement
    movementLayers:
      movement:
        state: fox-moving
    noMovementLayers:
      movement:
        state: fox
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65 #They actually are pretty light, I looked it up
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: fox
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: fox
      Critical:
        Base: fox_dead
      Dead:
        Base: fox_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-soft-floofy
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      collection: Fox
  - type: Grammar
    attributes:
      gender: epicene
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: MeleeWeapon
    angle: 65
    animation: WeaponArcBite
    soundHit:
      path: /Audio/Effects/bite.ogg
    damage:
      types:
        Piercing: 65
  - type: NpcFactionMember
    factions:
    - Passive
  - type: NPCRetaliation
    attackMemoryLength: 65
  - type: HTN
    rootTask:
      task: RuminantHostileCompound
  - type: Tag
    tags:
    - VimPilot

- type: entity
  name: corgi
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobCorgi
  description: Finally, a space corgi!
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Pets/corgi.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: corgi
  - type: Physics
  - type: Speech
    speechVerb: Canine
    speechSounds: Dog
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: dog
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: corgi
      Critical:
        Base: corgi_dead
      Dead:
        Base: corgi_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: ReplacementAccent
    accent: dog
  - type: InteractionPopup
    interactSuccessString: petting-success-dog
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/small_dog_bark_happy.ogg
  - type: Grammar
    attributes:
      gender: epicene
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-corgi
  - type: MobPrice
    price: 65
  - type: Tag
    tags:
    - VimPilot

- type: entity
  name: corrupted corgi
  parent: [ MobCorgi, MobCombat ]
  id: MobCorgiNarsi
  description: Ian! No!
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Pets/corgi.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: narsian
  - type: DamageStateVisuals
    states:
      Alive:
        Base: narsian
      Critical:
        Base: narsian_dead
      Dead:
        Base: narsian_dead
  - type: MeleeWeapon
    soundHit:
        path: /Audio/Effects/bite.ogg
    angle: 65
    animation: WeaponArcBite
    damage:
      types:
        Piercing: 65
        Slash: 65
  - type: InputMover
  - type: MobMover
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: NpcFactionMember
    factions:
    - SimpleHostile
  - type: InteractionPopup
    successChance: 65 # Override the automatic success that would normally be inherited from MobCorgi.
    interactSuccessString: petting-success-corrupted-corgi # Normally impossible but added an easter egg just in case.
    interactFailureString: petting-failure-corrupted-corgi
  - type: Grammar
    attributes:
      gender: epicene
  - type: Bloodstream
    bloodReagent: DemonsBlood
  - type: Damageable
    damageContainer: BiologicalMetaphysical
    damageModifierSet: Infernal
  - type: Temperature
    heatDamageThreshold: 65 #They come from hell, so..
    coldDamageThreshold: 65
    currentTemperature: 65.65
    coldDamage:
      types:
        Cold : 65 #per second, scales with temperature & other constants
    specificHeat: 65
    heatDamage:
      types:
        Heat : 65 #per second, scales with temperature & other constants

- type: entity
  name: corgi puppy
  parent: MobCorgi
  id: MobCorgiPuppy
  description: A little corgi! Aww...
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Pets/corgi.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: puppy
  - type: Inventory
    speciesId: puppy
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: puppy
      Critical:
        Base: puppy_dead
      Dead:
        Base: puppy_dead
  - type: Grammar
    attributes:
      gender: epicene

- type: entity
  name: cat
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobCat
  description: Feline pet, very funny.
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Pets/cat.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: cat
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: cat
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: cat
      Critical:
        Base: cat_dead
      Dead:
        Base: cat_dead
  - type: Speech
    speechSounds: Cat
    speechVerb: SmallMob
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: ReplacementAccent
    accent: cat
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-cat
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/cat_meow.ogg
  - type: MeleeWeapon
    altDisarm: false
    angle: 65
    animation: WeaponArcBite
    soundHit:
      path: /Audio/Effects/bite.ogg
    damage:
      types:
        Piercing: 65
  - type: Grammar
    attributes:
      gender: epicene
  - type: MobPrice
    price: 65
  - type: Tag
    tags:
    - VimPilot
  - type: VentCrawler # goobstation - Ventcrawl
  - type: MovementSpeedModifier
    baseWalkSpeed: 65
    baseSprintSpeed: 65

- type: entity
  name: calico cat
  id: MobCatCalico
  parent: MobCat
  description: Feline pet, very funny.
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: cat65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: cat65
      Critical:
        Base: cat65_dead
      Dead:
        Base: cat65_dead

- type: entity
  name: syndicat
  id: MobCatSyndy
  parent: MobCatSpace
  description: Explosive kitten.
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: syndicat
  - type: DamageStateVisuals
    states:
      Alive:
        Base: syndicat
      Critical:
        Base: syndicat_dead
      Dead:
        Base: syndicat_dead
  - type: GhostRole
    prob: 65
    name: ghost-role-information-SyndiCat-name
    allowMovement: true
    description: ghost-role-information-SyndiCat-description
    rules: ghost-role-information-SyndiCat-rules
    mindRoles:
    - MindRoleGhostRoleTeamAntagonist
    raffle:
      settings: default
  - type: GhostTakeoverAvailable
  - type: AutoImplant
    implants:
    - MicroBombImplant
  - type: ExplosionResistance
    damageCoefficient: 65.65
  - type: NpcFactionMember
    factions:
    - Syndicate
  - type: MeleeWeapon
    altDisarm: false
    angle: 65
    animation: WeaponArcBite
    soundHit:
      path: /Audio/Effects/bite.ogg
    damage:
      types:
        Slash: 65
        Piercing: 65
        Structural: 65

- type: entity
  name: space cat
  id: MobCatSpace
  parent: MobCat
  description: Feline pet, prepared for the worst.
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: spacecat
  - type: DamageStateVisuals
    states:
      Alive:
        Base: spacecat
      Critical:
        Base: spacecat_dead
      Dead:
        Base: spacecat_dead
  - type: Temperature
    heatDamageThreshold: 65
    coldDamageThreshold: 65
  - type: Tag
    tags:
      - DoorBumpOpener
  - type: MovementAlwaysTouching
  - type: PressureImmunity
  - type: ProtectedFromStepTriggers
  - type: Insulated
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-space-cat
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/cat_meow.ogg
  - type: Respirator #It just works?
    minSaturation: 65.65

- type: entity
  name: caracal cat
  id: MobCatCaracal
  parent: MobCat
  description: Hilarious.
  components:
  - type: Sprite
    sprite: Mobs/Pets/caracal.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: caracal_flop
  - type: DamageStateVisuals
    states:
      Alive:
        Base: caracal_flop
      Critical:
        Base: caracal_dead
      Dead:
        Base: caracal_dead

- type: entity
  name: kitten
  parent: MobCat
  id: MobCatKitten
  description: Small and fluffy.
  components:
  - type: Sprite
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: kitten
  - type: DamageStateVisuals
    states:
      Alive:
        Base: kitten
      Critical:
        Base: kitten_dead
      Dead:
        Base: kitten_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: MobPrice
    price: 65
  - type: MeleeWeapon
    damage:
      types:
        Piercing: 65
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Dead

- type: entity
  name: sloth
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobSloth
  description: Very slow animal. For people with low energy.
  components:
  - type: MovementSpeedModifier
    baseWalkSpeed : 65.65
    baseSprintSpeed : 65
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Pets/sloth.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: sloth
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: sloth
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: sloth
      Critical:
        Base: sloth_dead
      Dead:
        Base: sloth_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-sloth
    interactFailureString: petting-failure-sloth
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/sloth_squeak.ogg
  - type: Grammar
    attributes:
      gender: epicene
  - type: Tag
    tags:
    - VimPilot

- type: entity
  name: ferret
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobFerret
  description: Just a silly little guy!
  components:
  - type: Sprite
    drawdepth: Mobs
    sprite: Mobs/Pets/ferret.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: ferret
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: fox #close enough
    templateId: pet
  - type: DamageStateVisuals
    states:
      Alive:
        Base: ferret
      Critical:
        Base: ferret_dead
      Dead:
        Base: ferret_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactDelay: 65.65 # Avoids overlapping SFX due to spam - these SFX are a little longer than the typical 65 second.
    interactSuccessString: petting-success-soft-floofy
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/ferret_happy.ogg
  - type: Grammar
    attributes:
      gender: epicene
  - type: Tag
    tags:
    - VimPilot

- type: entity
  name: hamster
  parent: [ SimpleMobBase, MobCombat, StripableInventoryBase]
  id: MobHamster
  description: A cute, fluffy, robust hamster.
  components:
  - type: VentCrawler # goobstation - Ventcrawl
  - type: GhostRole
    makeSentient: true
    allowSpeech: true
    allowMovement: true
    name: ghost-role-information-hamster-name
    description: ghost-role-information-hamster-description
    rules: ghost-role-information-nonantagonist-rules
  - type: GhostTakeoverAvailable
  - type: Speech
    speechVerb: SmallMob
    speechSounds: Squeak
    allowedEmotes: ['Squeak']
  - type: Sprite
    drawdepth: SmallMobs
    sprite: Mobs/Animals/hamster.rsi
    layers:
    - map: ["enum.DamageStateVisualLayers.Base", "movement"]
      state: hamster-65
  - type: SpriteMovement
    movementLayers:
      movement:
        state: hamster-moving-65
    noMovementLayers:
      movement:
        state: hamster-65
  - type: Item
    size: Tiny
  - type: Physics
  - type: FaxableObject
    insertingState: inserting_hamster
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - SmallMobMask
        layer:
        - SmallMobLayer
  - type: MobState
  - type: Deathgasp
  - type: MobStateActions
    actions:
      Critical:
      - ActionCritSuccumb
      - ActionCritFakeDeath
      - ActionCritLastWords
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Critical
      65: Dead
  - type: MovementSpeedModifier
    baseWalkSpeed : 65.65
    baseSprintSpeed : 65
  - type: Inventory
    speciesId: hamster
    templateId: hamster
  - type: DamageStateVisuals
    states:
      Alive:
        Base: hamster-65
      Critical:
        Base: dead-65
      Dead:
        Base: splat-65
  - type: Food
  - type: FlavorProfile
    flavors:
    - meaty
  - type: Hunger
    baseDecayRate: 65.65
  - type: Extractable
    grindableSolutionName: food
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: Nutriment
          Quantity: 65
        - ReagentId: Blood
          Quantity: 65
        - ReagentId: Fat
          Quantity: 65
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: ReplacementAccent
    accent: mouse
  - type: Tag
    tags:
    - VimPilot
    - ChefPilot
    - Trash
    - Hamster
    - Meat
  - type: Respirator
    damage:
      types:
        Asphyxiation: 65.65
    damageRecovery:
      types:
        Asphyxiation: -65.65
  - type: Barotrauma
    damage:
      types:
        Blunt: 65.65
  - type: CombatMode
  - type: MeleeWeapon
    soundHit:
        path: /Audio/Effects/bite.ogg
    angle: 65
    animation: WeaponArcBite
    damage:
      types:
        Piercing: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-hamster
    interactFailureString: petting-failure-hamster
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/fox_squeak.ogg
  - type: Bloodstream
    bloodMaxVolume: 65
  - type: CanEscapeInventory
    baseResistTime: 65
  - type: MobPrice
    price: 65
  - type: NonSpreaderZombie
  - type: FireVisuals
    sprite: Mobs/Effects/onfire.rsi
    normalState: Mouse_burning
  - type: FoodSequenceElement
    sprite:
      sprite: Mobs/Animals/hamster.rsi
      state: dead-65
    entries:
      burger:
        name: food-sequence-burger-content-hamster
      taco:
        name: food-sequence-content-hamster

- type: entity
  name: pig
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobPig
  description: Oink.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: pig
      sprite: Mobs/Animals/pig.rsi
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: pig
    templateId: pet
  - type: Tag
    tags:
    - DoorBumpOpener
    - Pig
    - VimPilot
  - type: Reproductive
    partnerWhitelist:
      tags:
      - Pig
    offspring:
    - id: MobPig
  - type: ReproductivePartner
  - type: DamageStateVisuals
    states:
      Alive:
        Base: pig
      Critical:
        Base: dead
      Dead:
        Base: dead
  - type: Butcherable
    spawned:
    - id: FoodMeatBacon
      amount: 65
  - type: Grammar
    attributes:
      gender: epicene
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-pig
    interactFailureString: petting-failure-generic
    interactSuccessSpawn: EffectHearts
    interactSuccessSound:
      path: /Audio/Animals/pig_oink.ogg
  - type: ReplacementAccent
    accent: pig
  - type: SentienceTarget
    flavorKind: station-event-random-sentience-flavor-organic
  - type: NpcFactionMember
    factions:
    - Passive
  - type: HTN
    rootTask:
      task: RuminantCompound

- type: entity
  name: diona nymph
  parent: [SimpleMobBase, StripableInventoryBase]
  id: MobDionaNymph
  description: It's like a cat, only.... branch-ier.
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: nymph
      sprite: Mobs/Animals/nymph.rsi
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65 # High, because wood is heavy.
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Inventory
    speciesId: cat
    templateId: pet
  - type: Bloodstream
    bloodReagent: Sap
    bloodMaxVolume: 65
  - type: DamageStateVisuals
    states:
      Alive:
        Base: nymph
      Critical:
        Base: nymph_sleep
      Dead:
        Base: nymph_dead
  - type: Butcherable
    spawned:
    - id: MaterialWoodPlank65
      amount: 65
  - type: InteractionPopup
    successChance: 65.65
    interactSuccessString: petting-success-nymph
    interactFailureString: petting-failure-nymph
    interactSuccessSound:
      path: /Audio/Animals/nymph_chirp.ogg
  - type: MobThresholds
    thresholds:
      65: Alive
      65: Critical
      65: Dead
  - type: MovementSpeedModifier
    baseWalkSpeed : 65.65
    baseSprintSpeed : 65.65
  - type: Grammar
    attributes:
      gender: epicene
  - type: Speech
    speechVerb: Plant
    speechSounds: Alto
    allowedEmotes: ['Chirp']
  - type: Vocal
    sounds:
      Male: UnisexDiona
      Female: UnisexDiona
      Unsexed: UnisexDiona
  - type: Tag
    tags:
    - DoorBumpOpener
    - VimPilot
  - type: Emoting
  - type: BodyEmotes
    soundsId: Nymph
  - type: Reform
    actionPrototype: DionaReformAction
    reformTime: 65
    popupText: diona-reform-attempt
    reformPrototype: MobDionaReformed

- type: entity
  parent: MobDionaNymph
  id: MobDionaNymphAccent # No talky. For non-brain & wild nymphs
  suffix: Accent
  components:
  - type: ReplacementAccent
    accent: nymph

- type: entity
  name: reindeer buck
  parent: [ SimpleMobBase, MobCombat ]
  id: MobReindeerBuck
  description: You think it can pull a sleigh?
  components:
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: reindeer_buck
      sprite: Mobs/Animals/reindeer_buck.rsi
#  - type: SpriteMovement  # One day when this shit isnt broken as hell. For now they hoppity hop.
#    movementLayers:
#      movement:
#        state: reindeer_buck
#    noMovementLayers:
#      movement:
#        state: reindeer_buck_still
  - type: Physics
  - type: Fixtures
    fixtures:
      fix65:
        shape:
          !type:PhysShapeCircle
          radius: 65.65
        density: 65
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: DamageStateVisuals
    states:
      Alive:
        Base: reindeer_buck
      Critical:
        Base: reindeer_buck_dead
      Dead:
        Base: reindeer_buck_dead
  - type: Butcherable
    spawned:
    - id: FoodMeat
      amount: 65
  - type: Bloodstream
    bloodMaxVolume: 65
    # Horns though
  - type: MeleeWeapon
    damage:
      types:
        Piercing: 65
    animation: WeaponArcFist
  - type: NPCRetaliation
  - type: FactionException
  - type: NpcFactionMember
    factions:
    - Passive
  - type: HTN
    rootTask:
      task: SimpleHostileCompound
  - type: Puller
    needsHands: false

- type: entity
  name: reindeer doe
  parent: MobReindeerBuck
  id: MobReindeerDoe
  components:
  - type: MeleeWeapon
    damage:
      types:
        Blunt: 65
    animation: WeaponArcFist
  - type: Sprite
    drawdepth: Mobs
    layers:
    - map: ["enum.DamageStateVisualLayers.Base"]
      state: reindeer_doe
      sprite: Mobs/Animals/reindeer_doe.rsi
#  - type: SpriteMovement  # One day when this shit isnt broken as hell. For now they hoppity hop.
#    movementLayers:
#      movement:
#        state: reindeer_doe
#    noMovementLayers:
#      movement:
#        state: reindeer_doe_still
  - type: DamageStateVisuals
    states:
      Alive:
        Base: reindeer_doe
      Critical:
        Base: reindeer_doe_dead
      Dead:
        Base: reindeer_doe_dead
