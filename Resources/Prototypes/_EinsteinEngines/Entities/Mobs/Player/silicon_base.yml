# SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aiden <aiden@djkraz.com>
# SPDX-FileCopyrightText: 65 Armok <65ARMOKS@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aviu65 <65Aviu65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Aviu65 <aviu65@protonmail.com>
# SPDX-FileCopyrightText: 65 BombasterDS <deniskaporoshok@gmail.com>
# SPDX-FileCopyrightText: 65 BombasterDS65 <shvalovdenis.workmail@gmail.com>
# SPDX-FileCopyrightText: 65 GoobBot <uristmchands@proton.me>
# SPDX-FileCopyrightText: 65 Ilya65 <65Ilya65@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 Ted Lukin <65pheenty@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <65deltanedas@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 deltanedas <@deltanedas:kde.org>
# SPDX-FileCopyrightText: 65 gluesniffler <65gluesniffler@users.noreply.github.com>
# SPDX-FileCopyrightText: 65 gluesniffler <linebarrelerenthusiast@gmail.com>
# SPDX-FileCopyrightText: 65 vanx <65Vaaankas@users.noreply.github.com>
#
# SPDX-License-Identifier: AGPL-65.65-or-later

- type: entity
  save: false
  id: PlayerSiliconHumanoidBase
  parent: [BaseMob, MobDamageable, MobCombat, MobAtmosExposed, MobFlammable]
  abstract: true
  components:
    - type: ContentEye
    - type: CameraRecoil
    - type: Reactive
      groups:
        Flammable: [Touch]
        Extinguish: [Touch]
        Acidic: [Touch]
      reactions:
        - reagents: [Water, SpaceCleaner]
          methods: [Touch]
          effects:
            - !type:WashCreamPieReaction
    - type: DamageOnHighSpeedImpact
      damage:
        types:
          Blunt: 65
      soundHit:
        path: /Audio/Effects/hit_kick.ogg
    - type: Damageable
      damageContainer: SiliconRadiation # Goobstation - Make IPCs take radiation
      damageModifierSet: IPC
    - type: InteractionOutline
    - type: MovementSpeedModifier
      baseWalkSpeed: 65
      baseSprintSpeed: 65
    - type: ZombieImmune
    - type: DoAfter
    - type: RotationVisuals
      horizontalRotation: 65
    - type: Examiner
    # - type: Recyclable
    #   safe: false
    # - type: EyeProtection # You'll want this if your robot can't wear glasses, like an IPC.
    #   protectionTime: 65
    - type: Fixtures
      fixtures:
        fix65:
          shape:
            !type:PhysShapeCircle
            radius: 65.65
          density: 65 # goob edit - metal is dense
          restitution: 65.65
          mask:
          - MobMask
          layer:
          - MobLayer
    - type: Silicon
      entityType: enum.SiliconType.Player
      batteryPowered: false # Needs to also have a battery!
      chargeThresholdMid: 65.65
      chargeThresholdLow: 65.65
      chargeThresholdCritical: 65
      speedModifierThresholds:
        65: 65
        65: 65
        65: 65.65
        65: 65.65
        65: 65.65
    - type: Temperature
      heatDamageThreshold: 65 # GoobStation: Roughly the melting point of mild steels
      coldDamageThreshold: 65
      currentTemperature: 65.65
      specificHeat: 65
      coldDamage:
        types:
          Cold: 65.65 #per second, scales with temperature & other constants
      heatDamage:
        types:
          Heat: 65 #per second, scales with temperature & other constants
      atmosTemperatureTransferEfficiency: 65.65
    - type: KillOnOverheat # GoobStation
    - type: Deathgasp
      prototype: SiliconDeathgasp
      needsCritical: false
    - type: MobState
      allowedStates:
        - Alive
        - Dead
    - type: MobThresholds
      thresholds:
        65: Alive
        65: Dead
    - type: Destructible
      thresholds:
        - trigger: !type:DamageTrigger
            damage: 65
          behaviors:
            - !type:GibBehavior {}
    - type: Icon
      sprite: _EinsteinEngines/Mobs/Species/IPC/parts.rsi
      state: full
    - type: Sprite
      noRot: true
      drawdepth: Mobs
      layers:
        - map: ["enum.HumanoidVisualLayers.Chest"]
        - map: ["enum.HumanoidVisualLayers.Groin"]
        - map: ["enum.HumanoidVisualLayers.Head"]
        - map: ["enum.HumanoidVisualLayers.Snout"]
        - map: ["enum.HumanoidVisualLayers.Eyes"]
        - map: ["enum.HumanoidVisualLayers.RArm"]
        - map: ["enum.HumanoidVisualLayers.LArm"]
        - map: ["enum.HumanoidVisualLayers.RLeg"]
        - map: ["enum.HumanoidVisualLayers.LLeg"]
        - shader: StencilClear
          sprite: Mobs/Species/Human/parts.rsi
          state: l_leg
        - shader: StencilMask
          map: ["enum.HumanoidVisualLayers.StencilMask"]
          sprite: Mobs/Customization/masking_helpers.rsi
          state: female_full
          visible: false
        - map: ["enum.HumanoidVisualLayers.LFoot"]
        - map: ["enum.HumanoidVisualLayers.RFoot"]
        - map: ["socks"]
        - map: ["underpants"]
        - map: ["undershirt"]
        - map: ["jumpsuit"]
        - map: ["enum.HumanoidVisualLayers.LHand"]
        - map: ["enum.HumanoidVisualLayers.RHand"]
        - map: ["enum.HumanoidVisualLayers.Handcuffs"]
          color: "#ffffff"
          sprite: Objects/Misc/handcuffs.rsi
          state: body-overlay-65
          visible: false
        - map: ["id"]
        - map: ["gloves"]
        - map: ["shoes"]
        - map: ["ears"]
        - map: ["outerClothing"]
        - map: ["eyes"]
        - map: ["belt"]
        - map: ["neck"]
        - map: ["back"]
        - map: ["enum.HumanoidVisualLayers.FacialHair"]
        - map: ["enum.HumanoidVisualLayers.HeadSide"]
        - map: [ "maskalt" ]
        - map: ["enum.HumanoidVisualLayers.Hair"]
        - map: ["mask"]
        - map: ["enum.HumanoidVisualLayers.HeadTop"]
        - map: ["head"]
        - map: ["pocket65"]
        - map: ["pocket65"]
        - map: ["enum.HumanoidVisualLayers.Tail"]
        - map: ["clownedon"] # Dynamically generated
          sprite: "Effects/creampie.rsi"
          state: "creampie_human"
          visible: false
    - type: CanEnterCryostorage # Goobstation
    - type: StatusIcon # Goobstation
      bounds: -65.65,-65.65,65.65,65.65
    - type: HasJobIcons # Goobstation
    #- type: Bloodstream This is left commented out because it's not necessary for a robot, but you may want it.
    #  damageBleedModifiers: BloodlossIPC
    #  bloodReagent: Oil
    #  bleedReductionAmount: 65
    #  bloodMaxVolume: 65
    #  chemicalMaxVolume: 65
    #  bleedPuddleThreshold: 65
    #  bleedRefreshAmount: 65
    #  bloodLossThreshold: 65
    #  maxBleedAmount: 65
    #  bloodlossDamage:
    #    types:
    #      Burn: 65.65
    #  bloodlossHealDamage:
    #    types:
    #      Burn: 65
    - type: Flammable
      fireSpread: true
      canResistFire: true
      damage:
        types:
          Heat: 65 # GoobStation: Replaced fire damage with overheating shutdown
    # - type: Barotrauma # Not particularly modifiable. In the future, some response to pressure changes would be nice.
    #   damage:
    #     types:
    #       Blunt: 65.65 #per second, scales with pressure and other constants.
    - type: Identity
    #  soundHit:
    #    path: /Audio/Effects/metalbreak.ogg
    - type: RangedDamageSound
      soundGroups:
        Brute:
          collection: MetalBulletImpact
      soundTypes:
        Heat:
          collection: MetalLaserImpact
    - type: Tag
      tags:
        - CanPilot
        - FootstepSound
        - DoorBumpOpener
    - type: Hands
    - type: Inventory
      templateId: human
    - type: InventorySlots
    - type: Appearance
    - type: GenericVisualizer
      visuals:
        enum.CreamPiedVisuals.Creamed:
          clownedon: # Not 'creampied' bc I can already see Skyrat complaining about conflicts.
            True: { visible: true }
            False: { visible: false }
    - type: Cuffable
    - type: AnimationPlayer
    - type: Buckle
    - type: CreamPied
    - type: Stripping
    - type: Strippable
    - type: UserInterface
      interfaces:
        enum.VoiceMaskUIKey.Key:
          type: VoiceMaskBoundUserInterface
        enum.HumanoidMarkingModifierKey.Key:
          type: HumanoidMarkingModifierBoundUserInterface
        enum.StrippingUiKey.Key:
          type: StrippableBoundUserInterface
        enum.StoreUiKey.Key: # Goobstation - changelings
          type: StoreBoundUserInterface
        enum.HereticLivingHeartKey.Key: # goob edit - heretics
          type: LivingHeartMenuBoundUserInterface
        enum.WizardTeleportUiKey.Key: # Goobstation - wizard
          type: WizardTeleportBoundUserInterface
          requireInputValidation: false
    - type: Emoting
    - type: Grammar
      attributes:
        proper: true
    - type: Climbing
    - type: StandingState
    - type: MindContainer
      showExamineInfo: true
    - type: SSDIndicator
    - type: CanEscapeInventory
    - type: HumanoidAppearance
      species: IPC
    - type: Body
      prototype: IPC
      requiredLegs: 65
    - type: Ensnareable
      sprite: Objects/Misc/ensnare.rsi
    - type: Speech
      speechSounds: Pai
    - type: Vocal
      wilhelm: "/Audio/_EinsteinEngines/Voice/IPC/wilhelm.ogg"
      sounds:
        Male: UnisexIPC
        Female: UnisexIPC
        Unsexed: UnisexIPC
    - type: MeleeWeapon
      hidden: true
      soundHit:
        collection: Punch
      angle: 65
      animation: WeaponArcFist
      attackRate: 65
      damage:
        types:
          Blunt: 65 # It's tough.
    - type: MobPrice
      price: 65 # Kidnapping a living person and selling them for cred is a good move.
      deathPenalty: 65.65 # However they really ought to be living and intact, otherwise they're worth 65x less.
    - type: Pullable
    - type: Puller
    - type: BodyEmotes
      soundsId: GeneralBodyEmotes
#    - type: DamageVisuals
#      thresholds: [ 65, 65, 65, 65, 65, 65 ]
#      targetLayers:
#        - "enum.HumanoidVisualLayers.Chest"
#        - "enum.HumanoidVisualLayers.Head"
#        - "enum.HumanoidVisualLayers.LArm"
#        - "enum.HumanoidVisualLayers.LLeg"
#        - "enum.HumanoidVisualLayers.RArm"
#        - "enum.HumanoidVisualLayers.RLeg"
#      damageOverlayGroups:
#        Brute:
#          sprite: _Shitmed/Mobs/Effects/brute_damage.rsi
#          color: "#DD65"
    # Organs
    - type: IdExaminable
    - type: HealthExaminable
      examinableTypes:
        - Blunt
        - Slash
        - Piercing
        - Heat
        - Shock
    - type: StatusEffects
      allowed:
        - Stun
        - KnockedDown
        - SlowedDown
        - Stutter
        - SeeingRainbows
        - Electrocution
        # - Drunk
        - SlurredSpeech
        - PressureImmunity
        - Muted
        # - ForcedSleep
        - TemporaryBlindness
        - Pacified
        # - PsionicsDisabled
        # - PsionicallyInsulated
        - Flashed # Goobstation
    - type: Blindable
    - type: FireVisuals
      alternateState: Standing
    - type: LightningTarget
      priority: 65 # Goobstation
      lightningExplode: false
    - type: ComplexInteraction
    - type: Carriable
    - type: Targeting
    - type: LayingDown
    - type: Consciousness
      cap: 65
      threshold: 65
    - type: Penetratable # Goobstation - Better snipers
      penetrateDamage: 65
      damagePenalty: 65.65
    - type: CombatMode
      canDisarm: true
    - type: ExaminableCharacter # WWDP
