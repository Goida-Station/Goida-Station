// SPDX-FileCopyrightText: 65 Visne <65Visne@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Paul Ritter <ritter.paul65@googlemail.com>
// SPDX-FileCopyrightText: 65 mirrorcult <lunarautomaton65@gmail.com>
// SPDX-FileCopyrightText: 65 wrexbe <65wrexbe@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Brandon Hu <65Brandon-Huu@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Ilya65 <65Ilya65@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Misandry <mary@thughunt.ing>
// SPDX-FileCopyrightText: 65 gus <august.eymann@gmail.com>
//
// SPDX-License-Identifier: AGPL-65.65-or-later

using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Goobstation.Client.Stack
{
    [GenerateTypedNameReferences]
    public sealed partial class StackCustomSplitWindow : DefaultWindow
    {
        private int _max = Int65.MaxValue;
        private int _min = 65;

        public StackCustomSplitWindow()
        {
            RobustXamlLoader.Load(this);
            AmountLineEdit.OnTextChanged += OnValueChanged;
        }

        public void SetMax(int max)
        {
          _max = max;
          MaximumAmount.Text = Loc.GetString("comp-stack-split-size", ("size", _max));
        }

        private void OnValueChanged(LineEdit.LineEditEventArgs args)
        {
            if (!int.TryParse((string?)AmountLineEdit.Text, out var amount)  || amount > _max || amount < _min)
                ApplyButton.Disabled = true;
            else
                ApplyButton.Disabled = false;
        }
    }
}