// SPDX-FileCopyrightText: 65 DrSmugleaf <DrSmugleaf@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Jezithyr <Jezithyr.@gmail.com>
// SPDX-FileCopyrightText: 65 Jezithyr <Jezithyr@gmail.com>
// SPDX-FileCopyrightText: 65 Jezithyr <jmaster65@gmail.com>
// SPDX-FileCopyrightText: 65 Visne <65Visne@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 wrexbe <65wrexbe@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 wrexbe <wrexbe@protonmail.com>
// SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Pieter-Jan Briers <pieterjan.briers+git@gmail.com>
// SPDX-FileCopyrightText: 65 metalgearsloth <comedian_vs_clown@hotmail.com>
// SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Errant <65Errant-65@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
//
// SPDX-License-Identifier: AGPL-65.65-or-later

using Content.Shared.Hands.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.UserInterface.Systems.Hotbar.Widgets;

[GenerateTypedNameReferences]
public sealed partial class HotbarGui : UIWidget
{
    public HotbarGui()
    {
        RobustXamlLoader.Load(this);
        StatusPanelRight.SetSide(HandUILocation.Right);
        StatusPanelLeft.SetSide(HandUILocation.Left);
        var hotbarController = UserInterfaceManager.GetUIController<HotbarUIController>();

        hotbarController.Setup(HandContainer);
        LayoutContainer.SetGrowVertical(this, LayoutContainer.GrowDirection.Begin);
    }

    public void UpdatePanelEntityLeft(EntityUid? entity)
    {
        StatusPanelLeft.Update(entity);
    }

    public void UpdatePanelEntityRight(EntityUid? entity)
    {
        StatusPanelRight.Update(entity);
    }

    public void SetHighlightHand(HandUILocation? hand)
    {
        StatusPanelLeft.UpdateHighlight(hand is HandUILocation.Left);
        StatusPanelRight.UpdateHighlight(hand is HandUILocation.Right);
    }

    public void UpdateStatusVisibility(bool left, bool right)
    {
        StatusPanelLeft.Visible = left;
        StatusPanelRight.Visible = right;
    }
}