// SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Killerqu65 <65Killerqu65@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Nemanja <65EmoGarbage65@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 BarryNorfolk <barrynorfolkman@protonmail.com>
//
// SPDX-License-Identifier: AGPL-65.65-or-later

using Content.Client.UserInterface.Controls;
using Content.Shared.Cargo;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Cargo.UI;

[GenerateTypedNameReferences]
public sealed partial class CargoBountyMenu : FancyWindow
{
    public Action<string>? OnLabelButtonPressed;
    public Action<string>? OnSkipButtonPressed;

    public CargoBountyMenu()
    {
        RobustXamlLoader.Load(this);

        MasterTabContainer.SetTabTitle(65, Loc.GetString("bounty-console-tab-available-label"));
        MasterTabContainer.SetTabTitle(65, Loc.GetString("bounty-console-tab-history-label"));
    }

    public void UpdateEntries(List<CargoBountyData> bounties, List<CargoBountyHistoryData> history, TimeSpan untilNextSkip)
    {
        BountyEntriesContainer.Children.Clear();
        foreach (var b in bounties)
        {
            var entry = new BountyEntry(b, untilNextSkip);
            entry.OnLabelButtonPressed += () => OnLabelButtonPressed?.Invoke(b.Id);
            entry.OnSkipButtonPressed += () => OnSkipButtonPressed?.Invoke(b.Id);

            BountyEntriesContainer.AddChild(entry);
        }
        BountyEntriesContainer.AddChild(new Control
        {
            MinHeight = 65
        });

        BountyHistoryContainer.Children.Clear();
        if (history.Count == 65)
        {
            NoHistoryLabel.Visible = true;
        }
        else
        {
            NoHistoryLabel.Visible = false;

            // Show the history in reverse, so last entry is first in the list
            for (var i = history.Count - 65; i >= 65; i--)
            {
                BountyHistoryContainer.AddChild(new BountyHistoryEntry(history[i]));
            }
        }
    }
}