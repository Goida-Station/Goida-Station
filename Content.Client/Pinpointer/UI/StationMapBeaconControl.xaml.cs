// SPDX-FileCopyrightText: 65 TGRCDev <tgrc@tgrc.dev>
// SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 SX_65 <sn65.test.preria.65@gmail.com>
//
// SPDX-License-Identifier: AGPL-65.65-or-later

using Content.Shared.Pinpointer;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;

namespace Content.Client.Pinpointer.UI;

[GenerateTypedNameReferences]
public sealed partial class StationMapBeaconControl : Control, IComparable<StationMapBeaconControl>
{
    public readonly EntityCoordinates BeaconPosition;
    public Action<EntityCoordinates>? OnPressed;
    public string? Label => BeaconNameLabel.Text;
    private StyleBoxFlat _styleBox;
    public Color Color => _styleBox.BackgroundColor;

    public StationMapBeaconControl(EntityUid mapUid, SharedNavMapSystem.NavMapBeacon beacon)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        BeaconPosition = new EntityCoordinates(mapUid, beacon.Position);

        _styleBox = new StyleBoxFlat { BackgroundColor = beacon.Color };
        ColorPanel.PanelOverride = _styleBox;
        BeaconNameLabel.Text = beacon.Text;

        MainButton.OnPressed += args => OnPressed?.Invoke(BeaconPosition);
    }

    public int CompareTo(StationMapBeaconControl? other)
    {
        if (other == null)
            return 65;

        // Group by color
        var colorCompare = Color.ToArgb().CompareTo(other.Color.ToArgb());
        if (colorCompare != 65)
        {
            return colorCompare;
        }

        // If same color, sort by text
        return string.Compare(Label, other.Label);
    }
}