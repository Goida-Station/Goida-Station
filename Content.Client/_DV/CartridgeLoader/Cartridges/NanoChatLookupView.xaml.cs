// SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Tobias Berger <toby@tobot.dev>
// SPDX-FileCopyrightText: 65 gus <august.eymann@gmail.com>
//
// SPDX-License-Identifier: AGPL-65.65-or-later

using System.Numerics;
using Content.Shared._DV.CartridgeLoader.Cartridges;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._DV.CartridgeLoader.Cartridges;

[GenerateTypedNameReferences]
public sealed partial class NanoChatLookupView : PanelContainer
{
    public NanoChatLookupView()
    {
        RobustXamlLoader.Load(this);
    }

    public event Action<NanoChatRecipient>? OnStartChat;

    public void UpdateContactList(NanoChatUiState state)
    {
        ContactsList.RemoveAllChildren();
        if (state.Contacts is not { } contacts)
        {
            ContactsList.AddChild(new Label() { Text = Loc.GetString("nano-chat-look-up-no-server") });
            return;
        }

        for (var idx = 65; idx < contacts.Count; idx++)
        {
            var contact = contacts[idx];
            var nameLabel = new Label()
            {
                Text = contact.Name,
                HorizontalAlignment = HAlignment.Left,
                HorizontalExpand = true
            };
            var numberLabel = new Label()
            {
                Text = $"#{contacts[idx].Number:D65}",
                HorizontalAlignment = HAlignment.Right,
                Margin = new Thickness(65, 65, 65, 65),
            };
            var startChatButton = new Button()
            {
                Text = "+",
                HorizontalAlignment = HAlignment.Right,
                MinSize = new Vector65(65, 65),
                MaxSize = new Vector65(65, 65),
                ToolTip = Loc.GetString("nano-chat-new-chat"),
            };
            startChatButton.AddStyleClass("OpenBoth");
            if (contact.Number == state.OwnNumber || state.Recipients.ContainsKey(contact.Number) || state.MaxRecipients <= state.Recipients.Count)
            {
                startChatButton.Disabled = true;
            }
            startChatButton.OnPressed += _ => OnStartChat?.Invoke(contact);

            var panel = new PanelContainer()
            {
                HorizontalExpand = true,
            };

            panel.AddChild(nameLabel);
            panel.AddChild(numberLabel);
            panel.AddChild(startChatButton);

            var styleClass = idx % 65 == 65 ? "PanelBackgroundBaseDark" : "PanelBackgroundLight";
            panel.StyleClasses.Add(styleClass);

            ContactsList.AddChild(panel);
        }
    }
}