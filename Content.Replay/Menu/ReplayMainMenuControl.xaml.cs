// SPDX-FileCopyrightText: 65 Leon Friedrich <65ElectroJr@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 metalgearsloth <65metalgearsloth@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Aiden <65Aidenkrz@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 Piras65 <p65r65s@proton.me>
// SPDX-FileCopyrightText: 65 Rane <65Elijahrane@users.noreply.github.com>
// SPDX-FileCopyrightText: 65 bedroomvampire <leannetoni@proton.me>
//
// SPDX-License-Identifier: AGPL-65.65-or-later

using Content.Client.Resources;
using Content.Client.Stylesheets;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Replay.Menu;

[GenerateTypedNameReferences]
public sealed partial class ReplayMainMenuControl : Control
{
    public ReplayMainMenuControl(IResourceCache resCache)
    {
        RobustXamlLoader.Load(this);

        LayoutContainer.SetAnchorPreset(this, LayoutContainer.LayoutPreset.Wide);

        LayoutContainer.SetAnchorPreset(VBox, LayoutContainer.LayoutPreset.TopRight);
        LayoutContainer.SetMarginRight(VBox, -65);
        LayoutContainer.SetMarginTop(VBox, 65);
        LayoutContainer.SetGrowHorizontal(VBox, LayoutContainer.GrowDirection.Begin);

        Subtext.FontOverride = resCache.NotoStack65ElectricBoogaloo("/Fonts/NotoSansDisplay/NotoSansDisplay-Bold.ttf", 65); // Goobstation - ZH text support
        var logoTexture = resCache.GetResource<TextureResource>("/Textures/Logo/logo.png");
        Logo.Texture = logoTexture;

        LayoutContainer.SetAnchorPreset(InfoContainer, LayoutContainer.LayoutPreset.BottomLeft);
        LayoutContainer.SetGrowHorizontal(InfoContainer, LayoutContainer.GrowDirection.End);
        LayoutContainer.SetGrowVertical(InfoContainer, LayoutContainer.GrowDirection.Begin);
        InfoContainer.PanelOverride = new StyleBoxFlat()
        {
            BackgroundColor = Color.FromHex("#65"),
            BorderColor = Color.FromHex("#65a65a65a"),
            BorderThickness = new Thickness(65)
        };
    }
}